{
	"contractName": "SolnSquareVerifier",
	"abi": [
		{
			"constant": true,
			"inputs": [
				{
					"name": "interfaceId",
					"type": "bytes4"
				}
			],
			"name": "supportsInterface",
			"outputs": [
				{
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "getApproved",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "to",
					"type": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getSymbol",
			"outputs": [
				{
					"name": "",
					"type": "string"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "value",
					"type": "bool"
				}
			],
			"name": "setPaused",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getName",
			"outputs": [
				{
					"name": "",
					"type": "string"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "from",
					"type": "address"
				},
				{
					"name": "to",
					"type": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_myid",
					"type": "bytes32"
				},
				{
					"name": "_result",
					"type": "string"
				}
			],
			"name": "__callback",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "owner",
					"type": "address"
				},
				{
					"name": "index",
					"type": "uint256"
				}
			],
			"name": "tokenOfOwnerByIndex",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_myid",
					"type": "bytes32"
				},
				{
					"name": "_result",
					"type": "string"
				},
				{
					"name": "_proof",
					"type": "bytes"
				}
			],
			"name": "__callback",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "to",
					"type": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [
				{
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "from",
					"type": "address"
				},
				{
					"name": "to",
					"type": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "safeTransferFrom",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "index",
					"type": "uint256"
				}
			],
			"name": "tokenByIndex",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "a",
					"type": "uint256[2]"
				},
				{
					"name": "b",
					"type": "uint256[2][2]"
				},
				{
					"name": "c",
					"type": "uint256[2]"
				},
				{
					"name": "input",
					"type": "uint256[2]"
				}
			],
			"name": "verifyTx",
			"outputs": [
				{
					"name": "r",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "ownerOf",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "owner",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getOwner",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "to",
					"type": "address"
				},
				{
					"name": "approved",
					"type": "bool"
				}
			],
			"name": "setApprovalForAll",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "from",
					"type": "address"
				},
				{
					"name": "to",
					"type": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256"
				},
				{
					"name": "_data",
					"type": "bytes"
				}
			],
			"name": "safeTransferFrom",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getBaseTokenURI",
			"outputs": [
				{
					"name": "",
					"type": "string"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "tokenURI",
			"outputs": [
				{
					"name": "",
					"type": "string"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "owner",
					"type": "address"
				},
				{
					"name": "operator",
					"type": "address"
				}
			],
			"name": "isApprovedForAll",
			"outputs": [
				{
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"name": "key",
					"type": "bytes32"
				},
				{
					"indexed": false,
					"name": "sender",
					"type": "address"
				}
			],
			"name": "AddedSolution",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "to",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "approved",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "operator",
					"type": "address"
				},
				{
					"indexed": false,
					"name": "approved",
					"type": "bool"
				}
			],
			"name": "ApprovalForAll",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"name": "caller",
					"type": "address"
				}
			],
			"name": "Paused",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"name": "caller",
					"type": "address"
				}
			],
			"name": "Unpaused",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"name": "nextOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"name": "s",
					"type": "string"
				}
			],
			"name": "Verified",
			"type": "event"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "to",
					"type": "address"
				},
				{
					"name": "tokenId",
					"type": "uint256"
				},
				{
					"name": "a",
					"type": "uint256[2]"
				},
				{
					"name": "b",
					"type": "uint256[2][2]"
				},
				{
					"name": "c",
					"type": "uint256[2]"
				},
				{
					"name": "inputs",
					"type": "uint256[2]"
				}
			],
			"name": "mintVerified",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"mintVerified\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AddedSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"nextOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x770581dc35df2a2965edbbe891a364fb16ac6f1cbdb0f83412fada53e27ad949\",\"urls\":[\"bzzr://293df90f2b6ca0fcfb7b078974938c915332d68c9bddb008f2d7b27975bad921\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0x4ec4548e44b4ecb4b5565405f40455151bddce56032f6995ef5e4bf9de025205\",\"urls\":[\"bzzr://b1db157ee182e1184d0f9a8fc81adac7b01610d517389e286b27bebe6d49bb76\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x2697f515eefd73cf6d52f92fe3ec5a228b7ac4bb39f495f35cbff831835f5e93\",\"urls\":[\"bzzr://91b1ffaf6f70bf741edbcd97ffd16ae6ddac4e32ddece402d9f569513f8e224a\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x9f6aa3e50201b5a8087ee61fe406c7a7f9a1e792da588d808bf682a0ee2eff9c\",\"urls\":[\"bzzr://e112664044911a8d25cc19437a95e0e2296ab2f2629a8526cce421ed1c3a1441\"]}},\"version\":1}",
	"bytecode": "0x60806040526040518060600160405280603f815260200162004ca9603f913960139080519060200190620000359291906200055b565b506040518060400160405280600f81526020017f5265616c457374617465546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f5245540000000000000000000000000000000000000000000000000000000000815250818160138054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200013e5780601f1062000112576101008083540402835291602001916200013e565b820191906000526020600020905b8154815290600101906020018083116200012057829003601f168201915b5050505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16200021960006200031060201b60201c565b620002316301ffc9a760e01b620004b960201b60201c565b620002496380ac58cd60e01b620004b960201b60201c565b6200026163780e9d6360e01b620004b960201b60201c565b82600f9080519060200190620002799291906200055b565b508160109080519060200190620002929291906200055b565b508060119080519060200190620002ab9291906200055b565b50620002c4635b5e139f60e01b620004b960201b60201c565b50505033601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200060a565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620003b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018062004c886021913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff161562000452577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1620004b6565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515620004ef57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200059e57805160ff1916838001178555620005cf565b82800160010185558215620005cf579182015b82811115620005ce578251825591602001919060010190620005b1565b5b509050620005de9190620005e2565b5090565b6200060791905b8082111562000603576000816000905550600101620005e9565b5090565b90565b61466e806200061a6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806342842e0e116100de578063a22cb46511610097578063bdc32be011610071578063bdc32be014610d5d578063c87b56dd14610de0578063e985e9c514610e87578063f2fde38b14610f0357610173565b8063a22cb46514610a7d578063b8395aec14610acd578063b88d4fde14610c5857610173565b806342842e0e146107445780634f6ccce7146107b2578063621e9ec0146107f45780636352211e1461096d57806370a08231146109db578063893d20e814610a3357610173565b806318160ddd1161013057806318160ddd146103cf57806323b872dd146103ed57806327dc297e1461045b5780632f745c591461052057806338bbfa501461058257806340c10f19146106de57610173565b806301ffc9a714610178578063081812fc146101dd578063095ea7b31461024b578063150704011461029957806316c38b3c1461031c57806317d7de7c1461034c575b600080fd5b6101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f47565b604051808215151515815260200191505060405180910390f35b610209600480360360208110156101f357600080fd5b8101908080359060200190929190505050610faf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102976004803603604081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611069565b005b6102a16112a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e15780820151818401526020810190506102c6565b50505050905090810190601f16801561030e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61034a6004803603602081101561033257600080fd5b81019080803515159060200190929190505050611348565b005b6103546114ed565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610394578082015181840152602081019050610379565b50505050905090810190601f1680156103c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103d761158f565b6040518082815260200191505060405180910390f35b6104596004803603606081101561040357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061159c565b005b61051e6004803603604081101561047157600080fd5b81019080803590602001909291908035906020019064010000000081111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111640100000000831117156104cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115c1565b005b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611604565b6040518082815260200191505060405180910390f35b6106dc6004803603606081101561059857600080fd5b8101908080359060200190929190803590602001906401000000008111156105bf57600080fd5b8201836020820111156105d157600080fd5b803590602001918460018302840111640100000000831117156105f357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061167b565b005b61072a600480360360408110156106f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061169e565b604051808215151515815260200191505060405180910390f35b6107b06004803603606081101561075a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117e9565b005b6107de600480360360208110156107c857600080fd5b8101908080359060200190929190505050611809565b6040518082815260200191505060405180910390f35b610953600480360361014081101561080b57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108c0578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508152602001906001019061086c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611841565b604051808215151515815260200191505060405180910390f35b6109996004803603602081101561098357600080fd5b8101908080359060200190929190505050611aa6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a1d600480360360208110156109f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ae3565b6040518082815260200191505060405180910390f35b610a3b611b33565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610acb60048036036040811015610a9357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b5c565b005b610c566004803603610180811015610ae457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610bc3578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610b6f565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611c98565b005b610d5b60048036036080811015610c6e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610cd557600080fd5b820183602082011115610ce757600080fd5b80359060200191846001830284011164010000000083111715610d0957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ed5565b005b610d65611efd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610da5578082015181840152602081019050610d8a565b50505050905090810190601f168015610dd25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e0c60048036036020811015610df657600080fd5b8101908080359060200190929190505050611f9f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e4c578082015181840152602081019050610e31565b50505050905090810190601f168015610e795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ee960048036036040811015610e9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612068565b604051808215151515815260200191505060405180910390f35b610f4560048036036020811015610f1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120fc565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610fba826122d1565b151561102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526571756972657320746f6b656e2061637475616c6c7920657869737473000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611123576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806145c96038913960400191505060405180910390fd5b61112b611b33565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158061116b575061116a3383612068565b5b15156111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260428152602001806146016042913960600191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133e5780601f106113135761010080835404028352916020019161133e565b820191906000526020600020905b81548152906001019060200180831161132157829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145616021913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611486577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16114ea565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115855780601f1061155a57610100808354040283529160200191611585565b820191906000526020600020905b81548152906001019060200180831161156857829003601f168201915b5050505050905090565b6000600880549050905090565b6115a63382612343565b15156115b157600080fd5b6115bc8383836123d8565b505050565b611600828260006040519080825280601f01601f1916602001820160405280156115fa5781602001600182028038833980820191505090505b5061167b565b5050565b600061160f83611ae3565b8210151561161c57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561166857fe5b9060005260206000200154905092915050565b6000801b600d60008060001b815260200190815260200160002081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611747576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145616021913960400191505060405180910390fd5b600060149054906101000a900460ff161515156117cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526571756972657320636f6e7472616374206973206e6f74207061757365640081525060200191505060405180910390fd5b6117d683836123fc565b6117df8261241d565b6001905092915050565b61180483838360405180602001604052806000815250611ed5565b505050565b600061181361158f565b8210151561182057600080fd5b60088281548110151561182f57fe5b90600052602060002001549050919050565b600061184b61430b565b604051806040016040528087600060028110151561186557fe5b6020020151815260200187600160028110151561187e57fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811015156118b357fe5b602002015160006002811015156118c657fe5b602002015181526020018860006002811015156118df57fe5b602002015160016002811015156118f257fe5b60200201518152508152602001604051806040016040528088600160028110151561191957fe5b6020020151600060028110151561192c57fe5b6020020151815260200188600160028110151561194557fe5b6020020151600160028110151561195857fe5b60200201518152508152508160200181905250604051806040016040528085600060028110151561198557fe5b6020020151815260200185600160028110151561199e57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156119e05781602001602082028038833980820191505090505b50905060008090505b6002811015611a2e578481600281101515611a0057fe5b60200201518282815181101515611a1357fe5b906020019060200201818152505080806001019150506119e9565b506000611a3b8284612570565b1415611a97577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001806145826022913960400191505060405180910390a1600192505050611a9e565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b2c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206126f8565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b9757600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000848484846040516020018085600260200280838360005b83811015611ccc578082015181840152602081019050611cb1565b505050509050018460026000925b81841015611d205782846020020151600260200280838360005b83811015611d0f578082015181840152602081019050611cf4565b505050509050019260010192611cda565b9250505083600260200280838360005b83811015611d4b578082015181840152602081019050611d30565b5050505090500182600260200280838360005b83811015611d79578082015181840152602081019050611d5e565b505050509050019450505050506040516020818303038152906040528051906020012090506015600082815260200190815260200160002060000160009054906101000a900460ff16151515611e37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b611e4385858585611841565b1515611eb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f50726f6f66206973206e6f74205a6f6b72617465732076616c6964000000000081525060200191505060405180910390fd5b611ec18133612706565b611ecb878761169e565b5050505050505050565b611ee084848461159c565b611eec84848484612892565b1515611ef757600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f955780601f10611f6a57610100808354040283529160200191611f95565b820191906000526020600020905b815481529060010190602001808311611f7857829003601f168201915b5050505050905090565b6060611faa826122d1565b1515611fb557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561205c5780601f106120315761010080835404028352916020019161205c565b820191906000526020600020905b81548152906001019060200180831161203f57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145616021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561222b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061453b6026913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616381604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061234f83611aa6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806123be57508373ffffffffffffffffffffffffffffffffffffffff166123a684610faf565b73ffffffffffffffffffffffffffffffffffffffff16145b806123cf57506123ce8185612068565b5b91505092915050565b6123e3838383612a7d565b6123ed8382612d41565b6123f78282612ee5565b505050565b6124068282612fac565b6124108282612ee5565b612419816131ab565b5050565b612426816122d1565b151561249a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f526571756972657320746f6b656e20657869737473000000000000000000000081525060200191505060405180910390fd5b61254660118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125335780601f1061250857610100808354040283529160200191612533565b820191906000526020600020905b81548152906001019060200180831161251657829003601f168201915b5050505050612541836131f7565b613331565b60126000838152602001908152602001600020908051906020019061256c92919061433f565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905061259e6143bf565b6125a6613375565b905080608001515160018651011415156125bf57600080fd5b6125c7614407565b6040518060400160405280600081526020016000815250905060008090505b865181101561266b578387828151811015156125fe57fe5b9060200190602002015110151561261457600080fd5b61265c8261265785608001516001850181518110151561263057fe5b906020019060200201518a8581518110151561264857fe5b906020019060200201516137cf565b61386b565b915080806001019150506125e6565b50612692818360800151600081518110151561268357fe5b9060200190602002015161386b565b90506126d8856000015186602001516126aa84613928565b85604001516126bc8a60400151613928565b87606001516126ce8960000151613928565b89602001516139c4565b15156126ea57600193505050506126f2565b600093505050505b92915050565b600081600001549050919050565b6015600083815260200190815260200160002060000160009054906101000a900460ff1615151561279f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b60016015600084815260200190815260200160002060000160006101000a81548160ff021916908315150217905550806015600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f794f800bcc1704bbac3deeba70adfa76e678654f9b36f11b1e02eeb99c498ea08282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b60006128b38473ffffffffffffffffffffffffffffffffffffffff16613b48565b15156128c25760019050612a75565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561299d578082015181840152602081019050612982565b50505050905090810190601f1680156129ca5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156129ec57600080fd5b505af1158015612a00573d6000803e3d6000fd5b505050506040513d6020811015612a1657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515612b53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5265717569726573206f776e65722069732073656e646572000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612bf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f52657175697265732061646472657373206973206e6f7420656d70747900000081525060200191505060405180910390fd5b612c0181613b93565b612c48600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c53565b612c8f600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c69565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612d996001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613c8c90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612e8c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e0a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e6457fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612ede9190614421565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612fb5816122d1565b15151561300d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806145a46025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156130b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5265717569726573206164646472657373206973206e6f7420656d707479000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061314b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c53565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561323f576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061332c565b600082905060005b60008214151561326d578080600101915050600a8281151561326557fe5b049150613247565b6060816040519080825280601f01601f1916602001820160405280156132a25781602001600182028038833980820191505090505b50905060006001830390505b60008614151561332457600a868115156132c457fe5b0660300160f81b8282806001900393508151811015156132e057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561331c57fe5b0495506132ae565b819450505050505b919050565b606061336d8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613cd6565b905092915050565b61337d6143bf565b60405180604001604052807f15dbf86cf49c8fb3cea1bf79752eee1e4f8607fedc5a8756d155b67dc181964081526020017f09865873e4e75c7fc93eb3c87b93f3bfc16025f42e10fdfbe6e90b7df4ba38798152508160000181905250604051806040016040528060405180604001604052807f0f3520f3bdc2900eb56b84b098ffd8087fab2298d50c08c1adda952af8bcbaed81526020017f29fcb850828e4c051eefb3cacd794d8129ae655b647318b12c40900aba23e278815250815260200160405180604001604052807f0b5d45db4177dc6e0bd19830eab33c42f44888751a710ea48e3bc0da70b0f9cf81526020017f2c1436f5469c7d31deb22bde2392b8b336494f67a3bd8386926f4d6013ecc4c78152508152508160200181905250604051806040016040528060405180604001604052807f2e3dfc112b9842ca1db3f531bff67da12448ca2535eb4c4a06f8419870f1164981526020017f111f2157df84fde4acb087ceffabf4cc6d9145eaac3e05ee66765a4fef06df3c815250815260200160405180604001604052807f2aabde8133f444ee7cadb79cd1c8cf84362ced5dbd35125c425d46336262cfb381526020017f1c343e7d0c14fbf7a0b64c980e618c4fa4dc4b7d13ae859dd3d540d7fed7ecb08152508152508160400181905250604051806040016040528060405180604001604052807f1dff659cb515b093f5244759700741c97e9516bcb741e34f3be96f366677921981526020017f25bf921b76b77f3eb483c754c09a4d4faffb377f10014a4a842575a4a43dec0e815250815260200160405180604001604052807f1a2d788c9018d3f0b45655f8f0d2baa25c68fa38980efb6ed8f7006667b18ee581526020017f28acc13db42fbc3017c1d127168d8e0cf8a4c88751373619c64d7dd41e1c9fd48152508152508160600181905250600360405190808252806020026020018201604052801561366457816020015b61365161444d565b8152602001906001900390816136495790505b50816080018190525060405180604001604052807f24e8b817a42465c45800700f0851d74fca77c955988599260317c3f3a5f1c08681526020017f14b5a05b308b2577fdbb32e0925fd1af3061b1b498d7653ab468b7fec4907229815250816080015160008151811015156136d557fe5b9060200190602002018190525060405180604001604052807f1b25e1b5ce2d624691106a0a1d7016ad0f8d7eeebd28f095e411b84a164f264081526020017f10b3d5e0968b7f0119df82f9583660b64d9c811a0241792c7b57c22d8c8f8dbf8152508160800151600181518110151561374a57fe5b9060200190602002018190525060405180604001604052807f10047f0e793de0ca1a85d78759a5162f816efe7ff34caf9eff511cec281c0bfe81526020017f1810f53f1538efea7cf23a084cc2252586eb408607c4bde7b5f70907896eda01815250816080015160028151811015156137bf57fe5b9060200190602002018190525090565b6137d7614407565b6137df614467565b83600001518160006003811015156137f357fe5b602002018181525050836020015181600160038110151561381057fe5b6020020181815250508281600260038110151561382957fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461385457613856565bfe5b5080151561386357600080fd5b505092915050565b613873614407565b61387b614489565b836000015181600060048110151561388f57fe5b60200201818152505083602001518160016004811015156138ac57fe5b60200201818152505082600001518160026004811015156138c957fe5b60200201818152505082602001518160036004811015156138e657fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461391157613913565bfe5b5080151561392057600080fd5b505092915050565b613930614407565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561396d575060008360200151145b156139915760405180604001604052806000815260200160008152509150506139bf565b6040518060400160405280846000015181526020018285602001518115156139b557fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613a0357816020015b6139f061444d565b8152602001906001900390816139e85790505b50905060606004604051908082528060200260200182016040528015613a4357816020015b613a306144ab565b815260200190600190039081613a285790505b5090508a826000815181101515613a5657fe5b9060200190602002018190525088826001815181101515613a7357fe5b9060200190602002018190525086826002815181101515613a9057fe5b9060200190602002018190525084826003815181101515613aad57fe5b9060200190602002018190525089816000815181101515613aca57fe5b9060200190602002018190525087816001815181101515613ae757fe5b9060200190602002018190525085816002815181101515613b0457fe5b9060200190602002018190525083816003815181101515613b2157fe5b90602001906020020181905250613b388282613fb6565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613b8a57506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613c505760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b613c8160018260000154613c8c90919063ffffffff16565b816000018190555050565b6000613cce83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614249565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613d325781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613dbd578881815181101515613d6057fe5b90602001015160f81c60f81b8383806001019450815181101515613d8057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613d49565b600090505b8751811015613e36578781815181101515613dd957fe5b90602001015160f81c60f81b8383806001019450815181101515613df957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613dc2565b600090505b8651811015613eaf578681815181101515613e5257fe5b90602001015160f81c60f81b8383806001019450815181101515613e7257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613e3b565b600090505b8551811015613f28578581815181101515613ecb57fe5b90602001015160f81c60f81b8383806001019450815181101515613eeb57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613eb4565b600090505b8451811015613fa1578481815181101515613f4457fe5b90602001015160f81c60f81b8383806001019450815181101515613f6457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f2d565b82995050505050505050505095945050505050565b600081518351141515613fc857600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156140075781602001602082028038833980820191505090505b50905060008090505b838110156141e557868181518110151561402657fe5b9060200190602002015160000151826000600684020181518110151561404857fe5b9060200190602002018181525050868181518110151561406457fe5b9060200190602002015160200151826001600684020181518110151561408657fe5b906020019060200201818152505085818151811015156140a257fe5b906020019060200201516000015160006002811015156140be57fe5b602002015182600260068402018151811015156140d757fe5b906020019060200201818152505085818151811015156140f357fe5b9060200190602002015160000151600160028110151561410f57fe5b6020020151826003600684020181518110151561412857fe5b9060200190602002018181525050858181518110151561414457fe5b9060200190602002015160200151600060028110151561416057fe5b6020020151826004600684020181518110151561417957fe5b9060200190602002018181525050858181518110151561419557fe5b906020019060200201516020015160016002811015156141b157fe5b602002015182600560068402018151811015156141ca57fe5b90602001906020020181815250508080600101915050614010565b506141ee6144d1565b60006020826020860260208601600060086107d05a03f19050806000811461421557614217565bfe5b5080151561422457600080fd5b600082600060018110151561423557fe5b602002015114159550505050505092915050565b600083831115829015156142f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156142bd5780820151818401526020810190506142a2565b50505050905090810190601f1680156142ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60405180610100016040528061431f61444d565b815260200161432c6144ab565b815260200161433961444d565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061438057805160ff19168380011785556143ae565b828001600101855582156143ae579182015b828111156143ad578251825591602001919060010190614392565b5b5090506143bb91906144f3565b5090565b604051806101e001604052806143d361444d565b81526020016143e06144ab565b81526020016143ed6144ab565b81526020016143fa6144ab565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156144485781836000526020600020918201910161444791906144f3565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806144be614518565b81526020016144cb614518565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61451591905b808211156145115760008160009055506001016144f9565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe5265717569726573206e65774f776e6572206973206e6f7420656d707479206164647265737352657175697265732073656e64657220697320636f6e7472616374206f776e65725472616e73616374696f6e207375636365737366756c6c792076657269666965642e526571756972657320746f6b656e20646f6573206e6f7420616c72656164792065786973745265717569726573207472616e7366657220746f206120646966666572656e742061646472657373207468616e207468652073656e6465725265717569726573206d6573736167652073656e64657220746f206265206f776e6572206f7220617070726f76616c20666f7220616c6c20746f2062652074727565a165627a7a72305820c3e4eeec88edf989c5f9d02a044cd26210ad411f6dc59dc3ab8c5c59f03f97d1002952657175697265732073656e64657220697320636f6e7472616374206f776e657268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806342842e0e116100de578063a22cb46511610097578063bdc32be011610071578063bdc32be014610d5d578063c87b56dd14610de0578063e985e9c514610e87578063f2fde38b14610f0357610173565b8063a22cb46514610a7d578063b8395aec14610acd578063b88d4fde14610c5857610173565b806342842e0e146107445780634f6ccce7146107b2578063621e9ec0146107f45780636352211e1461096d57806370a08231146109db578063893d20e814610a3357610173565b806318160ddd1161013057806318160ddd146103cf57806323b872dd146103ed57806327dc297e1461045b5780632f745c591461052057806338bbfa501461058257806340c10f19146106de57610173565b806301ffc9a714610178578063081812fc146101dd578063095ea7b31461024b578063150704011461029957806316c38b3c1461031c57806317d7de7c1461034c575b600080fd5b6101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f47565b604051808215151515815260200191505060405180910390f35b610209600480360360208110156101f357600080fd5b8101908080359060200190929190505050610faf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102976004803603604081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611069565b005b6102a16112a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e15780820151818401526020810190506102c6565b50505050905090810190601f16801561030e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61034a6004803603602081101561033257600080fd5b81019080803515159060200190929190505050611348565b005b6103546114ed565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610394578082015181840152602081019050610379565b50505050905090810190601f1680156103c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103d761158f565b6040518082815260200191505060405180910390f35b6104596004803603606081101561040357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061159c565b005b61051e6004803603604081101561047157600080fd5b81019080803590602001909291908035906020019064010000000081111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111640100000000831117156104cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115c1565b005b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611604565b6040518082815260200191505060405180910390f35b6106dc6004803603606081101561059857600080fd5b8101908080359060200190929190803590602001906401000000008111156105bf57600080fd5b8201836020820111156105d157600080fd5b803590602001918460018302840111640100000000831117156105f357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061167b565b005b61072a600480360360408110156106f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061169e565b604051808215151515815260200191505060405180910390f35b6107b06004803603606081101561075a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117e9565b005b6107de600480360360208110156107c857600080fd5b8101908080359060200190929190505050611809565b6040518082815260200191505060405180910390f35b610953600480360361014081101561080b57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108c0578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508152602001906001019061086c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611841565b604051808215151515815260200191505060405180910390f35b6109996004803603602081101561098357600080fd5b8101908080359060200190929190505050611aa6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a1d600480360360208110156109f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ae3565b6040518082815260200191505060405180910390f35b610a3b611b33565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610acb60048036036040811015610a9357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b5c565b005b610c566004803603610180811015610ae457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610bc3578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610b6f565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611c98565b005b610d5b60048036036080811015610c6e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610cd557600080fd5b820183602082011115610ce757600080fd5b80359060200191846001830284011164010000000083111715610d0957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ed5565b005b610d65611efd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610da5578082015181840152602081019050610d8a565b50505050905090810190601f168015610dd25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e0c60048036036020811015610df657600080fd5b8101908080359060200190929190505050611f9f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e4c578082015181840152602081019050610e31565b50505050905090810190601f168015610e795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610ee960048036036040811015610e9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612068565b604051808215151515815260200191505060405180910390f35b610f4560048036036020811015610f1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120fc565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610fba826122d1565b151561102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526571756972657320746f6b656e2061637475616c6c7920657869737473000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611123576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806145c96038913960400191505060405180910390fd5b61112b611b33565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158061116b575061116a3383612068565b5b15156111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260428152602001806146016042913960600191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133e5780601f106113135761010080835404028352916020019161133e565b820191906000526020600020905b81548152906001019060200180831161132157829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145616021913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611486577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16114ea565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115855780601f1061155a57610100808354040283529160200191611585565b820191906000526020600020905b81548152906001019060200180831161156857829003601f168201915b5050505050905090565b6000600880549050905090565b6115a63382612343565b15156115b157600080fd5b6115bc8383836123d8565b505050565b611600828260006040519080825280601f01601f1916602001820160405280156115fa5781602001600182028038833980820191505090505b5061167b565b5050565b600061160f83611ae3565b8210151561161c57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561166857fe5b9060005260206000200154905092915050565b6000801b600d60008060001b815260200190815260200160002081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611747576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145616021913960400191505060405180910390fd5b600060149054906101000a900460ff161515156117cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526571756972657320636f6e7472616374206973206e6f74207061757365640081525060200191505060405180910390fd5b6117d683836123fc565b6117df8261241d565b6001905092915050565b61180483838360405180602001604052806000815250611ed5565b505050565b600061181361158f565b8210151561182057600080fd5b60088281548110151561182f57fe5b90600052602060002001549050919050565b600061184b61430b565b604051806040016040528087600060028110151561186557fe5b6020020151815260200187600160028110151561187e57fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811015156118b357fe5b602002015160006002811015156118c657fe5b602002015181526020018860006002811015156118df57fe5b602002015160016002811015156118f257fe5b60200201518152508152602001604051806040016040528088600160028110151561191957fe5b6020020151600060028110151561192c57fe5b6020020151815260200188600160028110151561194557fe5b6020020151600160028110151561195857fe5b60200201518152508152508160200181905250604051806040016040528085600060028110151561198557fe5b6020020151815260200185600160028110151561199e57fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156119e05781602001602082028038833980820191505090505b50905060008090505b6002811015611a2e578481600281101515611a0057fe5b60200201518282815181101515611a1357fe5b906020019060200201818152505080806001019150506119e9565b506000611a3b8284612570565b1415611a97577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001806145826022913960400191505060405180910390a1600192505050611a9e565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b2c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206126f8565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b9757600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000848484846040516020018085600260200280838360005b83811015611ccc578082015181840152602081019050611cb1565b505050509050018460026000925b81841015611d205782846020020151600260200280838360005b83811015611d0f578082015181840152602081019050611cf4565b505050509050019260010192611cda565b9250505083600260200280838360005b83811015611d4b578082015181840152602081019050611d30565b5050505090500182600260200280838360005b83811015611d79578082015181840152602081019050611d5e565b505050509050019450505050506040516020818303038152906040528051906020012090506015600082815260200190815260200160002060000160009054906101000a900460ff16151515611e37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b611e4385858585611841565b1515611eb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f50726f6f66206973206e6f74205a6f6b72617465732076616c6964000000000081525060200191505060405180910390fd5b611ec18133612706565b611ecb878761169e565b5050505050505050565b611ee084848461159c565b611eec84848484612892565b1515611ef757600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f955780601f10611f6a57610100808354040283529160200191611f95565b820191906000526020600020905b815481529060010190602001808311611f7857829003601f168201915b5050505050905090565b6060611faa826122d1565b1515611fb557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561205c5780601f106120315761010080835404028352916020019161205c565b820191906000526020600020905b81548152906001019060200180831161203f57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145616021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561222b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061453b6026913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616381604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061234f83611aa6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806123be57508373ffffffffffffffffffffffffffffffffffffffff166123a684610faf565b73ffffffffffffffffffffffffffffffffffffffff16145b806123cf57506123ce8185612068565b5b91505092915050565b6123e3838383612a7d565b6123ed8382612d41565b6123f78282612ee5565b505050565b6124068282612fac565b6124108282612ee5565b612419816131ab565b5050565b612426816122d1565b151561249a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f526571756972657320746f6b656e20657869737473000000000000000000000081525060200191505060405180910390fd5b61254660118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125335780601f1061250857610100808354040283529160200191612533565b820191906000526020600020905b81548152906001019060200180831161251657829003601f168201915b5050505050612541836131f7565b613331565b60126000838152602001908152602001600020908051906020019061256c92919061433f565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905061259e6143bf565b6125a6613375565b905080608001515160018651011415156125bf57600080fd5b6125c7614407565b6040518060400160405280600081526020016000815250905060008090505b865181101561266b578387828151811015156125fe57fe5b9060200190602002015110151561261457600080fd5b61265c8261265785608001516001850181518110151561263057fe5b906020019060200201518a8581518110151561264857fe5b906020019060200201516137cf565b61386b565b915080806001019150506125e6565b50612692818360800151600081518110151561268357fe5b9060200190602002015161386b565b90506126d8856000015186602001516126aa84613928565b85604001516126bc8a60400151613928565b87606001516126ce8960000151613928565b89602001516139c4565b15156126ea57600193505050506126f2565b600093505050505b92915050565b600081600001549050919050565b6015600083815260200190815260200160002060000160009054906101000a900460ff1615151561279f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b60016015600084815260200190815260200160002060000160006101000a81548160ff021916908315150217905550806015600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f794f800bcc1704bbac3deeba70adfa76e678654f9b36f11b1e02eeb99c498ea08282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b60006128b38473ffffffffffffffffffffffffffffffffffffffff16613b48565b15156128c25760019050612a75565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561299d578082015181840152602081019050612982565b50505050905090810190601f1680156129ca5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156129ec57600080fd5b505af1158015612a00573d6000803e3d6000fd5b505050506040513d6020811015612a1657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515612b53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5265717569726573206f776e65722069732073656e646572000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612bf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f52657175697265732061646472657373206973206e6f7420656d70747900000081525060200191505060405180910390fd5b612c0181613b93565b612c48600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c53565b612c8f600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c69565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612d996001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613c8c90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612e8c576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e0a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e6457fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612ede9190614421565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612fb5816122d1565b15151561300d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806145a46025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156130b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5265717569726573206164646472657373206973206e6f7420656d707479000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061314b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613c53565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561323f576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061332c565b600082905060005b60008214151561326d578080600101915050600a8281151561326557fe5b049150613247565b6060816040519080825280601f01601f1916602001820160405280156132a25781602001600182028038833980820191505090505b50905060006001830390505b60008614151561332457600a868115156132c457fe5b0660300160f81b8282806001900393508151811015156132e057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561331c57fe5b0495506132ae565b819450505050505b919050565b606061336d8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613cd6565b905092915050565b61337d6143bf565b60405180604001604052807f15dbf86cf49c8fb3cea1bf79752eee1e4f8607fedc5a8756d155b67dc181964081526020017f09865873e4e75c7fc93eb3c87b93f3bfc16025f42e10fdfbe6e90b7df4ba38798152508160000181905250604051806040016040528060405180604001604052807f0f3520f3bdc2900eb56b84b098ffd8087fab2298d50c08c1adda952af8bcbaed81526020017f29fcb850828e4c051eefb3cacd794d8129ae655b647318b12c40900aba23e278815250815260200160405180604001604052807f0b5d45db4177dc6e0bd19830eab33c42f44888751a710ea48e3bc0da70b0f9cf81526020017f2c1436f5469c7d31deb22bde2392b8b336494f67a3bd8386926f4d6013ecc4c78152508152508160200181905250604051806040016040528060405180604001604052807f2e3dfc112b9842ca1db3f531bff67da12448ca2535eb4c4a06f8419870f1164981526020017f111f2157df84fde4acb087ceffabf4cc6d9145eaac3e05ee66765a4fef06df3c815250815260200160405180604001604052807f2aabde8133f444ee7cadb79cd1c8cf84362ced5dbd35125c425d46336262cfb381526020017f1c343e7d0c14fbf7a0b64c980e618c4fa4dc4b7d13ae859dd3d540d7fed7ecb08152508152508160400181905250604051806040016040528060405180604001604052807f1dff659cb515b093f5244759700741c97e9516bcb741e34f3be96f366677921981526020017f25bf921b76b77f3eb483c754c09a4d4faffb377f10014a4a842575a4a43dec0e815250815260200160405180604001604052807f1a2d788c9018d3f0b45655f8f0d2baa25c68fa38980efb6ed8f7006667b18ee581526020017f28acc13db42fbc3017c1d127168d8e0cf8a4c88751373619c64d7dd41e1c9fd48152508152508160600181905250600360405190808252806020026020018201604052801561366457816020015b61365161444d565b8152602001906001900390816136495790505b50816080018190525060405180604001604052807f24e8b817a42465c45800700f0851d74fca77c955988599260317c3f3a5f1c08681526020017f14b5a05b308b2577fdbb32e0925fd1af3061b1b498d7653ab468b7fec4907229815250816080015160008151811015156136d557fe5b9060200190602002018190525060405180604001604052807f1b25e1b5ce2d624691106a0a1d7016ad0f8d7eeebd28f095e411b84a164f264081526020017f10b3d5e0968b7f0119df82f9583660b64d9c811a0241792c7b57c22d8c8f8dbf8152508160800151600181518110151561374a57fe5b9060200190602002018190525060405180604001604052807f10047f0e793de0ca1a85d78759a5162f816efe7ff34caf9eff511cec281c0bfe81526020017f1810f53f1538efea7cf23a084cc2252586eb408607c4bde7b5f70907896eda01815250816080015160028151811015156137bf57fe5b9060200190602002018190525090565b6137d7614407565b6137df614467565b83600001518160006003811015156137f357fe5b602002018181525050836020015181600160038110151561381057fe5b6020020181815250508281600260038110151561382957fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461385457613856565bfe5b5080151561386357600080fd5b505092915050565b613873614407565b61387b614489565b836000015181600060048110151561388f57fe5b60200201818152505083602001518160016004811015156138ac57fe5b60200201818152505082600001518160026004811015156138c957fe5b60200201818152505082602001518160036004811015156138e657fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461391157613913565bfe5b5080151561392057600080fd5b505092915050565b613930614407565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561396d575060008360200151145b156139915760405180604001604052806000815260200160008152509150506139bf565b6040518060400160405280846000015181526020018285602001518115156139b557fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613a0357816020015b6139f061444d565b8152602001906001900390816139e85790505b50905060606004604051908082528060200260200182016040528015613a4357816020015b613a306144ab565b815260200190600190039081613a285790505b5090508a826000815181101515613a5657fe5b9060200190602002018190525088826001815181101515613a7357fe5b9060200190602002018190525086826002815181101515613a9057fe5b9060200190602002018190525084826003815181101515613aad57fe5b9060200190602002018190525089816000815181101515613aca57fe5b9060200190602002018190525087816001815181101515613ae757fe5b9060200190602002018190525085816002815181101515613b0457fe5b9060200190602002018190525083816003815181101515613b2157fe5b90602001906020020181905250613b388282613fb6565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613b8a57506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613c505760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b613c8160018260000154613c8c90919063ffffffff16565b816000018190555050565b6000613cce83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614249565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613d325781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613dbd578881815181101515613d6057fe5b90602001015160f81c60f81b8383806001019450815181101515613d8057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613d49565b600090505b8751811015613e36578781815181101515613dd957fe5b90602001015160f81c60f81b8383806001019450815181101515613df957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613dc2565b600090505b8651811015613eaf578681815181101515613e5257fe5b90602001015160f81c60f81b8383806001019450815181101515613e7257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613e3b565b600090505b8551811015613f28578581815181101515613ecb57fe5b90602001015160f81c60f81b8383806001019450815181101515613eeb57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613eb4565b600090505b8451811015613fa1578481815181101515613f4457fe5b90602001015160f81c60f81b8383806001019450815181101515613f6457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f2d565b82995050505050505050505095945050505050565b600081518351141515613fc857600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156140075781602001602082028038833980820191505090505b50905060008090505b838110156141e557868181518110151561402657fe5b9060200190602002015160000151826000600684020181518110151561404857fe5b9060200190602002018181525050868181518110151561406457fe5b9060200190602002015160200151826001600684020181518110151561408657fe5b906020019060200201818152505085818151811015156140a257fe5b906020019060200201516000015160006002811015156140be57fe5b602002015182600260068402018151811015156140d757fe5b906020019060200201818152505085818151811015156140f357fe5b9060200190602002015160000151600160028110151561410f57fe5b6020020151826003600684020181518110151561412857fe5b9060200190602002018181525050858181518110151561414457fe5b9060200190602002015160200151600060028110151561416057fe5b6020020151826004600684020181518110151561417957fe5b9060200190602002018181525050858181518110151561419557fe5b906020019060200201516020015160016002811015156141b157fe5b602002015182600560068402018151811015156141ca57fe5b90602001906020020181815250508080600101915050614010565b506141ee6144d1565b60006020826020860260208601600060086107d05a03f19050806000811461421557614217565bfe5b5080151561422457600080fd5b600082600060018110151561423557fe5b602002015114159550505050505092915050565b600083831115829015156142f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156142bd5780820151818401526020810190506142a2565b50505050905090810190601f1680156142ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60405180610100016040528061431f61444d565b815260200161432c6144ab565b815260200161433961444d565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061438057805160ff19168380011785556143ae565b828001600101855582156143ae579182015b828111156143ad578251825591602001919060010190614392565b5b5090506143bb91906144f3565b5090565b604051806101e001604052806143d361444d565b81526020016143e06144ab565b81526020016143ed6144ab565b81526020016143fa6144ab565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156144485781836000526020600020918201910161444791906144f3565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806144be614518565b81526020016144cb614518565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61451591905b808211156145115760008160009055506001016144f9565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe5265717569726573206e65774f776e6572206973206e6f7420656d707479206164647265737352657175697265732073656e64657220697320636f6e7472616374206f776e65725472616e73616374696f6e207375636365737366756c6c792076657269666965642e526571756972657320746f6b656e20646f6573206e6f7420616c72656164792065786973745265717569726573207472616e7366657220746f206120646966666572656e742061646472657373207468616e207468652073656e6465725265717569726573206d6573736167652073656e64657220746f206265206f776e6572206f7220617070726f76616c20666f7220616c6c20746f2062652074727565a165627a7a72305820c3e4eeec88edf989c5f9d02a044cd26210ad411f6dc59dc3ab8c5c59f03f97d10029",
	"sourceMap": "319:1650:7:-;;;22952:104:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23091:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23183:4;23189:6;23197:13;20779:313;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;693:10;684:6;;:19;;;;;;;;;;;;;;;;;;718:28;739:6;;;;;;;;;;;718:28;;;;;;;;;;;;;;;;;;;;;;2149:16;2159:5;2149:9;;;:16;;:::i;:::-;3114:40;2712:10;3133:20;;3114:18;;;:40;;:::i;:::-;5367;5242:10;5386:20;;5367:18;;;:40;;:::i;:::-;13393:51;12999:10;13412:31;;13393:18;;;:51;;:::i;:::-;20957:4;20949:5;:12;;;;;;;;;;;;:::i;:::-;;20981:6;20971:7;:16;;;;;;;;;;;;:::i;:::-;;21013:12;20997:13;:28;;;;;;;;;;;;:::i;:::-;;21036:49;20590:10;21055:29;;21036:18;;;:49;;:::i;:::-;20779:313;;;23234:10;23226:5;;:18;;;;;;;;;;;;;;;;;;23091:160;;319:1650:7;;1861:167:4;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:5;1919:7;;:15;;;;;;;;;;;;;;;;;;1949:7;;;;;;;;;;;1945:76;;;1963:18;1970:10;1963:18;;;;;;;;;;;;;;;;;;;;;;1945:76;;;2001:20;2010:10;2001:20;;;;;;;;;;;;;;;;;;;;;;1945:76;1861:167;:::o;3492:158::-;3582:10;3567:25;;:11;:25;;;;;3559:34;;;;;;;;3639:4;3603:20;:33;3624:11;3603:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3492:158;:::o;319:1650:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
	"deployedSourceMap": "319:1650:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:1650:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3252:161:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3252:161:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6712:236;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6712:236:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5958:748;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5958:748:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21271:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21271:90:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1861:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1861:167:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;21179:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21179:86:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14186:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7953:210;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7953:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17129:122:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17129:122:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17129:122:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17129:122:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17129:122:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;17129:122:6;;;;;;;;;;;;;;;:::i;:::-;;13824:210:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13824:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17257:228:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17257:228:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17257:228:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17257:228:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17257:228:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;17257:228:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17257:228:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17257:228:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17257:228:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;17257:228:6;;;;;;;;;;;;;;;:::i;:::-;;23257:211:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23257:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8169:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8169:162:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14617:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14617:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;27339:755:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;27339:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27339:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27339:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27339:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27339:755:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5719:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5719:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5420:293;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5420:293:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;467:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7240:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7240:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1478:489:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1478:489:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1478:489:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1478:489:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1478:489:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1478:489:7;;;;;;;;;;;;;;:::i;:::-;;8337:249:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8337:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8337:249:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8337:249:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8337:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8337:249:4;;;;;;;;;;;;;;;:::i;:::-;;21367:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21367:102:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21475:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21475:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21475:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7774:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7774:173:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1032:398;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1032:398:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3252:161;3346:4;3373:20;:33;3394:11;3373:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3366:40;;3252:161;;;:::o;6712:236::-;6771:7;6849:16;6857:7;6849;:16::i;:::-;6841:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6917:15;:24;6933:7;6917:24;;;;;;;;;;;;;;;;;;;;;6910:31;;6712:236;;;:::o;5958:748::-;6125:11;:20;6137:7;6125:20;;;;;;;;;;;;;;;;;;;;;6119:26;;:2;:26;;;;6098:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6376:10;:8;:10::i;:::-;6362:24;;:10;:24;;;;:60;;;;6390:32;6407:10;6419:2;6390:16;:32::i;:::-;6362:60;6341:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6603:2;6576:15;:24;6592:7;6576:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6691:7;6687:2;6656:43;;6665:11;:20;6677:7;6665:20;;;;;;;;;;;;;;;;;;;;;6656:43;;;;;;;;;;;;5958:748;;:::o;21271:90::-;21315:13;21347:7;21340:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21271:90;:::o;1861:167::-;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:5;1919:7;;:15;;;;;;;;;;;;;;;;;;1949:7;;;;;;;;;;;1945:76;;;1963:18;1970:10;1963:18;;;;;;;;;;;;;;;;;;;;;;1945:76;;;2001:20;2010:10;2001:20;;;;;;;;;;;;;;;;;;;;;;1945:76;1861:167;:::o;21179:86::-;21221:13;21253:5;21246:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21179:86;:::o;14186:94::-;14230:7;14256:10;:17;;;;14249:24;;14186:94;:::o;7953:210::-;8073:39;8092:10;8104:7;8073:18;:39::i;:::-;8065:48;;;;;;;;8124:32;8138:4;8144:2;8148:7;8124:13;:32::i;:::-;7953:210;;;:::o;17129:122:6:-;17204:40;17215:5;17222:7;17241:1;17231:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;17231:12:6;;;;17204:10;:40::i;:::-;17129:122;;:::o;13824:210:4:-;13928:7;13967:16;13977:5;13967:9;:16::i;:::-;13959:5;:24;13951:33;;;;;;;;14001:12;:19;14014:5;14001:19;;;;;;;;;;;;;;;14021:5;14001:26;;;;;;;;;;;;;;;;;;13994:33;;13824:210;;;;:::o;17257:228:6:-;17476:1;17468:10;;17431:22;:34;17462:1;17454:10;;17431:34;;;;;;;;;;;:47;;;;17257:228;;;:::o;23257:211:4:-;23372:4;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:7;;;;;;;;;;;2316:8;2308:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23392:18;23398:2;23402:7;23392:5;:18::i;:::-;23420:20;23432:7;23420:11;:20::i;:::-;23457:4;23450:11;;23257:211;;;;:::o;8169:162::-;8285:39;8302:4;8308:2;8312:7;8285:39;;;;;;;;;;;;:16;:39::i;:::-;8169:162;;;:::o;14617:148::-;14675:7;14710:13;:11;:13::i;:::-;14702:5;:21;14694:30;;;;;;;;14741:10;14752:5;14741:17;;;;;;;;;;;;;;;;;;14734:24;;14617:148;;;:::o;27339:755:8:-;27507:6;27526:18;;:::i;:::-;27565:27;;;;;;;;27581:1;27583;27581:4;;;;;;;;;;;;;27565:27;;;;27587:1;27589;27587:4;;;;;;;;;;;;;27565:27;;;27555:5;:7;;:37;;;;27613:55;;;;;;;;;;;;;;;;27630:1;27632;27630:4;;;;;;;;;;;;;27635:1;27630:7;;;;;;;;;;;;;27613:55;;;;27639:1;27641;27639:4;;;;;;;;;;;;;27644:1;27639:7;;;;;;;;;;;;;27613:55;;;;;;;;;;;;;;;27650:1;27652;27650:4;;;;;;;;;;;;;27655:1;27650:7;;;;;;;;;;;;;27613:55;;;;27659:1;27661;27659:4;;;;;;;;;;;;;27664:1;27659:7;;;;;;;;;;;;;27613:55;;;;;;27603:5;:7;;:65;;;;27689:27;;;;;;;;27705:1;27707;27705:4;;;;;;;;;;;;;27689:27;;;;27711:1;27713;27711:4;;;;;;;;;;;;;27689:27;;;27679:5;:7;;:37;;;;27727:28;27772:12;27758:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;27758:27:8;;;;27727:58;;27801:9;27813:1;27801:13;;27796:95;27820:12;27816:1;:16;27796:95;;;27871:5;27877:1;27871:8;;;;;;;;;;;;;27854:11;27866:1;27854:14;;;;;;;;;;;;;;;;;:25;;;;;27834:3;;;;;;;27796:95;;;;27935:1;27905:26;27912:11;27925:5;27905:6;:26::i;:::-;:31;27901:186;;;27958:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28026:4;28019:11;;;;;;27901:186;28070:5;28063:12;;;;27339:755;;;;;;;:::o;5719:162:4:-;5774:7;5854:11;:20;5866:7;5854:20;;;;;;;;;;;;;;;;;;;;;5847:27;;5719:162;;;:::o;5420:293::-;5475:7;5664:42;5681:17;:24;5699:5;5681:24;;;;;;;;;;;;;;;5664:16;:42::i;:::-;5657:49;;5420:293;;;:::o;467:80::-;508:7;534:6;;;;;;;;;;;527:13;;467:80;:::o;7240:213::-;7325:10;7319:16;;:2;:16;;;;7311:25;;;;;;;;7383:8;7346:18;:30;7365:10;7346:30;;;;;;;;;;;;;;;:34;7377:2;7346:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7433:2;7406:40;;7421:10;7406:40;;;7437:8;7406:40;;;;;;;;;;;;;;;;;;;;;;7240:213;;:::o;1478:489:7:-;1692:11;1733:1;1736;1739;1742:6;1716:33;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1716:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1716:33:7;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1716:33:7;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1716:33:7;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1716:33:7;;;1706:44;;;;;;1692:58;;1769:9;:14;1779:3;1769:14;;;;;;;;;;;:20;;;;;;;;;;;;1768:21;1760:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1838:25;1847:1;1850;1853;1856:6;1838:8;:25::i;:::-;1830:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1905:28;1917:3;1922:10;1905:11;:28::i;:::-;1943:17;1948:2;1952:7;1943:4;:17::i;:::-;;1478:489;;;;;;;:::o;8337:249:4:-;8481:31;8494:4;8500:2;8504:7;8481:12;:31::i;:::-;8530:48;8553:4;8559:2;8563:7;8572:5;8530:22;:48::i;:::-;8522:57;;;;;;;;8337:249;;;;:::o;21367:102::-;21417:13;21449;21442:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21367:102;:::o;21475:151::-;21533:13;21566:16;21574:7;21566;:16::i;:::-;21558:25;;;;;;;;21600:10;:19;21611:7;21600:19;;;;;;;;;;;21593:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21475:151;;;:::o;7774:173::-;7878:4;7905:18;:25;7924:5;7905:25;;;;;;;;;;;;;;;:35;7931:8;7905:35;;;;;;;;;;;;;;;;;;;;;;;;;7898:42;;7774:173;;;;:::o;1032:398::-;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:1;1263:22;;:8;:22;;;;1242:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:8;1360:6;;:17;;;;;;;;;;;;;;;;;;1393:30;1414:8;1393:30;;;;;;;;;;;;;;;;;;;;;;1032:398;:::o;8780:152::-;8837:4;8853:13;8869:11;:20;8881:7;8869:20;;;;;;;;;;;;;;;;;;;;;8853:36;;8923:1;8906:19;;:5;:19;;;;8899:26;;;8780:152;;;:::o;9292:298::-;9401:4;9421:13;9437:16;9445:7;9437;:16::i;:::-;9421:32;;9482:5;9471:16;;:7;:16;;;:63;;;;9527:7;9503:31;;:20;9515:7;9503:11;:20::i;:::-;:31;;;9471:63;:111;;;;9550:32;9567:5;9574:7;9550:16;:32::i;:::-;9471:111;9463:120;;;9292:298;;;;:::o;15140:269::-;15255:38;15275:4;15281:2;15285:7;15255:19;:38::i;:::-;15304:47;15337:4;15343:7;15304:32;:47::i;:::-;15362:40;15390:2;15394:7;15362:27;:40::i;:::-;15140:269;;;:::o;15664:196::-;15727:24;15739:2;15743:7;15727:11;:24::i;:::-;15762:40;15790:2;15794:7;15762:27;:40::i;:::-;15813;15845:7;15813:31;:40::i;:::-;15664:196;;:::o;22098:189::-;22163:16;22171:7;22163;:16::i;:::-;22155:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22237:43;22247:13;22237:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22262:17;22271:7;22262:8;:17::i;:::-;22237:9;:43::i;:::-;22215:10;:19;22226:7;22215:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;22098:189;:::o;26172:1126:8:-;26268:7;26293:26;26322:77;26293:106;;26410:22;;:::i;:::-;26435:14;:12;:14::i;:::-;26410:39;;26488:2;:12;;;:19;26483:1;26468:5;:12;:16;:39;26460:48;;;;;;;;26567:27;;:::i;:::-;26597:21;;;;;;;;26613:1;26597:21;;;;26616:1;26597:21;;;26567:51;;26634:9;26646:1;26634:13;;26629:252;26653:5;:12;26649:1;:16;26629:252;;;26706:18;26695:5;26701:1;26695:8;;;;;;;;;;;;;;;;;;:29;26687:38;;;;;;;;26747:122;26782:4;26805:49;26824:2;:12;;;26841:1;26837;:5;26824:19;;;;;;;;;;;;;;;;;;26845:5;26851:1;26845:8;;;;;;;;;;;;;;;;;;26805:18;:49::i;:::-;26747:16;:122::i;:::-;26740:129;;26667:3;;;;;;;26629:252;;;;26898:39;26915:4;26921:2;:12;;;26934:1;26921:15;;;;;;;;;;;;;;;;;;26898:16;:39::i;:::-;26891:46;;26967:284;27006:5;:7;;;27032:5;:7;;;27058:20;27073:4;27058:14;:20::i;:::-;27097:2;:8;;;27124:23;27139:5;:7;;;27124:14;:23::i;:::-;27166:2;:8;;;27193:20;27208:2;:4;;;27193:14;:20::i;:::-;27232:2;:4;;;26967:20;:284::i;:::-;26966:285;26948:323;;;27270:1;27263:8;;;;;;;26948:323;27289:1;27282:8;;;;;26172:1126;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;997:254:7:-;1075:9;:14;1085:3;1075:14;;;;;;;;;;;:20;;;;;;;;;;;;1074:21;1066:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1159:4;1136:9;:14;1146:3;1136:14;;;;;;;;;;;:20;;;:27;;;;;;;;;;;;;;;;;;1197:6;1173:9;:14;1183:3;1173:14;;;;;;;;;;;:21;;;:30;;;;;;;;;;;;;;;;;;1218:26;1232:3;1237:6;1218:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:254;;:::o;11760:431:4:-;11911:4;11932:15;:2;:13;;;:15::i;:::-;11931:16;11927:58;;;11970:4;11963:11;;;;11927:58;11995:13;12027:2;12011:36;;;12061:10;12085:4;12103:7;12124:5;12011:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12011:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12011:128:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12011:128:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12011:128:4;;;;;;;;;;;;;;;;11995:144;;4380:10;12167:16;;12157:26;;;:6;:26;;;;12149:35;;;11760:431;;;;;;;:::o;10483:749::-;10684:11;:20;10696:7;10684:20;;;;;;;;;;;;;;;;;;;;;10676:28;;:4;:28;;;10668:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10833:1;10819:16;;:2;:16;;;;10811:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10911:23;10926:7;10911:14;:23::i;:::-;11018:41;11037:17;:21;11055:2;11037:21;;;;;;;;;;;;;;;11018:18;:41::i;:::-;11069:43;11088:17;:23;11106:4;11088:23;;;;;;;;;;;;;;;11069:18;:43::i;:::-;11145:2;11122:11;:20;11134:7;11122:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11217:7;11213:2;11198:27;;11207:4;11198:27;;;;;;;;;;;;10483:749;;;:::o;17664:1140::-;17938:22;17963:32;17993:1;17963:12;:18;17976:4;17963:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17938:57;;18005:18;18026:17;:26;18044:7;18026:26;;;;;;;;;;;;18005:47;;18170:14;18156:10;:28;;18152:323;;;18200:19;18222:12;:18;18235:4;18222:18;;;;;;;;;;;;;;;18241:14;18222:34;;;;;;;;;;;;;;;;;;18200:56;;18304:11;18271:12;:18;18284:4;18271:18;;;;;;;;;;;;;;;18290:10;18271:30;;;;;;;;;;;;;;;;;:44;;;;18420:10;18387:17;:30;18405:11;18387:30;;;;;;;;;;;:43;;;;18152:323;;18561:12;:18;18574:4;18561:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17664:1140;;;;:::o;16510:183::-;16623:12;:16;16636:2;16623:16;;;;;;;;;;;;;;;:23;;;;16594:17;:26;16612:7;16594:26;;;;;;;;;;;:52;;;;16656:12;:16;16669:2;16656:16;;;;;;;;;;;;;;;16678:7;16656:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16656:30:4;;;;;;;;;;;;;;;;;;;;;;16510:183;;:::o;9747:537::-;9902:16;9910:7;9902;:16::i;:::-;9901:17;9893:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9992:1;9978:16;;:2;:16;;;;9970:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10140:2;10117:11;:20;10129:7;10117:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10152:41;10171:17;:21;10189:2;10171:21;;;;;;;;;;;;;;;10152:18;:41::i;:::-;10269:7;10265:2;10244:33;;10261:1;10244:33;;;;;;;;;;;;9747:537;;:::o;16888:161::-;16991:10;:17;;;;16964:15;:24;16980:7;16964:24;;;;;;;;;;;:44;;;;17018:10;17034:7;17018:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17018:24:4;;;;;;;;;;;;;;;;;;;;;;16888:161;:::o;49269:509:6:-;49346:27;49399:1;49393:2;:7;49389:48;;;49416:10;;;;;;;;;;;;;;;;;;;;;49389:48;49446:9;49458:2;49446:14;;49470:11;49491:66;49503:1;49498;:6;;49491:66;;;49520:5;;;;;;;49544:2;49539:7;;;;;;;;;;;49491:66;;;49566:17;49596:3;49586:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49586:14:6;;;;49566:34;;49610:9;49628:1;49622:3;:7;49610:19;;49639:104;49652:1;49646:2;:7;;49639:104;;;49705:2;49700;:7;;;;;;;;49694:2;:14;49681:29;;49669:4;49674:3;;;;;;;49669:9;;;;;;;;;;;;;;:41;;;;;;;;;;;49730:2;49724:8;;;;;;;;;;;49639:104;;;49766:4;49752:19;;;;;;49269:509;;;;:::o;45222:194::-;45324:33;45380:29;45390:2;45394;45380:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;45373:36;;45222:194;;;;:::o;22922:3242:8:-;22969:22;;:::i;:::-;23011:270;;;;;;;;23067:66;23011:270;;;;23189:66;23011:270;;;23004:2;:4;;:277;;;;23299:622;;;;;;;;;;;;;;;;23378:66;23299:622;;;;23512:66;23299:622;;;;;;;;;;;;;;;23676:66;23299:622;;;;23810:66;23299:622;;;;;;23292:2;:4;;:629;;;;23943:622;;;;;;;;;;;;;;;;24022:66;23943:622;;;;24156:66;23943:622;;;;;;;;;;;;;;;24320:66;23943:622;;;;24454:66;23943:622;;;;;;23932:2;:8;;:633;;;;24587:622;;;;;;;;;;;;;;;;24666:66;24587:622;;;;24800:66;24587:622;;;;;;;;;;;;;;;24964:66;24587:622;;;;25098:66;24587:622;;;;;;24576:2;:8;;:633;;;;25257:1;25235:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;25220:2;:12;;:39;;;;25288:270;;;;;;;;25344:66;25288:270;;;;25466:66;25288:270;;;25270:2;:12;;;25283:1;25270:15;;;;;;;;;;;;;;;;;:288;;;;25587:270;;;;;;;;25643:66;25587:270;;;;25765:66;25587:270;;;25569:2;:12;;;25582:1;25569:15;;;;;;;;;;;;;;;;;:288;;;;25886:270;;;;;;;;25942:66;25886:270;;;;26064:66;25886:270;;;25868:2;:12;;;25881:1;25868:15;;;;;;;;;;;;;;;;;:288;;;;22922:3242;:::o;18995:527::-;19080:16;;:::i;:::-;19114:23;;:::i;:::-;19159:1;:3;;;19148:5;19154:1;19148:8;;;;;;;;;;;;:14;;;;;19184:1;:3;;;19173:5;19179:1;19173:8;;;;;;;;;;;;:14;;;;;19209:1;19198:5;19204:1;19198:8;;;;;;;;;;;;:12;;;;;19221;19322:4;19319:1;19313:4;19306:5;19303:1;19300;19293:4;19288:3;19284:14;19279:48;19268:59;;19406:7;19432:1;19427:50;;;;19399:78;;19427:50;19453:9;19399:78;;19506:7;19498:16;;;;;;;;18995:527;;;;;;:::o;17750:565::-;17842:16;;:::i;:::-;17876:23;;:::i;:::-;17921:2;:4;;;17910:5;17916:1;17910:8;;;;;;;;;;;;:15;;;;;17947:2;:4;;;17936:5;17942:1;17936:8;;;;;;;;;;;;:15;;;;;17973:2;:4;;;17962:5;17968:1;17962:8;;;;;;;;;;;;:15;;;;;17999:2;:4;;;17988:5;17994:1;17988:8;;;;;;;;;;;;:15;;;;;18014:12;18115:4;18112:1;18106:4;18099:5;18096:1;18093;18086:4;18081:3;18077:14;18072:48;18061:59;;18199:7;18225:1;18220:50;;;;18192:78;;18220:50;18246:9;18192:78;;18299:7;18291:16;;;;;;;;17750:565;;;;;;:::o;17361:336::-;17418:14;;:::i;:::-;17498:9;17510:77;17498:89;;17609:1;17602;:3;;;:8;:20;;;;;17621:1;17614;:3;;;:8;17602:20;17598:46;;;17631:13;;;;;;;;17639:1;17631:13;;;;17642:1;17631:13;;;17624:20;;;;;17598:46;17662:27;;;;;;;;17670:1;:3;;;17662:27;;;;17686:1;17680;:3;;;:7;;;;;;;;17675:1;:13;17662:27;;;17655:34;;;17361:336;;;;:::o;21975:584::-;22246:4;22263:19;22299:1;22285:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22263:38;;22312:19;22348:1;22334:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22312:38;;22369:2;22361;22364:1;22361:5;;;;;;;;;;;;;;;;;:10;;;;22390:2;22382;22385:1;22382:5;;;;;;;;;;;;;;;;;:10;;;;22411:2;22403;22406:1;22403:5;;;;;;;;;;;;;;;;;:10;;;;22432:2;22424;22427:1;22424:5;;;;;;;;;;;;;;;;;:10;;;;22453:2;22445;22448:1;22445:5;;;;;;;;;;;;;;;;;:10;;;;22474:2;22466;22469:1;22466:5;;;;;;;;;;;;;;;;;:10;;;;22495:2;22487;22490:1;22487:5;;;;;;;;;;;;;;;;;:10;;;;22516:2;22508;22511:1;22508:5;;;;;;;;;;;;;;;;;:10;;;;22536:15;22544:2;22548;22536:7;:15::i;:::-;22529:22;;;;21975:584;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;12272:171:4:-;12371:1;12335:38;;:15;:24;12351:7;12335:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12331:106;;;12424:1;12389:15;:24;12405:7;12389:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12331:106;12272:171;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;45888:1094:6:-;46066:33;46111:16;46136:2;46111:28;;46149:16;46174:2;46149:28;;46187:16;46212:2;46187:28;;46225:16;46250:2;46225:28;;46263:16;46288:2;46263:28;;46301:19;46399:3;:10;46386:3;:10;46373:3;:10;46360:3;:10;46347:3;:10;:23;:36;:49;:62;46323:96;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46323:96:6;;;;46301:118;;46429:19;46457:5;46429:34;;46473:9;46485:1;46473:13;;46496:9;46508:1;46496:13;;46528:1;46524:5;;46519:78;46535:3;:10;46531:1;:14;46519:78;;;46580:3;46584:1;46580:6;;;;;;;;;;;;;;;;;;;46566;46573:3;;;;;;46566:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46547:3;;;;;;;46519:78;;;46615:1;46611:5;;46606:78;46622:3;:10;46618:1;:14;46606:78;;;46667:3;46671:1;46667:6;;;;;;;;;;;;;;;;;;;46653;46660:3;;;;;;46653:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46634:3;;;;;;;46606:78;;;46702:1;46698:5;;46693:78;46709:3;:10;46705:1;:14;46693:78;;;46754:3;46758:1;46754:6;;;;;;;;;;;;;;;;;;;46740;46747:3;;;;;;46740:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46721:3;;;;;;;46693:78;;;46789:1;46785:5;;46780:78;46796:3;:10;46792:1;:14;46780:78;;;46841:3;46845:1;46841:6;;;;;;;;;;;;;;;;;;;46827;46834:3;;;;;;46827:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46808:3;;;;;;;46780:78;;;46876:1;46872:5;;46867:78;46883:3;:10;46879:1;:14;46867:78;;;46928:3;46932:1;46928:6;;;;;;;;;;;;;;;;;;;46914;46921:3;;;;;;46914:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46895:3;;;;;;;46867:78;;;46968:6;46954:21;;;;;;;;;;;45888:1094;;;;;;;:::o;19740:1145:8:-;19835:4;19878:2;:9;19865:2;:9;:22;19857:31;;;;;;;;19899:16;19918:2;:9;19899:28;;19938:17;19969:1;19958:8;:12;19938:32;;19981:22;20020:9;20006:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20006:24:8;;;;19981:49;;20046:9;20058:1;20046:13;;20041:309;20065:8;20061:1;:12;20041:309;;;20114:2;20117:1;20114:5;;;;;;;;;;;;;;;;;;:7;;;20095:5;20109:1;20105;20101;:5;:9;20095:16;;;;;;;;;;;;;;;;;:26;;;;;20155:2;20158:1;20155:5;;;;;;;;;;;;;;;;;;:7;;;20136:5;20150:1;20146;20142;:5;:9;20136:16;;;;;;;;;;;;;;;;;:26;;;;;20196:2;20199:1;20196:5;;;;;;;;;;;;;;;;;;:7;;;20204:1;20196:10;;;;;;;;;;;;;20177:5;20191:1;20187;20183;:5;:9;20177:16;;;;;;;;;;;;;;;;;:29;;;;;20240:2;20243:1;20240:5;;;;;;;;;;;;;;;;;;:7;;;20248:1;20240:10;;;;;;;;;;;;;20221:5;20235:1;20231;20227;:5;:9;20221:16;;;;;;;;;;;;;;;;;:29;;;;;20284:2;20287:1;20284:5;;;;;;;;;;;;;;;;;;:7;;;20292:1;20284:10;;;;;;;;;;;;;20265:5;20279:1;20275;20271;:5;:9;20265:16;;;;;;;;;;;;;;;;;:29;;;;;20328:2;20331:1;20328:5;;;;;;;;;;;;;;;;;;:7;;;20336:1;20328:10;;;;;;;;;;;;;20309:5;20323:1;20319;20315;:5;:9;20309:16;;;;;;;;;;;;;;;;;:29;;;;;20075:3;;;;;;;20041:309;;;;20360:21;;:::i;:::-;20392:12;20642:4;20620:3;20596:4;20585:9;20581:20;20557:4;20550:5;20546:16;20526:1;20506;20482:4;20477:3;20473:14;20450:211;20439:222;;20740:7;20766:1;20761:50;;;;20733:78;;20761:50;20787:9;20733:78;;20840:7;20832:16;;;;;;;;20876:1;20866:3;20870:1;20866:6;;;;;;;;;;;;;:11;;20859:18;;;;;;;19740:1145;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;319:1650:7:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;319:1650:7;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;319:1650:7;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;319:1650:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;319:1650:7;;;;:::o",
	"source": "pragma solidity >=0.4.21 <0.6.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./ERC721Mintable.sol\";\nimport \"./Verifier.sol\";\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n// SquareVerifier,\ncontract SolnSquareVerifier is\n    Verifier,\n    ERC721Mintable(\"RealEstateToken\", \"RET\")\n{\n    // TODO define a solutions struct that can hold a boolean value & an address\n    struct Solution {\n        bool inUse;\n        address sender;\n    }\n\n    // TODO define an array of the above struct\n    // Defined a mapping to store all Solution structs instead\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) private solutions;\n    // TODO Create an event to emit when a solution is added\n    event AddedSolution(bytes32 key, address sender);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(bytes32 key, address sender) internal {\n        require(!solutions[key].inUse, \"Solution is already in use\");\n        solutions[key].inUse = true;\n        solutions[key].sender = sender;\n        emit AddedSolution(key, sender);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSupply\n    function mintVerified(\n        address to,\n        uint256 tokenId,\n        uint256[2] memory a,\n        uint256[2][2] memory b,\n        uint256[2] memory c,\n        uint256[2] memory inputs\n    ) public {\n        bytes32 key = keccak256(abi.encodePacked(a, b, c, inputs));\n        require(!solutions[key].inUse, \"Solution is already in use\");\n        require(verifyTx(a, b, c, inputs), \"Proof is not Zokrates valid\");\n        addSolution(key, msg.sender);\n        mint(to, tokenId);\n    }\n}\n",
	"sourcePath": "C:\\Users\\diggy\\Documents\\Code\\Bitcoin-Nano\\Project 5\\eth-contracts\\contracts\\SolnSquareVerifier.sol",
	"ast": {
		"absolutePath": "project:/contracts/SolnSquareVerifier.sol",
		"exportedSymbols": {
			"SolnSquareVerifier": [7988]
		},
		"id": 7989,
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 7860,
				"literals": ["solidity", ">=", "0.4", ".21", "<", "0.6", ".0"],
				"nodeType": "PragmaDirective",
				"src": "0:32:7"
			},
			{
				"absolutePath": "project:/contracts/ERC721Mintable.sol",
				"file": "./ERC721Mintable.sol",
				"id": 7861,
				"nodeType": "ImportDirective",
				"scope": 7989,
				"sourceUnit": 1467,
				"src": "141:30:7",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "project:/contracts/Verifier.sol",
				"file": "./Verifier.sol",
				"id": 7862,
				"nodeType": "ImportDirective",
				"scope": 7989,
				"sourceUnit": 10547,
				"src": "172:24:7",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"baseContracts": [
					{
						"arguments": null,
						"baseName": {
							"contractScope": null,
							"id": 7863,
							"name": "Verifier",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 10546,
							"src": "354:8:7",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_Verifier_$10546",
								"typeString": "contract Verifier"
							}
						},
						"id": 7864,
						"nodeType": "InheritanceSpecifier",
						"src": "354:8:7"
					},
					{
						"arguments": [
							{
								"argumentTypes": null,
								"hexValue": "5265616c457374617465546f6b656e",
								"id": 7866,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "383:17:7",
								"subdenomination": null,
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_1ae31053873e4cd555c8c3aab385652a69e74aea9398da659a924f7285870bc2",
									"typeString": "literal_string \"RealEstateToken\""
								},
								"value": "RealEstateToken"
							},
							{
								"argumentTypes": null,
								"hexValue": "524554",
								"id": 7867,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "402:5:7",
								"subdenomination": null,
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_b6fd3bc82f3c6298b002e24dd774867f4688e9d5e24eeac95ab6699e14dce803",
									"typeString": "literal_string \"RET\""
								},
								"value": "RET"
							}
						],
						"baseName": {
							"contractScope": null,
							"id": 7865,
							"name": "ERC721Mintable",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 1466,
							"src": "368:14:7",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_ERC721Mintable_$1466",
								"typeString": "contract ERC721Mintable"
							}
						},
						"id": 7868,
						"nodeType": "InheritanceSpecifier",
						"src": "368:40:7"
					}
				],
				"contractDependencies": [
					508, 1305, 1007, 1466, 1415, 398, 462, 7858, 10546
				],
				"contractKind": "contract",
				"documentation": null,
				"fullyImplemented": true,
				"id": 7988,
				"linearizedBaseContracts": [
					7988, 1466, 1415, 7858, 1305, 1007, 508, 462, 398, 10546
				],
				"name": "SolnSquareVerifier",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"canonicalName": "SolnSquareVerifier.Solution",
						"id": 7873,
						"members": [
							{
								"constant": false,
								"id": 7870,
								"name": "inUse",
								"nodeType": "VariableDeclaration",
								"scope": 7873,
								"src": "522:10:7",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 7869,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "522:4:7",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"value": null,
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 7872,
								"name": "sender",
								"nodeType": "VariableDeclaration",
								"scope": 7873,
								"src": "542:14:7",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 7871,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "542:7:7",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"value": null,
								"visibility": "internal"
							}
						],
						"name": "Solution",
						"nodeType": "StructDefinition",
						"scope": 7988,
						"src": "496:67:7",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 7877,
						"name": "solutions",
						"nodeType": "VariableDeclaration",
						"scope": 7988,
						"src": "746:46:7",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7873_storage_$",
							"typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
						},
						"typeName": {
							"id": 7876,
							"keyType": {
								"id": 7874,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "754:7:7",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							},
							"nodeType": "Mapping",
							"src": "746:28:7",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7873_storage_$",
								"typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
							},
							"valueType": {
								"contractScope": null,
								"id": 7875,
								"name": "Solution",
								"nodeType": "UserDefinedTypeName",
								"referencedDeclaration": 7873,
								"src": "765:8:7",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_Solution_$7873_storage_ptr",
									"typeString": "struct SolnSquareVerifier.Solution"
								}
							}
						},
						"value": null,
						"visibility": "private"
					},
					{
						"anonymous": false,
						"documentation": null,
						"id": 7883,
						"name": "AddedSolution",
						"nodeType": "EventDefinition",
						"parameters": {
							"id": 7882,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 7879,
									"indexed": false,
									"name": "key",
									"nodeType": "VariableDeclaration",
									"scope": 7883,
									"src": "879:11:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 7878,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "879:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7881,
									"indexed": false,
									"name": "sender",
									"nodeType": "VariableDeclaration",
									"scope": 7883,
									"src": "892:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7880,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "892:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "878:29:7"
						},
						"src": "859:49:7"
					},
					{
						"body": {
							"id": 7918,
							"nodeType": "Block",
							"src": "1056:195:7",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 7895,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "UnaryOperation",
												"operator": "!",
												"prefix": true,
												"src": "1074:21:7",
												"subExpression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 7891,
															"name": "solutions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7877,
															"src": "1075:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7873_storage_$",
																"typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
															}
														},
														"id": 7893,
														"indexExpression": {
															"argumentTypes": null,
															"id": 7892,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7885,
															"src": "1085:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1075:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Solution_$7873_storage",
															"typeString": "struct SolnSquareVerifier.Solution storage ref"
														}
													},
													"id": 7894,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "inUse",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7870,
													"src": "1075:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "536f6c7574696f6e20697320616c726561647920696e20757365",
												"id": 7896,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1097:28:7",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
													"typeString": "literal_string \"Solution is already in use\""
												},
												"value": "Solution is already in use"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
													"typeString": "literal_string \"Solution is already in use\""
												}
											],
											"id": 7890,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												10564, 10565
											],
											"referencedDeclaration": 10565,
											"src": "1066:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 7897,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1066:60:7",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 7898,
									"nodeType": "ExpressionStatement",
									"src": "1066:60:7"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 7904,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"baseExpression": {
													"argumentTypes": null,
													"id": 7899,
													"name": "solutions",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7877,
													"src": "1136:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7873_storage_$",
														"typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
													}
												},
												"id": 7901,
												"indexExpression": {
													"argumentTypes": null,
													"id": 7900,
													"name": "key",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7885,
													"src": "1146:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1136:14:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Solution_$7873_storage",
													"typeString": "struct SolnSquareVerifier.Solution storage ref"
												}
											},
											"id": 7902,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "inUse",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 7870,
											"src": "1136:20:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"hexValue": "74727565",
											"id": 7903,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "bool",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1159:4:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"value": "true"
										},
										"src": "1136:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 7905,
									"nodeType": "ExpressionStatement",
									"src": "1136:27:7"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 7911,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"baseExpression": {
													"argumentTypes": null,
													"id": 7906,
													"name": "solutions",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7877,
													"src": "1173:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7873_storage_$",
														"typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
													}
												},
												"id": 7908,
												"indexExpression": {
													"argumentTypes": null,
													"id": 7907,
													"name": "key",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7885,
													"src": "1183:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1173:14:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Solution_$7873_storage",
													"typeString": "struct SolnSquareVerifier.Solution storage ref"
												}
											},
											"id": 7909,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 7872,
											"src": "1173:21:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 7910,
											"name": "sender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 7887,
											"src": "1197:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "1173:30:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 7912,
									"nodeType": "ExpressionStatement",
									"src": "1173:30:7"
								},
								{
									"eventCall": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 7914,
												"name": "key",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 7885,
												"src": "1232:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 7915,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 7887,
												"src": "1237:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 7913,
											"name": "AddedSolution",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 7883,
											"src": "1218:13:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
												"typeString": "function (bytes32,address)"
											}
										},
										"id": 7916,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1218:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 7917,
									"nodeType": "EmitStatement",
									"src": "1213:31:7"
								}
							]
						},
						"documentation": null,
						"id": 7919,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "addSolution",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 7888,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 7885,
									"name": "key",
									"nodeType": "VariableDeclaration",
									"scope": 7919,
									"src": "1018:11:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 7884,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1018:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7887,
									"name": "sender",
									"nodeType": "VariableDeclaration",
									"scope": 7919,
									"src": "1031:14:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7886,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1031:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "1017:29:7"
						},
						"returnParameters": {
							"id": 7889,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1056:0:7"
						},
						"scope": 7988,
						"src": "997:254:7",
						"stateMutability": "nonpayable",
						"superFunction": null,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 7986,
							"nodeType": "Block",
							"src": "1682:285:7",
							"statements": [
								{
									"assignments": [7945],
									"declarations": [
										{
											"constant": false,
											"id": 7945,
											"name": "key",
											"nodeType": "VariableDeclaration",
											"scope": 7986,
											"src": "1692:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 7944,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1692:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"id": 7955,
									"initialValue": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"id": 7949,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7927,
														"src": "1733:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													{
														"argumentTypes": null,
														"id": 7950,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7933,
														"src": "1736:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
															"typeString": "uint256[2] memory[2] memory"
														}
													},
													{
														"argumentTypes": null,
														"id": 7951,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7937,
														"src": "1739:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													{
														"argumentTypes": null,
														"id": 7952,
														"name": "inputs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7941,
														"src": "1742:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														},
														{
															"typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
															"typeString": "uint256[2] memory[2] memory"
														},
														{
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														},
														{
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													],
													"expression": {
														"argumentTypes": null,
														"id": 7947,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10548,
														"src": "1716:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 7948,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1716:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 7953,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1716:33:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 7946,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 10555,
											"src": "1706:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 7954,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1706:44:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "1692:58:7"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 7961,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "UnaryOperation",
												"operator": "!",
												"prefix": true,
												"src": "1768:21:7",
												"subExpression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 7957,
															"name": "solutions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7877,
															"src": "1769:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7873_storage_$",
																"typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
															}
														},
														"id": 7959,
														"indexExpression": {
															"argumentTypes": null,
															"id": 7958,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7945,
															"src": "1779:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1769:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Solution_$7873_storage",
															"typeString": "struct SolnSquareVerifier.Solution storage ref"
														}
													},
													"id": 7960,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "inUse",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7870,
													"src": "1769:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "536f6c7574696f6e20697320616c726561647920696e20757365",
												"id": 7962,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1791:28:7",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
													"typeString": "literal_string \"Solution is already in use\""
												},
												"value": "Solution is already in use"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
													"typeString": "literal_string \"Solution is already in use\""
												}
											],
											"id": 7956,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												10564, 10565
											],
											"referencedDeclaration": 10565,
											"src": "1760:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 7963,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1760:60:7",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 7964,
									"nodeType": "ExpressionStatement",
									"src": "1760:60:7"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"id": 7967,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7927,
														"src": "1847:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													{
														"argumentTypes": null,
														"id": 7968,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7933,
														"src": "1850:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
															"typeString": "uint256[2] memory[2] memory"
														}
													},
													{
														"argumentTypes": null,
														"id": 7969,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7937,
														"src": "1853:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													{
														"argumentTypes": null,
														"id": 7970,
														"name": "inputs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7941,
														"src": "1856:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														},
														{
															"typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
															"typeString": "uint256[2] memory[2] memory"
														},
														{
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														},
														{
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													],
													"id": 7966,
													"name": "verifyTx",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10545,
													"src": "1838:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
														"typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
													}
												},
												"id": 7971,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1838:25:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "50726f6f66206973206e6f74205a6f6b72617465732076616c6964",
												"id": 7972,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1865:29:7",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b62dd58d37a698e97b9148846e06acd9d8b626a6eb0111665a790c9e35099ff8",
													"typeString": "literal_string \"Proof is not Zokrates valid\""
												},
												"value": "Proof is not Zokrates valid"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_b62dd58d37a698e97b9148846e06acd9d8b626a6eb0111665a790c9e35099ff8",
													"typeString": "literal_string \"Proof is not Zokrates valid\""
												}
											],
											"id": 7965,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												10564, 10565
											],
											"referencedDeclaration": 10565,
											"src": "1830:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 7973,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1830:65:7",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 7974,
									"nodeType": "ExpressionStatement",
									"src": "1830:65:7"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 7976,
												"name": "key",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 7945,
												"src": "1917:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"expression": {
													"argumentTypes": null,
													"id": 7977,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10561,
													"src": "1922:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 7978,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"referencedDeclaration": null,
												"src": "1922:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											],
											"id": 7975,
											"name": "addSolution",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 7919,
											"src": "1905:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
												"typeString": "function (bytes32,address)"
											}
										},
										"id": 7979,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1905:28:7",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 7980,
									"nodeType": "ExpressionStatement",
									"src": "1905:28:7"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 7982,
												"name": "to",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 7921,
												"src": "1948:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"argumentTypes": null,
												"id": 7983,
												"name": "tokenId",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 7923,
												"src": "1952:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 7981,
											"name": "mint",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1465,
											"src": "1943:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,uint256) returns (bool)"
											}
										},
										"id": 7984,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1943:17:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 7985,
									"nodeType": "ExpressionStatement",
									"src": "1943:17:7"
								}
							]
						},
						"documentation": null,
						"id": 7987,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "mintVerified",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 7942,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 7921,
									"name": "to",
									"nodeType": "VariableDeclaration",
									"scope": 7987,
									"src": "1509:10:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7920,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1509:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7923,
									"name": "tokenId",
									"nodeType": "VariableDeclaration",
									"scope": 7987,
									"src": "1529:15:7",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7922,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1529:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7927,
									"name": "a",
									"nodeType": "VariableDeclaration",
									"scope": 7987,
									"src": "1554:19:7",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
										"typeString": "uint256[2]"
									},
									"typeName": {
										"baseType": {
											"id": 7924,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1554:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 7926,
										"length": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 7925,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1562:1:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "ArrayTypeName",
										"src": "1554:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
											"typeString": "uint256[2]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7933,
									"name": "b",
									"nodeType": "VariableDeclaration",
									"scope": 7987,
									"src": "1583:22:7",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
										"typeString": "uint256[2][2]"
									},
									"typeName": {
										"baseType": {
											"baseType": {
												"id": 7928,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1583:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 7930,
											"length": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 7929,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1591:1:7",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "ArrayTypeName",
											"src": "1583:10:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
												"typeString": "uint256[2]"
											}
										},
										"id": 7932,
										"length": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 7931,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1594:1:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "ArrayTypeName",
										"src": "1583:13:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
											"typeString": "uint256[2][2]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7937,
									"name": "c",
									"nodeType": "VariableDeclaration",
									"scope": 7987,
									"src": "1615:19:7",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
										"typeString": "uint256[2]"
									},
									"typeName": {
										"baseType": {
											"id": 7934,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1615:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 7936,
										"length": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 7935,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1623:1:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "ArrayTypeName",
										"src": "1615:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
											"typeString": "uint256[2]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7941,
									"name": "inputs",
									"nodeType": "VariableDeclaration",
									"scope": 7987,
									"src": "1644:24:7",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
										"typeString": "uint256[2]"
									},
									"typeName": {
										"baseType": {
											"id": 7938,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1644:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 7940,
										"length": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 7939,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1652:1:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "ArrayTypeName",
										"src": "1644:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
											"typeString": "uint256[2]"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "1499:175:7"
						},
						"returnParameters": {
							"id": 7943,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1682:0:7"
						},
						"scope": 7988,
						"src": "1478:489:7",
						"stateMutability": "nonpayable",
						"superFunction": null,
						"visibility": "public"
					}
				],
				"scope": 7989,
				"src": "319:1650:7"
			}
		],
		"src": "0:1970:7"
	},
	"legacyAST": {
		"attributes": {
			"absolutePath": "project:/contracts/SolnSquareVerifier.sol",
			"exportedSymbols": {
				"SolnSquareVerifier": [7988]
			}
		},
		"children": [
			{
				"attributes": {
					"literals": [
						"solidity",
						">=",
						"0.4",
						".21",
						"<",
						"0.6",
						".0"
					]
				},
				"id": 7860,
				"name": "PragmaDirective",
				"src": "0:32:7"
			},
			{
				"attributes": {
					"SourceUnit": 1467,
					"absolutePath": "project:/contracts/ERC721Mintable.sol",
					"file": "./ERC721Mintable.sol",
					"scope": 7989,
					"symbolAliases": [null],
					"unitAlias": ""
				},
				"id": 7861,
				"name": "ImportDirective",
				"src": "141:30:7"
			},
			{
				"attributes": {
					"SourceUnit": 10547,
					"absolutePath": "project:/contracts/Verifier.sol",
					"file": "./Verifier.sol",
					"scope": 7989,
					"symbolAliases": [null],
					"unitAlias": ""
				},
				"id": 7862,
				"name": "ImportDirective",
				"src": "172:24:7"
			},
			{
				"attributes": {
					"contractDependencies": [
						508, 1305, 1007, 1466, 1415, 398, 462, 7858, 10546
					],
					"contractKind": "contract",
					"documentation": null,
					"fullyImplemented": true,
					"linearizedBaseContracts": [
						7988, 1466, 1415, 7858, 1305, 1007, 508, 462, 398, 10546
					],
					"name": "SolnSquareVerifier",
					"scope": 7989
				},
				"children": [
					{
						"attributes": {
							"arguments": null
						},
						"children": [
							{
								"attributes": {
									"contractScope": null,
									"name": "Verifier",
									"referencedDeclaration": 10546,
									"type": "contract Verifier"
								},
								"id": 7863,
								"name": "UserDefinedTypeName",
								"src": "354:8:7"
							}
						],
						"id": 7864,
						"name": "InheritanceSpecifier",
						"src": "354:8:7"
					},
					{
						"children": [
							{
								"attributes": {
									"contractScope": null,
									"name": "ERC721Mintable",
									"referencedDeclaration": 1466,
									"type": "contract ERC721Mintable"
								},
								"id": 7865,
								"name": "UserDefinedTypeName",
								"src": "368:14:7"
							},
							{
								"attributes": {
									"argumentTypes": null,
									"hexvalue": "5265616c457374617465546f6b656e",
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"subdenomination": null,
									"token": "string",
									"type": "literal_string \"RealEstateToken\"",
									"value": "RealEstateToken"
								},
								"id": 7866,
								"name": "Literal",
								"src": "383:17:7"
							},
							{
								"attributes": {
									"argumentTypes": null,
									"hexvalue": "524554",
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"subdenomination": null,
									"token": "string",
									"type": "literal_string \"RET\"",
									"value": "RET"
								},
								"id": 7867,
								"name": "Literal",
								"src": "402:5:7"
							}
						],
						"id": 7868,
						"name": "InheritanceSpecifier",
						"src": "368:40:7"
					},
					{
						"attributes": {
							"canonicalName": "SolnSquareVerifier.Solution",
							"name": "Solution",
							"scope": 7988,
							"visibility": "public"
						},
						"children": [
							{
								"attributes": {
									"constant": false,
									"name": "inUse",
									"scope": 7873,
									"stateVariable": false,
									"storageLocation": "default",
									"type": "bool",
									"value": null,
									"visibility": "internal"
								},
								"children": [
									{
										"attributes": {
											"name": "bool",
											"type": "bool"
										},
										"id": 7869,
										"name": "ElementaryTypeName",
										"src": "522:4:7"
									}
								],
								"id": 7870,
								"name": "VariableDeclaration",
								"src": "522:10:7"
							},
							{
								"attributes": {
									"constant": false,
									"name": "sender",
									"scope": 7873,
									"stateVariable": false,
									"storageLocation": "default",
									"type": "address",
									"value": null,
									"visibility": "internal"
								},
								"children": [
									{
										"attributes": {
											"name": "address",
											"stateMutability": "nonpayable",
											"type": "address"
										},
										"id": 7871,
										"name": "ElementaryTypeName",
										"src": "542:7:7"
									}
								],
								"id": 7872,
								"name": "VariableDeclaration",
								"src": "542:14:7"
							}
						],
						"id": 7873,
						"name": "StructDefinition",
						"src": "496:67:7"
					},
					{
						"attributes": {
							"constant": false,
							"name": "solutions",
							"scope": 7988,
							"stateVariable": true,
							"storageLocation": "default",
							"type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
							"value": null,
							"visibility": "private"
						},
						"children": [
							{
								"attributes": {
									"type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
								},
								"children": [
									{
										"attributes": {
											"name": "bytes32",
											"type": "bytes32"
										},
										"id": 7874,
										"name": "ElementaryTypeName",
										"src": "754:7:7"
									},
									{
										"attributes": {
											"contractScope": null,
											"name": "Solution",
											"referencedDeclaration": 7873,
											"type": "struct SolnSquareVerifier.Solution"
										},
										"id": 7875,
										"name": "UserDefinedTypeName",
										"src": "765:8:7"
									}
								],
								"id": 7876,
								"name": "Mapping",
								"src": "746:28:7"
							}
						],
						"id": 7877,
						"name": "VariableDeclaration",
						"src": "746:46:7"
					},
					{
						"attributes": {
							"anonymous": false,
							"documentation": null,
							"name": "AddedSolution"
						},
						"children": [
							{
								"children": [
									{
										"attributes": {
											"constant": false,
											"indexed": false,
											"name": "key",
											"scope": 7883,
											"stateVariable": false,
											"storageLocation": "default",
											"type": "bytes32",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"name": "bytes32",
													"type": "bytes32"
												},
												"id": 7878,
												"name": "ElementaryTypeName",
												"src": "879:7:7"
											}
										],
										"id": 7879,
										"name": "VariableDeclaration",
										"src": "879:11:7"
									},
									{
										"attributes": {
											"constant": false,
											"indexed": false,
											"name": "sender",
											"scope": 7883,
											"stateVariable": false,
											"storageLocation": "default",
											"type": "address",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"name": "address",
													"stateMutability": "nonpayable",
													"type": "address"
												},
												"id": 7880,
												"name": "ElementaryTypeName",
												"src": "892:7:7"
											}
										],
										"id": 7881,
										"name": "VariableDeclaration",
										"src": "892:14:7"
									}
								],
								"id": 7882,
								"name": "ParameterList",
								"src": "878:29:7"
							}
						],
						"id": 7883,
						"name": "EventDefinition",
						"src": "859:49:7"
					},
					{
						"attributes": {
							"documentation": null,
							"implemented": true,
							"isConstructor": false,
							"kind": "function",
							"modifiers": [null],
							"name": "addSolution",
							"scope": 7988,
							"stateMutability": "nonpayable",
							"superFunction": null,
							"visibility": "internal"
						},
						"children": [
							{
								"children": [
									{
										"attributes": {
											"constant": false,
											"name": "key",
											"scope": 7919,
											"stateVariable": false,
											"storageLocation": "default",
											"type": "bytes32",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"name": "bytes32",
													"type": "bytes32"
												},
												"id": 7884,
												"name": "ElementaryTypeName",
												"src": "1018:7:7"
											}
										],
										"id": 7885,
										"name": "VariableDeclaration",
										"src": "1018:11:7"
									},
									{
										"attributes": {
											"constant": false,
											"name": "sender",
											"scope": 7919,
											"stateVariable": false,
											"storageLocation": "default",
											"type": "address",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"name": "address",
													"stateMutability": "nonpayable",
													"type": "address"
												},
												"id": 7886,
												"name": "ElementaryTypeName",
												"src": "1031:7:7"
											}
										],
										"id": 7887,
										"name": "VariableDeclaration",
										"src": "1031:14:7"
									}
								],
								"id": 7888,
								"name": "ParameterList",
								"src": "1017:29:7"
							},
							{
								"attributes": {
									"parameters": [null]
								},
								"children": [],
								"id": 7889,
								"name": "ParameterList",
								"src": "1056:0:7"
							},
							{
								"children": [
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"isStructConstructorCall": false,
													"lValueRequested": false,
													"names": [null],
													"type": "tuple()",
													"type_conversion": false
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
																	"typeString": "literal_string \"Solution is already in use\""
																}
															],
															"overloadedDeclarations": [
																10564, 10565
															],
															"referencedDeclaration": 10565,
															"type": "function (bool,string memory) pure",
															"value": "require"
														},
														"id": 7890,
														"name": "Identifier",
														"src": "1066:7:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"operator": "!",
															"prefix": true,
															"type": "bool"
														},
														"children": [
															{
																"attributes": {
																	"argumentTypes": null,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"member_name": "inUse",
																	"referencedDeclaration": 7870,
																	"type": "bool"
																},
																"children": [
																	{
																		"attributes": {
																			"argumentTypes": null,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"type": "struct SolnSquareVerifier.Solution storage ref"
																		},
																		"children": [
																			{
																				"attributes": {
																					"argumentTypes": null,
																					"overloadedDeclarations": [
																						null
																					],
																					"referencedDeclaration": 7877,
																					"type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
																					"value": "solutions"
																				},
																				"id": 7891,
																				"name": "Identifier",
																				"src": "1075:9:7"
																			},
																			{
																				"attributes": {
																					"argumentTypes": null,
																					"overloadedDeclarations": [
																						null
																					],
																					"referencedDeclaration": 7885,
																					"type": "bytes32",
																					"value": "key"
																				},
																				"id": 7892,
																				"name": "Identifier",
																				"src": "1085:3:7"
																			}
																		],
																		"id": 7893,
																		"name": "IndexAccess",
																		"src": "1075:14:7"
																	}
																],
																"id": 7894,
																"name": "MemberAccess",
																"src": "1075:20:7"
															}
														],
														"id": 7895,
														"name": "UnaryOperation",
														"src": "1074:21:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "536f6c7574696f6e20697320616c726561647920696e20757365",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "string",
															"type": "literal_string \"Solution is already in use\"",
															"value": "Solution is already in use"
														},
														"id": 7896,
														"name": "Literal",
														"src": "1097:28:7"
													}
												],
												"id": 7897,
												"name": "FunctionCall",
												"src": "1066:60:7"
											}
										],
										"id": 7898,
										"name": "ExpressionStatement",
										"src": "1066:60:7"
									},
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"operator": "=",
													"type": "bool"
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": null,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"member_name": "inUse",
															"referencedDeclaration": 7870,
															"type": "bool"
														},
														"children": [
															{
																"attributes": {
																	"argumentTypes": null,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"type": "struct SolnSquareVerifier.Solution storage ref"
																},
																"children": [
																	{
																		"attributes": {
																			"argumentTypes": null,
																			"overloadedDeclarations": [
																				null
																			],
																			"referencedDeclaration": 7877,
																			"type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
																			"value": "solutions"
																		},
																		"id": 7899,
																		"name": "Identifier",
																		"src": "1136:9:7"
																	},
																	{
																		"attributes": {
																			"argumentTypes": null,
																			"overloadedDeclarations": [
																				null
																			],
																			"referencedDeclaration": 7885,
																			"type": "bytes32",
																			"value": "key"
																		},
																		"id": 7900,
																		"name": "Identifier",
																		"src": "1146:3:7"
																	}
																],
																"id": 7901,
																"name": "IndexAccess",
																"src": "1136:14:7"
															}
														],
														"id": 7902,
														"name": "MemberAccess",
														"src": "1136:20:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "74727565",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "bool",
															"type": "bool",
															"value": "true"
														},
														"id": 7903,
														"name": "Literal",
														"src": "1159:4:7"
													}
												],
												"id": 7904,
												"name": "Assignment",
												"src": "1136:27:7"
											}
										],
										"id": 7905,
										"name": "ExpressionStatement",
										"src": "1136:27:7"
									},
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"operator": "=",
													"type": "address"
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": null,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"member_name": "sender",
															"referencedDeclaration": 7872,
															"type": "address"
														},
														"children": [
															{
																"attributes": {
																	"argumentTypes": null,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"type": "struct SolnSquareVerifier.Solution storage ref"
																},
																"children": [
																	{
																		"attributes": {
																			"argumentTypes": null,
																			"overloadedDeclarations": [
																				null
																			],
																			"referencedDeclaration": 7877,
																			"type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
																			"value": "solutions"
																		},
																		"id": 7906,
																		"name": "Identifier",
																		"src": "1173:9:7"
																	},
																	{
																		"attributes": {
																			"argumentTypes": null,
																			"overloadedDeclarations": [
																				null
																			],
																			"referencedDeclaration": 7885,
																			"type": "bytes32",
																			"value": "key"
																		},
																		"id": 7907,
																		"name": "Identifier",
																		"src": "1183:3:7"
																	}
																],
																"id": 7908,
																"name": "IndexAccess",
																"src": "1173:14:7"
															}
														],
														"id": 7909,
														"name": "MemberAccess",
														"src": "1173:21:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7887,
															"type": "address",
															"value": "sender"
														},
														"id": 7910,
														"name": "Identifier",
														"src": "1197:6:7"
													}
												],
												"id": 7911,
												"name": "Assignment",
												"src": "1173:30:7"
											}
										],
										"id": 7912,
										"name": "ExpressionStatement",
										"src": "1173:30:7"
									},
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"isStructConstructorCall": false,
													"lValueRequested": false,
													"names": [null],
													"type": "tuple()",
													"type_conversion": false
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7883,
															"type": "function (bytes32,address)",
															"value": "AddedSolution"
														},
														"id": 7913,
														"name": "Identifier",
														"src": "1218:13:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7885,
															"type": "bytes32",
															"value": "key"
														},
														"id": 7914,
														"name": "Identifier",
														"src": "1232:3:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7887,
															"type": "address",
															"value": "sender"
														},
														"id": 7915,
														"name": "Identifier",
														"src": "1237:6:7"
													}
												],
												"id": 7916,
												"name": "FunctionCall",
												"src": "1218:26:7"
											}
										],
										"id": 7917,
										"name": "EmitStatement",
										"src": "1213:31:7"
									}
								],
								"id": 7918,
								"name": "Block",
								"src": "1056:195:7"
							}
						],
						"id": 7919,
						"name": "FunctionDefinition",
						"src": "997:254:7"
					},
					{
						"attributes": {
							"documentation": null,
							"implemented": true,
							"isConstructor": false,
							"kind": "function",
							"modifiers": [null],
							"name": "mintVerified",
							"scope": 7988,
							"stateMutability": "nonpayable",
							"superFunction": null,
							"visibility": "public"
						},
						"children": [
							{
								"children": [
									{
										"attributes": {
											"constant": false,
											"name": "to",
											"scope": 7987,
											"stateVariable": false,
											"storageLocation": "default",
											"type": "address",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"name": "address",
													"stateMutability": "nonpayable",
													"type": "address"
												},
												"id": 7920,
												"name": "ElementaryTypeName",
												"src": "1509:7:7"
											}
										],
										"id": 7921,
										"name": "VariableDeclaration",
										"src": "1509:10:7"
									},
									{
										"attributes": {
											"constant": false,
											"name": "tokenId",
											"scope": 7987,
											"stateVariable": false,
											"storageLocation": "default",
											"type": "uint256",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"name": "uint256",
													"type": "uint256"
												},
												"id": 7922,
												"name": "ElementaryTypeName",
												"src": "1529:7:7"
											}
										],
										"id": 7923,
										"name": "VariableDeclaration",
										"src": "1529:15:7"
									},
									{
										"attributes": {
											"constant": false,
											"name": "a",
											"scope": 7987,
											"stateVariable": false,
											"storageLocation": "memory",
											"type": "uint256[2]",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"type": "uint256[2]"
												},
												"children": [
													{
														"attributes": {
															"name": "uint256",
															"type": "uint256"
														},
														"id": 7924,
														"name": "ElementaryTypeName",
														"src": "1554:7:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "32",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "number",
															"type": "int_const 2",
															"value": "2"
														},
														"id": 7925,
														"name": "Literal",
														"src": "1562:1:7"
													}
												],
												"id": 7926,
												"name": "ArrayTypeName",
												"src": "1554:10:7"
											}
										],
										"id": 7927,
										"name": "VariableDeclaration",
										"src": "1554:19:7"
									},
									{
										"attributes": {
											"constant": false,
											"name": "b",
											"scope": 7987,
											"stateVariable": false,
											"storageLocation": "memory",
											"type": "uint256[2][2]",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"type": "uint256[2][2]"
												},
												"children": [
													{
														"attributes": {
															"type": "uint256[2]"
														},
														"children": [
															{
																"attributes": {
																	"name": "uint256",
																	"type": "uint256"
																},
																"id": 7928,
																"name": "ElementaryTypeName",
																"src": "1583:7:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"hexvalue": "32",
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"subdenomination": null,
																	"token": "number",
																	"type": "int_const 2",
																	"value": "2"
																},
																"id": 7929,
																"name": "Literal",
																"src": "1591:1:7"
															}
														],
														"id": 7930,
														"name": "ArrayTypeName",
														"src": "1583:10:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "32",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "number",
															"type": "int_const 2",
															"value": "2"
														},
														"id": 7931,
														"name": "Literal",
														"src": "1594:1:7"
													}
												],
												"id": 7932,
												"name": "ArrayTypeName",
												"src": "1583:13:7"
											}
										],
										"id": 7933,
										"name": "VariableDeclaration",
										"src": "1583:22:7"
									},
									{
										"attributes": {
											"constant": false,
											"name": "c",
											"scope": 7987,
											"stateVariable": false,
											"storageLocation": "memory",
											"type": "uint256[2]",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"type": "uint256[2]"
												},
												"children": [
													{
														"attributes": {
															"name": "uint256",
															"type": "uint256"
														},
														"id": 7934,
														"name": "ElementaryTypeName",
														"src": "1615:7:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "32",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "number",
															"type": "int_const 2",
															"value": "2"
														},
														"id": 7935,
														"name": "Literal",
														"src": "1623:1:7"
													}
												],
												"id": 7936,
												"name": "ArrayTypeName",
												"src": "1615:10:7"
											}
										],
										"id": 7937,
										"name": "VariableDeclaration",
										"src": "1615:19:7"
									},
									{
										"attributes": {
											"constant": false,
											"name": "inputs",
											"scope": 7987,
											"stateVariable": false,
											"storageLocation": "memory",
											"type": "uint256[2]",
											"value": null,
											"visibility": "internal"
										},
										"children": [
											{
												"attributes": {
													"type": "uint256[2]"
												},
												"children": [
													{
														"attributes": {
															"name": "uint256",
															"type": "uint256"
														},
														"id": 7938,
														"name": "ElementaryTypeName",
														"src": "1644:7:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "32",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "number",
															"type": "int_const 2",
															"value": "2"
														},
														"id": 7939,
														"name": "Literal",
														"src": "1652:1:7"
													}
												],
												"id": 7940,
												"name": "ArrayTypeName",
												"src": "1644:10:7"
											}
										],
										"id": 7941,
										"name": "VariableDeclaration",
										"src": "1644:24:7"
									}
								],
								"id": 7942,
								"name": "ParameterList",
								"src": "1499:175:7"
							},
							{
								"attributes": {
									"parameters": [null]
								},
								"children": [],
								"id": 7943,
								"name": "ParameterList",
								"src": "1682:0:7"
							},
							{
								"children": [
									{
										"attributes": {
											"assignments": [7945]
										},
										"children": [
											{
												"attributes": {
													"constant": false,
													"name": "key",
													"scope": 7986,
													"stateVariable": false,
													"storageLocation": "default",
													"type": "bytes32",
													"value": null,
													"visibility": "internal"
												},
												"children": [
													{
														"attributes": {
															"name": "bytes32",
															"type": "bytes32"
														},
														"id": 7944,
														"name": "ElementaryTypeName",
														"src": "1692:7:7"
													}
												],
												"id": 7945,
												"name": "VariableDeclaration",
												"src": "1692:11:7"
											},
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"isStructConstructorCall": false,
													"lValueRequested": false,
													"names": [null],
													"type": "bytes32",
													"type_conversion": false
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 10555,
															"type": "function (bytes memory) pure returns (bytes32)",
															"value": "keccak256"
														},
														"id": 7946,
														"name": "Identifier",
														"src": "1706:9:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"isStructConstructorCall": false,
															"lValueRequested": false,
															"names": [null],
															"type": "bytes memory",
															"type_conversion": false
														},
														"children": [
															{
																"attributes": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
																			"typeString": "uint256[2] memory[2] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	],
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"member_name": "encodePacked",
																	"referencedDeclaration": null,
																	"type": "function () pure returns (bytes memory)"
																},
																"children": [
																	{
																		"attributes": {
																			"argumentTypes": null,
																			"overloadedDeclarations": [
																				null
																			],
																			"referencedDeclaration": 10548,
																			"type": "abi",
																			"value": "abi"
																		},
																		"id": 7947,
																		"name": "Identifier",
																		"src": "1716:3:7"
																	}
																],
																"id": 7948,
																"name": "MemberAccess",
																"src": "1716:16:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7927,
																	"type": "uint256[2] memory",
																	"value": "a"
																},
																"id": 7949,
																"name": "Identifier",
																"src": "1733:1:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7933,
																	"type": "uint256[2] memory[2] memory",
																	"value": "b"
																},
																"id": 7950,
																"name": "Identifier",
																"src": "1736:1:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7937,
																	"type": "uint256[2] memory",
																	"value": "c"
																},
																"id": 7951,
																"name": "Identifier",
																"src": "1739:1:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7941,
																	"type": "uint256[2] memory",
																	"value": "inputs"
																},
																"id": 7952,
																"name": "Identifier",
																"src": "1742:6:7"
															}
														],
														"id": 7953,
														"name": "FunctionCall",
														"src": "1716:33:7"
													}
												],
												"id": 7954,
												"name": "FunctionCall",
												"src": "1706:44:7"
											}
										],
										"id": 7955,
										"name": "VariableDeclarationStatement",
										"src": "1692:58:7"
									},
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"isStructConstructorCall": false,
													"lValueRequested": false,
													"names": [null],
													"type": "tuple()",
													"type_conversion": false
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
																	"typeString": "literal_string \"Solution is already in use\""
																}
															],
															"overloadedDeclarations": [
																10564, 10565
															],
															"referencedDeclaration": 10565,
															"type": "function (bool,string memory) pure",
															"value": "require"
														},
														"id": 7956,
														"name": "Identifier",
														"src": "1760:7:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"operator": "!",
															"prefix": true,
															"type": "bool"
														},
														"children": [
															{
																"attributes": {
																	"argumentTypes": null,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"member_name": "inUse",
																	"referencedDeclaration": 7870,
																	"type": "bool"
																},
																"children": [
																	{
																		"attributes": {
																			"argumentTypes": null,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"type": "struct SolnSquareVerifier.Solution storage ref"
																		},
																		"children": [
																			{
																				"attributes": {
																					"argumentTypes": null,
																					"overloadedDeclarations": [
																						null
																					],
																					"referencedDeclaration": 7877,
																					"type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
																					"value": "solutions"
																				},
																				"id": 7957,
																				"name": "Identifier",
																				"src": "1769:9:7"
																			},
																			{
																				"attributes": {
																					"argumentTypes": null,
																					"overloadedDeclarations": [
																						null
																					],
																					"referencedDeclaration": 7945,
																					"type": "bytes32",
																					"value": "key"
																				},
																				"id": 7958,
																				"name": "Identifier",
																				"src": "1779:3:7"
																			}
																		],
																		"id": 7959,
																		"name": "IndexAccess",
																		"src": "1769:14:7"
																	}
																],
																"id": 7960,
																"name": "MemberAccess",
																"src": "1769:20:7"
															}
														],
														"id": 7961,
														"name": "UnaryOperation",
														"src": "1768:21:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "536f6c7574696f6e20697320616c726561647920696e20757365",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "string",
															"type": "literal_string \"Solution is already in use\"",
															"value": "Solution is already in use"
														},
														"id": 7962,
														"name": "Literal",
														"src": "1791:28:7"
													}
												],
												"id": 7963,
												"name": "FunctionCall",
												"src": "1760:60:7"
											}
										],
										"id": 7964,
										"name": "ExpressionStatement",
										"src": "1760:60:7"
									},
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"isStructConstructorCall": false,
													"lValueRequested": false,
													"names": [null],
													"type": "tuple()",
													"type_conversion": false
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_b62dd58d37a698e97b9148846e06acd9d8b626a6eb0111665a790c9e35099ff8",
																	"typeString": "literal_string \"Proof is not Zokrates valid\""
																}
															],
															"overloadedDeclarations": [
																10564, 10565
															],
															"referencedDeclaration": 10565,
															"type": "function (bool,string memory) pure",
															"value": "require"
														},
														"id": 7965,
														"name": "Identifier",
														"src": "1830:7:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"isStructConstructorCall": false,
															"lValueRequested": false,
															"names": [null],
															"type": "bool",
															"type_conversion": false
														},
														"children": [
															{
																"attributes": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
																			"typeString": "uint256[2] memory[2] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	],
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 10545,
																	"type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)",
																	"value": "verifyTx"
																},
																"id": 7966,
																"name": "Identifier",
																"src": "1838:8:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7927,
																	"type": "uint256[2] memory",
																	"value": "a"
																},
																"id": 7967,
																"name": "Identifier",
																"src": "1847:1:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7933,
																	"type": "uint256[2] memory[2] memory",
																	"value": "b"
																},
																"id": 7968,
																"name": "Identifier",
																"src": "1850:1:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7937,
																	"type": "uint256[2] memory",
																	"value": "c"
																},
																"id": 7969,
																"name": "Identifier",
																"src": "1853:1:7"
															},
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 7941,
																	"type": "uint256[2] memory",
																	"value": "inputs"
																},
																"id": 7970,
																"name": "Identifier",
																"src": "1856:6:7"
															}
														],
														"id": 7971,
														"name": "FunctionCall",
														"src": "1838:25:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"hexvalue": "50726f6f66206973206e6f74205a6f6b72617465732076616c6964",
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"subdenomination": null,
															"token": "string",
															"type": "literal_string \"Proof is not Zokrates valid\"",
															"value": "Proof is not Zokrates valid"
														},
														"id": 7972,
														"name": "Literal",
														"src": "1865:29:7"
													}
												],
												"id": 7973,
												"name": "FunctionCall",
												"src": "1830:65:7"
											}
										],
										"id": 7974,
										"name": "ExpressionStatement",
										"src": "1830:65:7"
									},
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"isStructConstructorCall": false,
													"lValueRequested": false,
													"names": [null],
													"type": "tuple()",
													"type_conversion": false
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7919,
															"type": "function (bytes32,address)",
															"value": "addSolution"
														},
														"id": 7975,
														"name": "Identifier",
														"src": "1905:11:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7945,
															"type": "bytes32",
															"value": "key"
														},
														"id": 7976,
														"name": "Identifier",
														"src": "1917:3:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"member_name": "sender",
															"referencedDeclaration": null,
															"type": "address payable"
														},
														"children": [
															{
																"attributes": {
																	"argumentTypes": null,
																	"overloadedDeclarations": [
																		null
																	],
																	"referencedDeclaration": 10561,
																	"type": "msg",
																	"value": "msg"
																},
																"id": 7977,
																"name": "Identifier",
																"src": "1922:3:7"
															}
														],
														"id": 7978,
														"name": "MemberAccess",
														"src": "1922:10:7"
													}
												],
												"id": 7979,
												"name": "FunctionCall",
												"src": "1905:28:7"
											}
										],
										"id": 7980,
										"name": "ExpressionStatement",
										"src": "1905:28:7"
									},
									{
										"children": [
											{
												"attributes": {
													"argumentTypes": null,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"isStructConstructorCall": false,
													"lValueRequested": false,
													"names": [null],
													"type": "bool",
													"type_conversion": false
												},
												"children": [
													{
														"attributes": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 1465,
															"type": "function (address,uint256) returns (bool)",
															"value": "mint"
														},
														"id": 7981,
														"name": "Identifier",
														"src": "1943:4:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7921,
															"type": "address",
															"value": "to"
														},
														"id": 7982,
														"name": "Identifier",
														"src": "1948:2:7"
													},
													{
														"attributes": {
															"argumentTypes": null,
															"overloadedDeclarations": [
																null
															],
															"referencedDeclaration": 7923,
															"type": "uint256",
															"value": "tokenId"
														},
														"id": 7983,
														"name": "Identifier",
														"src": "1952:7:7"
													}
												],
												"id": 7984,
												"name": "FunctionCall",
												"src": "1943:17:7"
											}
										],
										"id": 7985,
										"name": "ExpressionStatement",
										"src": "1943:17:7"
									}
								],
								"id": 7986,
								"name": "Block",
								"src": "1682:285:7"
							}
						],
						"id": 7987,
						"name": "FunctionDefinition",
						"src": "1478:489:7"
					}
				],
				"id": 7988,
				"name": "ContractDefinition",
				"src": "319:1650:7"
			}
		],
		"id": 7989,
		"name": "SourceUnit",
		"src": "0:1970:7"
	},
	"compiler": {
		"name": "solc",
		"version": "0.5.5+commit.47a71e8f.Emscripten.clang"
	},
	"networks": {
		"4": {
			"events": {},
			"links": {},
			"address": "0x212c2E0A66E3a28D9D37D18a390883bEe2c783E6",
			"transactionHash": "0x988d3b620eba11f2453dc2b5277bd7d5aac86016f63dd4dbc060f2513e210d19"
		}
	},
	"schemaVersion": "3.4.8",
	"updatedAt": "2022-08-11T15:29:22.475Z",
	"networkType": "ethereum",
	"devdoc": {
		"methods": {
			"__callback(bytes32,string)": {
				"details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
			},
			"isApprovedForAll(address,address)": {
				"details": "Tells whether an operator is approved by a given owner",
				"params": {
					"operator": "operator address which you want to query the approval of",
					"owner": "owner address which you want to query the approval of"
				},
				"return": "bool whether the given operator is approved by the given owner"
			},
			"setApprovalForAll(address,bool)": {
				"details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
				"params": {
					"approved": "representing the status of the approval to be set",
					"to": "operator address to set the approval"
				}
			},
			"supportsInterface(bytes4)": {
				"details": "implement supportsInterface(bytes4) using a lookup table"
			},
			"tokenByIndex(uint256)": {
				"details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
				"params": {
					"index": "uint256 representing the index to be accessed of the tokens list"
				},
				"return": "uint256 token ID at the given index of the tokens list"
			},
			"tokenOfOwnerByIndex(address,uint256)": {
				"details": "Gets the token ID at a given index of the tokens list of the requested owner",
				"params": {
					"index": "uint256 representing the index to be accessed of the requested tokens list",
					"owner": "address owning the tokens list to be accessed"
				},
				"return": "uint256 token ID at the given index of the tokens list owned by the requested address"
			},
			"totalSupply()": {
				"details": "Gets the total amount of tokens stored by the contract",
				"return": "uint256 representing the total amount of tokens"
			}
		}
	},
	"userdoc": {
		"methods": {}
	}
}
