{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AddedSolution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "nextOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "inputs",
          "type": "uint256[2]"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AddedSolution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"nextOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xe5cab168a3b99777f6ed11a9818cc3484ebfde4cc18c197c7166c7047448a36a\",\"urls\":[\"bzzr://26a10b53de61baa85d6fe82cadf74afae5dc1b01b1f8225c1b9b8fc50b07e687\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xca7d95bc77602780e1da4e2d0a8c7a612c0d8e8c5c6c6e3d064d3fd034004d9a\",\"urls\":[\"bzzr://8c6dec362d8cd5dc68d4fdc938f253f6896bda17fbd8d3291e396c0cf3434257\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xb2521bfa6dabf73866fd4cd0aee9db234f473bcb675d536aeba29dcfaafda5d1\",\"urls\":[\"bzzr://d5541467c7cd17a3169e99e138274c58f57beb4f11f2a563b1ffc72238144adc\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x4014fc1419634d8ff6e91f0d169b625ec3af541b00388918b33e25ea00b5828e\",\"urls\":[\"bzzr://a445fb75abbb5d11b37c1e333dd5df668f03fd95cf1bc06638be91a0e8524cec\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060600160405280603f815260200162004d58603f9139601390805190602001906200003592919062000560565b5060006015556040518060400160405280600f81526020017f5265616c457374617465546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f5245540000000000000000000000000000000000000000000000000000000000815250818160138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620001435780601f10620001175761010080835404028352916020019162000143565b820191906000526020600020905b8154815290600101906020018083116200012557829003601f168201915b5050505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16200021e60006200031560201b60201c565b620002366301ffc9a760e01b620004be60201b60201c565b6200024e6380ac58cd60e01b620004be60201b60201c565b6200026663780e9d6360e01b620004be60201b60201c565b82600f90805190602001906200027e92919062000560565b5081601090805190602001906200029792919062000560565b508060119080519060200190620002b092919062000560565b50620002c9635b5e139f60e01b620004be60201b60201c565b50505033601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200060f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620003be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018062004d376021913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff161562000457577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1620004bb565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515620004f457600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005a357805160ff1916838001178555620005d4565b82800160010185558215620005d4579182015b82811115620005d3578251825591602001919060010190620005b6565b5b509050620005e39190620005e7565b5090565b6200060c91905b8082111562000608576000816000905550600101620005ee565b5090565b90565b614718806200061f6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806342842e0e116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd14610c55578063e985e9c514610cfc578063f2fde38b14610d78578063fec6cfb914610dbc57610173565b8063a22cb46514610a7d578063b88d4fde14610acd578063bdc32be014610bd257610173565b806342842e0e146107445780634f6ccce7146107b2578063621e9ec0146107f45780636352211e1461096d57806370a08231146109db578063893d20e814610a3357610173565b806318160ddd1161013057806318160ddd146103cf57806323b872dd146103ed57806327dc297e1461045b5780632f745c591461052057806338bbfa501461058257806340c10f19146106de57610173565b806301ffc9a714610178578063081812fc146101dd578063095ea7b31461024b578063150704011461029957806316c38b3c1461031c57806317d7de7c1461034c575b600080fd5b6101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f47565b604051808215151515815260200191505060405180910390f35b610209600480360360208110156101f357600080fd5b8101908080359060200190929190505050610faf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102976004803603604081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611069565b005b6102a16112a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e15780820151818401526020810190506102c6565b50505050905090810190601f16801561030e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61034a6004803603602081101561033257600080fd5b81019080803515159060200190929190505050611348565b005b6103546114ed565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610394578082015181840152602081019050610379565b50505050905090810190601f1680156103c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103d761158f565b6040518082815260200191505060405180910390f35b6104596004803603606081101561040357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061159c565b005b61051e6004803603604081101561047157600080fd5b81019080803590602001909291908035906020019064010000000081111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111640100000000831117156104cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115c1565b005b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611604565b6040518082815260200191505060405180910390f35b6106dc6004803603606081101561059857600080fd5b8101908080359060200190929190803590602001906401000000008111156105bf57600080fd5b8201836020820111156105d157600080fd5b803590602001918460018302840111640100000000831117156105f357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061167b565b005b61072a600480360360408110156106f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061169e565b604051808215151515815260200191505060405180910390f35b6107b06004803603606081101561075a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117cc565b005b6107de600480360360208110156107c857600080fd5b81019080803590602001909291905050506117ec565b6040518082815260200191505060405180910390f35b610953600480360361014081101561080b57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108c0578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508152602001906001019061086c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611824565b604051808215151515815260200191505060405180910390f35b6109996004803603602081101561098357600080fd5b8101908080359060200190929190505050611a89565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a1d600480360360208110156109f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ac6565b6040518082815260200191505060405180910390f35b610a3b611b16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610acb60048036036040811015610a9357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b3f565b005b610bd060048036036080811015610ae357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b4a57600080fd5b820183602082011115610b5c57600080fd5b80359060200191846001830284011164010000000083111715610b7e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c7b565b005b610bda611ca3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c1a578082015181840152602081019050610bff565b50505050905090810190601f168015610c475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c8160048036036020811015610c6b57600080fd5b8101908080359060200190929190505050611d45565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cc1578082015181840152602081019050610ca6565b50505050905090810190601f168015610cee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d5e60048036036040811015610d1257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e0e565b604051808215151515815260200191505060405180910390f35b610dba60048036036020811015610d8e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea2565b005b610f456004803603610180811015610dd357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610eb2578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610e5e565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050612077565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610fba826122b4565b151561102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526571756972657320746f6b656e2061637475616c6c7920657869737473000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611123576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806146736038913960400191505060405180910390fd5b61112b611b16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158061116b575061116a3383611e0e565b5b15156111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260428152602001806146ab6042913960600191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133e5780601f106113135761010080835404028352916020019161133e565b820191906000526020600020905b81548152906001019060200180831161132157829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145ea6021913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611486577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16114ea565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115855780601f1061155a57610100808354040283529160200191611585565b820191906000526020600020905b81548152906001019060200180831161156857829003601f168201915b5050505050905090565b6000600880549050905090565b6115a63382612326565b15156115b157600080fd5b6115bc8383836123bb565b505050565b611600828260006040519080825280601f01601f1916602001820160405280156115fa5781602001600182028038833980820191505090505b5061167b565b5050565b600061160f83611ac6565b8210151561161c57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561166857fe5b9060005260206000200154905092915050565b6000801b600d60008060001b815260200190815260200160002081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611747576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145ea6021913960400191505060405180910390fd5b600060149054906101000a900460ff161515156117af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061462d6021913960400191505060405180910390fd5b6117b983836123df565b6117c282612400565b6001905092915050565b6117e783838360405180602001604052806000815250611c7b565b505050565b60006117f661158f565b8210151561180357600080fd5b60088281548110151561181257fe5b90600052602060002001549050919050565b600061182e614394565b604051806040016040528087600060028110151561184857fe5b6020020151815260200187600160028110151561186157fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110151561189657fe5b602002015160006002811015156118a957fe5b602002015181526020018860006002811015156118c257fe5b602002015160016002811015156118d557fe5b6020020151815250815260200160405180604001604052808860016002811015156118fc57fe5b6020020151600060028110151561190f57fe5b6020020151815260200188600160028110151561192857fe5b6020020151600160028110151561193b57fe5b60200201518152508152508160200181905250604051806040016040528085600060028110151561196857fe5b6020020151815260200185600160028110151561198157fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156119c35781602001602082028038833980820191505090505b50905060008090505b6002811015611a115784816002811015156119e357fe5b602002015182828151811015156119f657fe5b906020019060200201818152505080806001019150506119cc565b506000611a1e8284612553565b1415611a7a577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e3960405180806020018281038252602281526020018061460b6022913960400191505060405180910390a1600192505050611a81565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b0f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206126db565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b7a57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611c8684848461159c565b611c92848484846126e9565b1515611c9d57600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d3b5780601f10611d1057610100808354040283529160200191611d3b565b820191906000526020600020905b815481529060010190602001808311611d1e57829003601f168201915b5050505050905090565b6060611d50826122b4565b1515611d5b57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e025780601f10611dd757610100808354040283529160200191611e02565b820191906000526020600020905b815481529060010190602001808311611de557829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145ea6021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611fd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806145c46026913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616381604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000848484846040516020018085600260200280838360005b838110156120ab578082015181840152602081019050612090565b505050509050018460026000925b818410156120ff5782846020020151600260200280838360005b838110156120ee5780820151818401526020810190506120d3565b5050505090500192600101926120b9565b9250505083600260200280838360005b8381101561212a57808201518184015260208101905061210f565b5050505090500182600260200280838360005b8381101561215857808201518184015260208101905061213d565b505050509050019450505050506040516020818303038152906040528051906020012090506016600082815260200190815260200160002060000160009054906101000a900460ff16151515612216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b61222285858585611824565b1515612296576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50726f6f66206973206e6f742076616c6964000000000000000000000000000081525060200191505060405180910390fd5b6122a081336128d4565b6122aa878761169e565b5050505050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061233283611a89565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806123a157508373ffffffffffffffffffffffffffffffffffffffff1661238984610faf565b73ffffffffffffffffffffffffffffffffffffffff16145b806123b257506123b18185611e0e565b5b91505092915050565b6123c6838383612a7c565b6123d08382612d40565b6123da8282612ee4565b505050565b6123e98282612fab565b6123f38282612ee4565b6123fc816131aa565b5050565b612409816122b4565b151561247d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f526571756972657320746f6b656e20657869737473000000000000000000000081525060200191505060405180910390fd5b61252960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125165780601f106124eb57610100808354040283529160200191612516565b820191906000526020600020905b8154815290600101906020018083116124f957829003601f168201915b5050505050612524836131f6565b613330565b60126000838152602001908152602001600020908051906020019061254f9291906143c8565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050612581614448565b612589613374565b905080608001515160018651011415156125a257600080fd5b6125aa614490565b6040518060400160405280600081526020016000815250905060008090505b865181101561264e578387828151811015156125e157fe5b906020019060200201511015156125f757600080fd5b61263f8261263a85608001516001850181518110151561261357fe5b906020019060200201518a8581518110151561262b57fe5b906020019060200201516137ce565b61386a565b915080806001019150506125c9565b50612675818360800151600081518110151561266657fe5b9060200190602002015161386a565b90506126bb8560000151866020015161268d84613927565b856040015161269f8a60400151613927565b87606001516126b18960000151613927565b89602001516139c3565b15156126cd57600193505050506126d5565b600093505050505b92915050565b600081600001549050919050565b600061270a8473ffffffffffffffffffffffffffffffffffffffff16613b47565b151561271957600190506128cc565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127f45780820151818401526020810190506127d9565b50505050905090810190601f1680156128215780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561284357600080fd5b505af1158015612857573d6000803e3d6000fd5b505050506040513d602081101561286d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6016600083815260200190815260200160002060000160009054906101000a900460ff1615151561296d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b6129836001601554613b9290919063ffffffff16565b60158190555060016016600084815260200190815260200160002060000160006101000a81548160ff021916908315150217905550806016600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f794f800bcc1704bbac3deeba70adfa76e678654f9b36f11b1e02eeb99c498ea08282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515612b52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5265717569726573206f776e65722069732073656e646572000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612bf7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f526571756972657320616464726573732069732076616c69640000000000000081525060200191505060405180910390fd5b612c0081613c1c565b612c47600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cdc565b612c8e600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cf2565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612d986001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613d1590919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612e8b576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e0957fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e6357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612edd91906144aa565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612fb4816122b4565b15151561300c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061464e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156130b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5265717569726573206164646472657373206973206e6f7420656d707479000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061314a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cdc565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561323e576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061332b565b600082905060005b60008214151561326c578080600101915050600a8281151561326457fe5b049150613246565b6060816040519080825280601f01601f1916602001820160405280156132a15781602001600182028038833980820191505090505b50905060006001830390505b60008614151561332357600a868115156132c357fe5b0660300160f81b8282806001900393508151811015156132df57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561331b57fe5b0495506132ad565b819450505050505b919050565b606061336c8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613d5f565b905092915050565b61337c614448565b60405180604001604052807f15dbf86cf49c8fb3cea1bf79752eee1e4f8607fedc5a8756d155b67dc181964081526020017f09865873e4e75c7fc93eb3c87b93f3bfc16025f42e10fdfbe6e90b7df4ba38798152508160000181905250604051806040016040528060405180604001604052807f0f3520f3bdc2900eb56b84b098ffd8087fab2298d50c08c1adda952af8bcbaed81526020017f29fcb850828e4c051eefb3cacd794d8129ae655b647318b12c40900aba23e278815250815260200160405180604001604052807f0b5d45db4177dc6e0bd19830eab33c42f44888751a710ea48e3bc0da70b0f9cf81526020017f2c1436f5469c7d31deb22bde2392b8b336494f67a3bd8386926f4d6013ecc4c78152508152508160200181905250604051806040016040528060405180604001604052807f2e3dfc112b9842ca1db3f531bff67da12448ca2535eb4c4a06f8419870f1164981526020017f111f2157df84fde4acb087ceffabf4cc6d9145eaac3e05ee66765a4fef06df3c815250815260200160405180604001604052807f2aabde8133f444ee7cadb79cd1c8cf84362ced5dbd35125c425d46336262cfb381526020017f1c343e7d0c14fbf7a0b64c980e618c4fa4dc4b7d13ae859dd3d540d7fed7ecb08152508152508160400181905250604051806040016040528060405180604001604052807f1dff659cb515b093f5244759700741c97e9516bcb741e34f3be96f366677921981526020017f25bf921b76b77f3eb483c754c09a4d4faffb377f10014a4a842575a4a43dec0e815250815260200160405180604001604052807f1a2d788c9018d3f0b45655f8f0d2baa25c68fa38980efb6ed8f7006667b18ee581526020017f28acc13db42fbc3017c1d127168d8e0cf8a4c88751373619c64d7dd41e1c9fd48152508152508160600181905250600360405190808252806020026020018201604052801561366357816020015b6136506144d6565b8152602001906001900390816136485790505b50816080018190525060405180604001604052807f24e8b817a42465c45800700f0851d74fca77c955988599260317c3f3a5f1c08681526020017f14b5a05b308b2577fdbb32e0925fd1af3061b1b498d7653ab468b7fec4907229815250816080015160008151811015156136d457fe5b9060200190602002018190525060405180604001604052807f1b25e1b5ce2d624691106a0a1d7016ad0f8d7eeebd28f095e411b84a164f264081526020017f10b3d5e0968b7f0119df82f9583660b64d9c811a0241792c7b57c22d8c8f8dbf8152508160800151600181518110151561374957fe5b9060200190602002018190525060405180604001604052807f10047f0e793de0ca1a85d78759a5162f816efe7ff34caf9eff511cec281c0bfe81526020017f1810f53f1538efea7cf23a084cc2252586eb408607c4bde7b5f70907896eda01815250816080015160028151811015156137be57fe5b9060200190602002018190525090565b6137d6614490565b6137de6144f0565b83600001518160006003811015156137f257fe5b602002018181525050836020015181600160038110151561380f57fe5b6020020181815250508281600260038110151561382857fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461385357613855565bfe5b5080151561386257600080fd5b505092915050565b613872614490565b61387a614512565b836000015181600060048110151561388e57fe5b60200201818152505083602001518160016004811015156138ab57fe5b60200201818152505082600001518160026004811015156138c857fe5b60200201818152505082602001518160036004811015156138e557fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461391057613912565bfe5b5080151561391f57600080fd5b505092915050565b61392f614490565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561396c575060008360200151145b156139905760405180604001604052806000815260200160008152509150506139be565b6040518060400160405280846000015181526020018285602001518115156139b457fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613a0257816020015b6139ef6144d6565b8152602001906001900390816139e75790505b50905060606004604051908082528060200260200182016040528015613a4257816020015b613a2f614534565b815260200190600190039081613a275790505b5090508a826000815181101515613a5557fe5b9060200190602002018190525088826001815181101515613a7257fe5b9060200190602002018190525086826002815181101515613a8f57fe5b9060200190602002018190525084826003815181101515613aac57fe5b9060200190602002018190525089816000815181101515613ac957fe5b9060200190602002018190525087816001815181101515613ae657fe5b9060200190602002018190525085816002815181101515613b0357fe5b9060200190602002018190525083816003815181101515613b2057fe5b90602001906020020181905250613b37828261403f565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613b8957506000801b8214155b92505050919050565b6000808284019050838110151515613c12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613cd95760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b613d0a60018260000154613d1590919063ffffffff16565b816000018190555050565b6000613d5783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506142d2565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613dbb5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613e46578881815181101515613de957fe5b90602001015160f81c60f81b8383806001019450815181101515613e0957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613dd2565b600090505b8751811015613ebf578781815181101515613e6257fe5b90602001015160f81c60f81b8383806001019450815181101515613e8257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613e4b565b600090505b8651811015613f38578681815181101515613edb57fe5b90602001015160f81c60f81b8383806001019450815181101515613efb57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ec4565b600090505b8551811015613fb1578581815181101515613f5457fe5b90602001015160f81c60f81b8383806001019450815181101515613f7457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f3d565b600090505b845181101561402a578481815181101515613fcd57fe5b90602001015160f81c60f81b8383806001019450815181101515613fed57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613fb6565b82995050505050505050505095945050505050565b60008151835114151561405157600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156140905781602001602082028038833980820191505090505b50905060008090505b8381101561426e5786818151811015156140af57fe5b906020019060200201516000015182600060068402018151811015156140d157fe5b906020019060200201818152505086818151811015156140ed57fe5b9060200190602002015160200151826001600684020181518110151561410f57fe5b9060200190602002018181525050858181518110151561412b57fe5b9060200190602002015160000151600060028110151561414757fe5b6020020151826002600684020181518110151561416057fe5b9060200190602002018181525050858181518110151561417c57fe5b9060200190602002015160000151600160028110151561419857fe5b602002015182600360068402018151811015156141b157fe5b906020019060200201818152505085818151811015156141cd57fe5b906020019060200201516020015160006002811015156141e957fe5b6020020151826004600684020181518110151561420257fe5b9060200190602002018181525050858181518110151561421e57fe5b9060200190602002015160200151600160028110151561423a57fe5b6020020151826005600684020181518110151561425357fe5b90602001906020020181815250508080600101915050614099565b5061427761455a565b60006020826020860260208601600060086107d05a03f19050806000811461429e576142a0565bfe5b508015156142ad57600080fd5b60008260006001811015156142be57fe5b602002015114159550505050505092915050565b60008383111582901515614381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561434657808201518184015260208101905061432b565b50505050905090810190601f1680156143735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518061010001604052806143a86144d6565b81526020016143b5614534565b81526020016143c26144d6565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061440957805160ff1916838001178555614437565b82800160010185558215614437579182015b8281111561443657825182559160200191906001019061441b565b5b509050614444919061457c565b5090565b604051806101e0016040528061445c6144d6565b8152602001614469614534565b8152602001614476614534565b8152602001614483614534565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156144d1578183600052602060002091820191016144d0919061457c565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806145476145a1565b81526020016145546145a1565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61459e91905b8082111561459a576000816000905550600101614582565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe5265717569726573206e65774f776e6572206973206e6f7420656d707479206164647265737352657175697265732073656e64657220697320636f6e7472616374206f776e65725472616e73616374696f6e207375636365737366756c6c792076657269666965642e526571756972657320636f6e747261637420697320696e20706c6179206d6f6465526571756972657320746f6b656e20646f6573206e6f7420616c72656164792065786973745265717569726573207472616e7366657220746f206120646966666572656e742061646472657373207468616e207468652073656e6465725265717569726573206d6573736167652073656e64657220746f206265206f776e6572206f7220617070726f76616c20666f7220616c6c20746f2062652074727565a165627a7a72305820bef9f62147d7a9cd042e6c569d1f8e98fdad4884cab46ce94e13d2233c93a40c002952657175697265732073656e64657220697320636f6e7472616374206f776e657268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806342842e0e116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd14610c55578063e985e9c514610cfc578063f2fde38b14610d78578063fec6cfb914610dbc57610173565b8063a22cb46514610a7d578063b88d4fde14610acd578063bdc32be014610bd257610173565b806342842e0e146107445780634f6ccce7146107b2578063621e9ec0146107f45780636352211e1461096d57806370a08231146109db578063893d20e814610a3357610173565b806318160ddd1161013057806318160ddd146103cf57806323b872dd146103ed57806327dc297e1461045b5780632f745c591461052057806338bbfa501461058257806340c10f19146106de57610173565b806301ffc9a714610178578063081812fc146101dd578063095ea7b31461024b578063150704011461029957806316c38b3c1461031c57806317d7de7c1461034c575b600080fd5b6101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f47565b604051808215151515815260200191505060405180910390f35b610209600480360360208110156101f357600080fd5b8101908080359060200190929190505050610faf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102976004803603604081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611069565b005b6102a16112a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e15780820151818401526020810190506102c6565b50505050905090810190601f16801561030e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61034a6004803603602081101561033257600080fd5b81019080803515159060200190929190505050611348565b005b6103546114ed565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610394578082015181840152602081019050610379565b50505050905090810190601f1680156103c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103d761158f565b6040518082815260200191505060405180910390f35b6104596004803603606081101561040357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061159c565b005b61051e6004803603604081101561047157600080fd5b81019080803590602001909291908035906020019064010000000081111561049857600080fd5b8201836020820111156104aa57600080fd5b803590602001918460018302840111640100000000831117156104cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115c1565b005b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611604565b6040518082815260200191505060405180910390f35b6106dc6004803603606081101561059857600080fd5b8101908080359060200190929190803590602001906401000000008111156105bf57600080fd5b8201836020820111156105d157600080fd5b803590602001918460018302840111640100000000831117156105f357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065657600080fd5b82018360208201111561066857600080fd5b8035906020019184600183028401116401000000008311171561068a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061167b565b005b61072a600480360360408110156106f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061169e565b604051808215151515815260200191505060405180910390f35b6107b06004803603606081101561075a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117cc565b005b6107de600480360360208110156107c857600080fd5b81019080803590602001909291905050506117ec565b6040518082815260200191505060405180910390f35b610953600480360361014081101561080b57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108c0578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508152602001906001019061086c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611824565b604051808215151515815260200191505060405180910390f35b6109996004803603602081101561098357600080fd5b8101908080359060200190929190505050611a89565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a1d600480360360208110156109f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ac6565b6040518082815260200191505060405180910390f35b610a3b611b16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610acb60048036036040811015610a9357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b3f565b005b610bd060048036036080811015610ae357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b4a57600080fd5b820183602082011115610b5c57600080fd5b80359060200191846001830284011164010000000083111715610b7e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c7b565b005b610bda611ca3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c1a578082015181840152602081019050610bff565b50505050905090810190601f168015610c475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c8160048036036020811015610c6b57600080fd5b8101908080359060200190929190505050611d45565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cc1578082015181840152602081019050610ca6565b50505050905090810190601f168015610cee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d5e60048036036040811015610d1257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e0e565b604051808215151515815260200191505060405180910390f35b610dba60048036036020811015610d8e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea2565b005b610f456004803603610180811015610dd357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610eb2578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610e5e565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050612077565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000610fba826122b4565b151561102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526571756972657320746f6b656e2061637475616c6c7920657869737473000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611123576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806146736038913960400191505060405180910390fd5b61112b611b16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158061116b575061116a3383611e0e565b5b15156111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260428152602001806146ab6042913960600191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133e5780601f106113135761010080835404028352916020019161133e565b820191906000526020600020905b81548152906001019060200180831161132157829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145ea6021913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611486577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16114ea565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115855780601f1061155a57610100808354040283529160200191611585565b820191906000526020600020905b81548152906001019060200180831161156857829003601f168201915b5050505050905090565b6000600880549050905090565b6115a63382612326565b15156115b157600080fd5b6115bc8383836123bb565b505050565b611600828260006040519080825280601f01601f1916602001820160405280156115fa5781602001600182028038833980820191505090505b5061167b565b5050565b600061160f83611ac6565b8210151561161c57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561166857fe5b9060005260206000200154905092915050565b6000801b600d60008060001b815260200190815260200160002081905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611747576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145ea6021913960400191505060405180910390fd5b600060149054906101000a900460ff161515156117af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061462d6021913960400191505060405180910390fd5b6117b983836123df565b6117c282612400565b6001905092915050565b6117e783838360405180602001604052806000815250611c7b565b505050565b60006117f661158f565b8210151561180357600080fd5b60088281548110151561181257fe5b90600052602060002001549050919050565b600061182e614394565b604051806040016040528087600060028110151561184857fe5b6020020151815260200187600160028110151561186157fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110151561189657fe5b602002015160006002811015156118a957fe5b602002015181526020018860006002811015156118c257fe5b602002015160016002811015156118d557fe5b6020020151815250815260200160405180604001604052808860016002811015156118fc57fe5b6020020151600060028110151561190f57fe5b6020020151815260200188600160028110151561192857fe5b6020020151600160028110151561193b57fe5b60200201518152508152508160200181905250604051806040016040528085600060028110151561196857fe5b6020020151815260200185600160028110151561198157fe5b60200201518152508160400181905250606060026040519080825280602002602001820160405280156119c35781602001602082028038833980820191505090505b50905060008090505b6002811015611a115784816002811015156119e357fe5b602002015182828151811015156119f657fe5b906020019060200201818152505080806001019150506119cc565b506000611a1e8284612553565b1415611a7a577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e3960405180806020018281038252602281526020018061460b6022913960400191505060405180910390a1600192505050611a81565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b0f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206126db565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b7a57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611c8684848461159c565b611c92848484846126e9565b1515611c9d57600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d3b5780601f10611d1057610100808354040283529160200191611d3b565b820191906000526020600020905b815481529060010190602001808311611d1e57829003601f168201915b5050505050905090565b6060611d50826122b4565b1515611d5b57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e025780601f10611dd757610100808354040283529160200191611e02565b820191906000526020600020905b815481529060010190602001808311611de557829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145ea6021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611fd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806145c46026913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616381604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000848484846040516020018085600260200280838360005b838110156120ab578082015181840152602081019050612090565b505050509050018460026000925b818410156120ff5782846020020151600260200280838360005b838110156120ee5780820151818401526020810190506120d3565b5050505090500192600101926120b9565b9250505083600260200280838360005b8381101561212a57808201518184015260208101905061210f565b5050505090500182600260200280838360005b8381101561215857808201518184015260208101905061213d565b505050509050019450505050506040516020818303038152906040528051906020012090506016600082815260200190815260200160002060000160009054906101000a900460ff16151515612216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b61222285858585611824565b1515612296576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50726f6f66206973206e6f742076616c6964000000000000000000000000000081525060200191505060405180910390fd5b6122a081336128d4565b6122aa878761169e565b5050505050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061233283611a89565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806123a157508373ffffffffffffffffffffffffffffffffffffffff1661238984610faf565b73ffffffffffffffffffffffffffffffffffffffff16145b806123b257506123b18185611e0e565b5b91505092915050565b6123c6838383612a7c565b6123d08382612d40565b6123da8282612ee4565b505050565b6123e98282612fab565b6123f38282612ee4565b6123fc816131aa565b5050565b612409816122b4565b151561247d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f526571756972657320746f6b656e20657869737473000000000000000000000081525060200191505060405180910390fd5b61252960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125165780601f106124eb57610100808354040283529160200191612516565b820191906000526020600020905b8154815290600101906020018083116124f957829003601f168201915b5050505050612524836131f6565b613330565b60126000838152602001908152602001600020908051906020019061254f9291906143c8565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050612581614448565b612589613374565b905080608001515160018651011415156125a257600080fd5b6125aa614490565b6040518060400160405280600081526020016000815250905060008090505b865181101561264e578387828151811015156125e157fe5b906020019060200201511015156125f757600080fd5b61263f8261263a85608001516001850181518110151561261357fe5b906020019060200201518a8581518110151561262b57fe5b906020019060200201516137ce565b61386a565b915080806001019150506125c9565b50612675818360800151600081518110151561266657fe5b9060200190602002015161386a565b90506126bb8560000151866020015161268d84613927565b856040015161269f8a60400151613927565b87606001516126b18960000151613927565b89602001516139c3565b15156126cd57600193505050506126d5565b600093505050505b92915050565b600081600001549050919050565b600061270a8473ffffffffffffffffffffffffffffffffffffffff16613b47565b151561271957600190506128cc565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127f45780820151818401526020810190506127d9565b50505050905090810190601f1680156128215780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561284357600080fd5b505af1158015612857573d6000803e3d6000fd5b505050506040513d602081101561286d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6016600083815260200190815260200160002060000160009054906101000a900460ff1615151561296d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20697320616c726561647920696e2075736500000000000081525060200191505060405180910390fd5b6129836001601554613b9290919063ffffffff16565b60158190555060016016600084815260200190815260200160002060000160006101000a81548160ff021916908315150217905550806016600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f794f800bcc1704bbac3deeba70adfa76e678654f9b36f11b1e02eeb99c498ea08282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515612b52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5265717569726573206f776e65722069732073656e646572000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612bf7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f526571756972657320616464726573732069732076616c69640000000000000081525060200191505060405180910390fd5b612c0081613c1c565b612c47600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cdc565b612c8e600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cf2565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612d986001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613d1590919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612e8b576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e0957fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e6357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612edd91906144aa565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612fb4816122b4565b15151561300c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061464e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156130b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5265717569726573206164646472657373206973206e6f7420656d707479000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061314a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cdc565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561323e576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061332b565b600082905060005b60008214151561326c578080600101915050600a8281151561326457fe5b049150613246565b6060816040519080825280601f01601f1916602001820160405280156132a15781602001600182028038833980820191505090505b50905060006001830390505b60008614151561332357600a868115156132c357fe5b0660300160f81b8282806001900393508151811015156132df57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561331b57fe5b0495506132ad565b819450505050505b919050565b606061336c8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613d5f565b905092915050565b61337c614448565b60405180604001604052807f15dbf86cf49c8fb3cea1bf79752eee1e4f8607fedc5a8756d155b67dc181964081526020017f09865873e4e75c7fc93eb3c87b93f3bfc16025f42e10fdfbe6e90b7df4ba38798152508160000181905250604051806040016040528060405180604001604052807f0f3520f3bdc2900eb56b84b098ffd8087fab2298d50c08c1adda952af8bcbaed81526020017f29fcb850828e4c051eefb3cacd794d8129ae655b647318b12c40900aba23e278815250815260200160405180604001604052807f0b5d45db4177dc6e0bd19830eab33c42f44888751a710ea48e3bc0da70b0f9cf81526020017f2c1436f5469c7d31deb22bde2392b8b336494f67a3bd8386926f4d6013ecc4c78152508152508160200181905250604051806040016040528060405180604001604052807f2e3dfc112b9842ca1db3f531bff67da12448ca2535eb4c4a06f8419870f1164981526020017f111f2157df84fde4acb087ceffabf4cc6d9145eaac3e05ee66765a4fef06df3c815250815260200160405180604001604052807f2aabde8133f444ee7cadb79cd1c8cf84362ced5dbd35125c425d46336262cfb381526020017f1c343e7d0c14fbf7a0b64c980e618c4fa4dc4b7d13ae859dd3d540d7fed7ecb08152508152508160400181905250604051806040016040528060405180604001604052807f1dff659cb515b093f5244759700741c97e9516bcb741e34f3be96f366677921981526020017f25bf921b76b77f3eb483c754c09a4d4faffb377f10014a4a842575a4a43dec0e815250815260200160405180604001604052807f1a2d788c9018d3f0b45655f8f0d2baa25c68fa38980efb6ed8f7006667b18ee581526020017f28acc13db42fbc3017c1d127168d8e0cf8a4c88751373619c64d7dd41e1c9fd48152508152508160600181905250600360405190808252806020026020018201604052801561366357816020015b6136506144d6565b8152602001906001900390816136485790505b50816080018190525060405180604001604052807f24e8b817a42465c45800700f0851d74fca77c955988599260317c3f3a5f1c08681526020017f14b5a05b308b2577fdbb32e0925fd1af3061b1b498d7653ab468b7fec4907229815250816080015160008151811015156136d457fe5b9060200190602002018190525060405180604001604052807f1b25e1b5ce2d624691106a0a1d7016ad0f8d7eeebd28f095e411b84a164f264081526020017f10b3d5e0968b7f0119df82f9583660b64d9c811a0241792c7b57c22d8c8f8dbf8152508160800151600181518110151561374957fe5b9060200190602002018190525060405180604001604052807f10047f0e793de0ca1a85d78759a5162f816efe7ff34caf9eff511cec281c0bfe81526020017f1810f53f1538efea7cf23a084cc2252586eb408607c4bde7b5f70907896eda01815250816080015160028151811015156137be57fe5b9060200190602002018190525090565b6137d6614490565b6137de6144f0565b83600001518160006003811015156137f257fe5b602002018181525050836020015181600160038110151561380f57fe5b6020020181815250508281600260038110151561382857fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461385357613855565bfe5b5080151561386257600080fd5b505092915050565b613872614490565b61387a614512565b836000015181600060048110151561388e57fe5b60200201818152505083602001518160016004811015156138ab57fe5b60200201818152505082600001518160026004811015156138c857fe5b60200201818152505082602001518160036004811015156138e557fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461391057613912565bfe5b5080151561391f57600080fd5b505092915050565b61392f614490565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561396c575060008360200151145b156139905760405180604001604052806000815260200160008152509150506139be565b6040518060400160405280846000015181526020018285602001518115156139b457fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613a0257816020015b6139ef6144d6565b8152602001906001900390816139e75790505b50905060606004604051908082528060200260200182016040528015613a4257816020015b613a2f614534565b815260200190600190039081613a275790505b5090508a826000815181101515613a5557fe5b9060200190602002018190525088826001815181101515613a7257fe5b9060200190602002018190525086826002815181101515613a8f57fe5b9060200190602002018190525084826003815181101515613aac57fe5b9060200190602002018190525089816000815181101515613ac957fe5b9060200190602002018190525087816001815181101515613ae657fe5b9060200190602002018190525085816002815181101515613b0357fe5b9060200190602002018190525083816003815181101515613b2057fe5b90602001906020020181905250613b37828261403f565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613b8957506000801b8214155b92505050919050565b6000808284019050838110151515613c12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613cd95760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b613d0a60018260000154613d1590919063ffffffff16565b816000018190555050565b6000613d5783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506142d2565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613dbb5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613e46578881815181101515613de957fe5b90602001015160f81c60f81b8383806001019450815181101515613e0957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613dd2565b600090505b8751811015613ebf578781815181101515613e6257fe5b90602001015160f81c60f81b8383806001019450815181101515613e8257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613e4b565b600090505b8651811015613f38578681815181101515613edb57fe5b90602001015160f81c60f81b8383806001019450815181101515613efb57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ec4565b600090505b8551811015613fb1578581815181101515613f5457fe5b90602001015160f81c60f81b8383806001019450815181101515613f7457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f3d565b600090505b845181101561402a578481815181101515613fcd57fe5b90602001015160f81c60f81b8383806001019450815181101515613fed57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613fb6565b82995050505050505050505095945050505050565b60008151835114151561405157600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156140905781602001602082028038833980820191505090505b50905060008090505b8381101561426e5786818151811015156140af57fe5b906020019060200201516000015182600060068402018151811015156140d157fe5b906020019060200201818152505086818151811015156140ed57fe5b9060200190602002015160200151826001600684020181518110151561410f57fe5b9060200190602002018181525050858181518110151561412b57fe5b9060200190602002015160000151600060028110151561414757fe5b6020020151826002600684020181518110151561416057fe5b9060200190602002018181525050858181518110151561417c57fe5b9060200190602002015160000151600160028110151561419857fe5b602002015182600360068402018151811015156141b157fe5b906020019060200201818152505085818151811015156141cd57fe5b906020019060200201516020015160006002811015156141e957fe5b6020020151826004600684020181518110151561420257fe5b9060200190602002018181525050858181518110151561421e57fe5b9060200190602002015160200151600160028110151561423a57fe5b6020020151826005600684020181518110151561425357fe5b90602001906020020181815250508080600101915050614099565b5061427761455a565b60006020826020860260208601600060086107d05a03f19050806000811461429e576142a0565bfe5b508015156142ad57600080fd5b60008260006001811015156142be57fe5b602002015114159550505050505092915050565b60008383111582901515614381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561434657808201518184015260208101905061432b565b50505050905090810190601f1680156143735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518061010001604052806143a86144d6565b81526020016143b5614534565b81526020016143c26144d6565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061440957805160ff1916838001178555614437565b82800160010185558215614437579182015b8281111561443657825182559160200191906001019061441b565b5b509050614444919061457c565b5090565b604051806101e0016040528061445c6144d6565b8152602001614469614534565b8152602001614476614534565b8152602001614483614534565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156144d1578183600052602060002091820191016144d0919061457c565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806145476145a1565b81526020016145546145a1565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61459e91905b8082111561459a576000816000905550600101614582565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe5265717569726573206e65774f776e6572206973206e6f7420656d707479206164647265737352657175697265732073656e64657220697320636f6e7472616374206f776e65725472616e73616374696f6e207375636365737366756c6c792076657269666965642e526571756972657320636f6e747261637420697320696e20706c6179206d6f6465526571756972657320746f6b656e20646f6573206e6f7420616c72656164792065786973745265717569726573207472616e7366657220746f206120646966666572656e742061646472657373207468616e207468652073656e6465725265717569726573206d6573736167652073656e64657220746f206265206f776e6572206f7220617070726f76616c20666f7220616c6c20746f2062652074727565a165627a7a72305820bef9f62147d7a9cd042e6c569d1f8e98fdad4884cab46ce94e13d2233c93a40c0029",
  "sourceMap": "379:1698:7:-;;;22950:104:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;647:1:7;623:25;;23089:160:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23181:4;23187:6;23195:13;20777:313;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;693:10;684:6;;:19;;;;;;;;;;;;;;;;;;718:28;739:6;;;;;;;;;;;718:28;;;;;;;;;;;;;;;;;;;;;;2149:16;2159:5;2149:9;;;:16;;:::i;:::-;3116:40;2714:10;3135:20;;3116:18;;;:40;;:::i;:::-;5369;5244:10;5388:20;;5369:18;;;:40;;:::i;:::-;13391:51;12997:10;13410:31;;13391:18;;;:51;;:::i;:::-;20955:4;20947:5;:12;;;;;;;;;;;;:::i;:::-;;20979:6;20969:7;:16;;;;;;;;;;;;:::i;:::-;;21011:12;20995:13;:28;;;;;;;;;;;;:::i;:::-;;21034:49;20588:10;21053:29;;21034:18;;;:49;;:::i;:::-;20777:313;;;23232:10;23224:5;;:18;;;;;;;;;;;;;;;;;;23089:160;;379:1698:7;;1861:167:4;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:5;1919:7;;:15;;;;;;;;;;;;;;;;;;1949:7;;;;;;;;;;;1945:76;;;1963:18;1970:10;1963:18;;;;;;;;;;;;;;;;;;;;;;1945:76;;;2001:20;2010:10;2001:20;;;;;;;;;;;;;;;;;;;;;;1945:76;1861:167;:::o;3494:158::-;3584:10;3569:25;;:11;:25;;;;;3561:34;;;;;;;;3641:4;3605:20;:33;3626:11;3605:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3494:158;:::o;379:1698:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "379:1698:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;379:1698:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3254:161:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3254:161:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6714:236;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6714:236:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5960:748;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5960:748:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21269:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21269:90:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1861:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1861:167:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;21177:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21177:86:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14184:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7955:210;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7955:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17051:122:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17051:122:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17051:122:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17051:122:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17051:122:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;17051:122:6;;;;;;;;;;;;;;;:::i;:::-;;13822:210:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13822:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17179:228:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17179:228:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17179:228:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17179:228:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17179:228:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;17179:228:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17179:228:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17179:228:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17179:228:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;17179:228:6;;;;;;;;;;;;;;;:::i;:::-;;23255:211:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23255:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8171:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8171:162:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14615:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14615:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;27244:755:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;27244:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27244:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27244:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27244:755:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;27244:755:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5721:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5721:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5422:293;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5422:293:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;467:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7242:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7242:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8339:249;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8339:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8339:249:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8339:249:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8339:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8339:249:4;;;;;;;;;;;;;;;:::i;:::-;;21365:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21365:102:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21473:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21473:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21473:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7776:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7776:173:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1032:398;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1032:398:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1602:473:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1602:473:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1602:473:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1602:473:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1602:473:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1602:473:7;;;;;;;;;;;;;;:::i;:::-;;3254:161:4;3348:4;3375:20;:33;3396:11;3375:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3368:40;;3254:161;;;:::o;6714:236::-;6773:7;6851:16;6859:7;6851;:16::i;:::-;6843:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6919:15;:24;6935:7;6919:24;;;;;;;;;;;;;;;;;;;;;6912:31;;6714:236;;;:::o;5960:748::-;6127:11;:20;6139:7;6127:20;;;;;;;;;;;;;;;;;;;;;6121:26;;:2;:26;;;;6100:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6378:10;:8;:10::i;:::-;6364:24;;:10;:24;;;;:60;;;;6392:32;6409:10;6421:2;6392:16;:32::i;:::-;6364:60;6343:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6605:2;6578:15;:24;6594:7;6578:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6693:7;6689:2;6658:43;;6667:11;:20;6679:7;6667:20;;;;;;;;;;;;;;;;;;;;;6658:43;;;;;;;;;;;;5960:748;;:::o;21269:90::-;21313:13;21345:7;21338:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21269:90;:::o;1861:167::-;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:5;1919:7;;:15;;;;;;;;;;;;;;;;;;1949:7;;;;;;;;;;;1945:76;;;1963:18;1970:10;1963:18;;;;;;;;;;;;;;;;;;;;;;1945:76;;;2001:20;2010:10;2001:20;;;;;;;;;;;;;;;;;;;;;;1945:76;1861:167;:::o;21177:86::-;21219:13;21251:5;21244:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21177:86;:::o;14184:94::-;14228:7;14254:10;:17;;;;14247:24;;14184:94;:::o;7955:210::-;8075:39;8094:10;8106:7;8075:18;:39::i;:::-;8067:48;;;;;;;;8126:32;8140:4;8146:2;8150:7;8126:13;:32::i;:::-;7955:210;;;:::o;17051:122:6:-;17126:40;17137:5;17144:7;17163:1;17153:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;17153:12:6;;;;17126:10;:40::i;:::-;17051:122;;:::o;13822:210:4:-;13926:7;13965:16;13975:5;13965:9;:16::i;:::-;13957:5;:24;13949:33;;;;;;;;13999:12;:19;14012:5;13999:19;;;;;;;;;;;;;;;14019:5;13999:26;;;;;;;;;;;;;;;;;;13992:33;;13822:210;;;;:::o;17179:228:6:-;17398:1;17390:10;;17353:22;:34;17384:1;17376:10;;17353:34;;;;;;;;;;;:47;;;;17179:228;;;:::o;23255:211:4:-;23370:4;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:7;;;;;;;;;;;2316:8;2308:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23390:18;23396:2;23400:7;23390:5;:18::i;:::-;23418:20;23430:7;23418:11;:20::i;:::-;23455:4;23448:11;;23255:211;;;;:::o;8171:162::-;8287:39;8304:4;8310:2;8314:7;8287:39;;;;;;;;;;;;:16;:39::i;:::-;8171:162;;;:::o;14615:148::-;14673:7;14708:13;:11;:13::i;:::-;14700:5;:21;14692:30;;;;;;;;14739:10;14750:5;14739:17;;;;;;;;;;;;;;;;;;14732:24;;14615:148;;;:::o;27244:755:8:-;27412:6;27431:18;;:::i;:::-;27470:27;;;;;;;;27486:1;27488;27486:4;;;;;;;;;;;;;27470:27;;;;27492:1;27494;27492:4;;;;;;;;;;;;;27470:27;;;27460:5;:7;;:37;;;;27518:55;;;;;;;;;;;;;;;;27535:1;27537;27535:4;;;;;;;;;;;;;27540:1;27535:7;;;;;;;;;;;;;27518:55;;;;27544:1;27546;27544:4;;;;;;;;;;;;;27549:1;27544:7;;;;;;;;;;;;;27518:55;;;;;;;;;;;;;;;27555:1;27557;27555:4;;;;;;;;;;;;;27560:1;27555:7;;;;;;;;;;;;;27518:55;;;;27564:1;27566;27564:4;;;;;;;;;;;;;27569:1;27564:7;;;;;;;;;;;;;27518:55;;;;;;27508:5;:7;;:65;;;;27594:27;;;;;;;;27610:1;27612;27610:4;;;;;;;;;;;;;27594:27;;;;27616:1;27618;27616:4;;;;;;;;;;;;;27594:27;;;27584:5;:7;;:37;;;;27632:28;27677:12;27663:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;27663:27:8;;;;27632:58;;27706:9;27718:1;27706:13;;27701:95;27725:12;27721:1;:16;27701:95;;;27776:5;27782:1;27776:8;;;;;;;;;;;;;27759:11;27771:1;27759:14;;;;;;;;;;;;;;;;;:25;;;;;27739:3;;;;;;;27701:95;;;;27840:1;27810:26;27817:11;27830:5;27810:6;:26::i;:::-;:31;27806:186;;;27863:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27931:4;27924:11;;;;;;27806:186;27975:5;27968:12;;;;27244:755;;;;;;;:::o;5721:162:4:-;5776:7;5856:11;:20;5868:7;5856:20;;;;;;;;;;;;;;;;;;;;;5849:27;;5721:162;;;:::o;5422:293::-;5477:7;5666:42;5683:17;:24;5701:5;5683:24;;;;;;;;;;;;;;;5666:16;:42::i;:::-;5659:49;;5422:293;;;:::o;467:80::-;508:7;534:6;;;;;;;;;;;527:13;;467:80;:::o;7242:213::-;7327:10;7321:16;;:2;:16;;;;7313:25;;;;;;;;7385:8;7348:18;:30;7367:10;7348:30;;;;;;;;;;;;;;;:34;7379:2;7348:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7435:2;7408:40;;7423:10;7408:40;;;7439:8;7408:40;;;;;;;;;;;;;;;;;;;;;;7242:213;;:::o;8339:249::-;8483:31;8496:4;8502:2;8506:7;8483:12;:31::i;:::-;8532:48;8555:4;8561:2;8565:7;8574:5;8532:22;:48::i;:::-;8524:57;;;;;;;;8339:249;;;;:::o;21365:102::-;21415:13;21447;21440:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21365:102;:::o;21473:151::-;21531:13;21564:16;21572:7;21564;:16::i;:::-;21556:25;;;;;;;;21598:10;:19;21609:7;21598:19;;;;;;;;;;;21591:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21473:151;;;:::o;7776:173::-;7880:4;7907:18;:25;7926:5;7907:25;;;;;;;;;;;;;;;:35;7933:8;7907:35;;;;;;;;;;;;;;;;;;;;;;;;;7900:42;;7776:173;;;;:::o;1032:398::-;913:6;;;;;;;;;;;899:20;;:10;:20;;;891:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:1;1263:22;;:8;:22;;;;1242:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:8;1360:6;;:17;;;;;;;;;;;;;;;;;;1393:30;1414:8;1393:30;;;;;;;;;;;;;;;;;;;;;;1032:398;:::o;1602:473:7:-;1808:11;1849:1;1852;1855;1858:6;1832:33;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1832:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1832:33:7;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1832:33:7;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1832:33:7;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1832:33:7;;;1822:44;;;;;;1808:58;;1885:9;:14;1895:3;1885:14;;;;;;;;;;;:21;;;;;;;;;;;;1884:22;1876:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1955:25;1964:1;1967;1970;1973:6;1955:8;:25::i;:::-;1947:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:28;2025:3;2030:10;2013:11;:28::i;:::-;2051:17;2056:2;2060:7;2051:4;:17::i;:::-;;1602:473;;;;;;;:::o;8782:152:4:-;8839:4;8855:13;8871:11;:20;8883:7;8871:20;;;;;;;;;;;;;;;;;;;;;8855:36;;8925:1;8908:19;;:5;:19;;;;8901:26;;;8782:152;;;:::o;9294:298::-;9403:4;9423:13;9439:16;9447:7;9439;:16::i;:::-;9423:32;;9484:5;9473:16;;:7;:16;;;:63;;;;9529:7;9505:31;;:20;9517:7;9505:11;:20::i;:::-;:31;;;9473:63;:111;;;;9552:32;9569:5;9576:7;9552:16;:32::i;:::-;9473:111;9465:120;;;9294:298;;;;:::o;15138:269::-;15253:38;15273:4;15279:2;15283:7;15253:19;:38::i;:::-;15302:47;15335:4;15341:7;15302:32;:47::i;:::-;15360:40;15388:2;15392:7;15360:27;:40::i;:::-;15138:269;;;:::o;15662:196::-;15725:24;15737:2;15741:7;15725:11;:24::i;:::-;15760:40;15788:2;15792:7;15760:27;:40::i;:::-;15811;15843:7;15811:31;:40::i;:::-;15662:196;;:::o;22096:189::-;22161:16;22169:7;22161;:16::i;:::-;22153:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22235:43;22245:13;22235:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22260:17;22269:7;22260:8;:17::i;:::-;22235:9;:43::i;:::-;22213:10;:19;22224:7;22213:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;22096:189;:::o;26077:1126:8:-;26173:7;26198:26;26227:77;26198:106;;26315:22;;:::i;:::-;26340:14;:12;:14::i;:::-;26315:39;;26393:2;:12;;;:19;26388:1;26373:5;:12;:16;:39;26365:48;;;;;;;;26472:27;;:::i;:::-;26502:21;;;;;;;;26518:1;26502:21;;;;26521:1;26502:21;;;26472:51;;26539:9;26551:1;26539:13;;26534:252;26558:5;:12;26554:1;:16;26534:252;;;26611:18;26600:5;26606:1;26600:8;;;;;;;;;;;;;;;;;;:29;26592:38;;;;;;;;26652:122;26687:4;26710:49;26729:2;:12;;;26746:1;26742;:5;26729:19;;;;;;;;;;;;;;;;;;26750:5;26756:1;26750:8;;;;;;;;;;;;;;;;;;26710:18;:49::i;:::-;26652:16;:122::i;:::-;26645:129;;26572:3;;;;;;;26534:252;;;;26803:39;26820:4;26826:2;:12;;;26839:1;26826:15;;;;;;;;;;;;;;;;;;26803:16;:39::i;:::-;26796:46;;26872:284;26911:5;:7;;;26937:5;:7;;;26963:20;26978:4;26963:14;:20::i;:::-;27002:2;:8;;;27029:23;27044:5;:7;;;27029:14;:23::i;:::-;27071:2;:8;;;27098:20;27113:2;:4;;;27098:14;:20::i;:::-;27137:2;:4;;;26872:20;:284::i;:::-;26871:285;26853:323;;;27175:1;27168:8;;;;;;;26853:323;27194:1;27187:8;;;;;26077:1126;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11758:431:4:-;11909:4;11930:15;:2;:13;;;:15::i;:::-;11929:16;11925:58;;;11968:4;11961:11;;;;11925:58;11993:13;12025:2;12009:36;;;12059:10;12083:4;12101:7;12122:5;12009:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12009:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12009:128:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12009:128:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12009:128:4;;;;;;;;;;;;;;;;11993:144;;4382:10;12165:16;;12155:26;;;:6;:26;;;;12147:35;;;11758:431;;;;;;;:::o;1073:302:7:-;1151:9;:14;1161:3;1151:14;;;;;;;;;;;:21;;;;;;;;;;;;1150:22;1142:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1229:20;1247:1;1229:13;;:17;;:20;;;;:::i;:::-;1213:13;:36;;;;1283:4;1259:9;:14;1269:3;1259:14;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;1321:6;1297:9;:14;1307:3;1297:14;;;;;;;;;;;:21;;;:30;;;;;;;;;;;;;;;;;;1342:26;1356:3;1361:6;1342:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;1073:302;;:::o;10485:745:4:-;10686:11;:20;10698:7;10686:20;;;;;;;;;;;;;;;;;;;;;10678:28;;:4;:28;;;10670:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10835:1;10821:16;;:2;:16;;;;10813:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10909:23;10924:7;10909:14;:23::i;:::-;11016:41;11035:17;:21;11053:2;11035:21;;;;;;;;;;;;;;;11016:18;:41::i;:::-;11067:43;11086:17;:23;11104:4;11086:23;;;;;;;;;;;;;;;11067:18;:43::i;:::-;11143:2;11120:11;:20;11132:7;11120:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11215:7;11211:2;11196:27;;11205:4;11196:27;;;;;;;;;;;;10485:745;;;:::o;17662:1140::-;17936:22;17961:32;17991:1;17961:12;:18;17974:4;17961:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17936:57;;18003:18;18024:17;:26;18042:7;18024:26;;;;;;;;;;;;18003:47;;18168:14;18154:10;:28;;18150:323;;;18198:19;18220:12;:18;18233:4;18220:18;;;;;;;;;;;;;;;18239:14;18220:34;;;;;;;;;;;;;;;;;;18198:56;;18302:11;18269:12;:18;18282:4;18269:18;;;;;;;;;;;;;;;18288:10;18269:30;;;;;;;;;;;;;;;;;:44;;;;18418:10;18385:17;:30;18403:11;18385:30;;;;;;;;;;;:43;;;;18150:323;;18559:12;:18;18572:4;18559:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17662:1140;;;;:::o;16508:183::-;16621:12;:16;16634:2;16621:16;;;;;;;;;;;;;;;:23;;;;16592:17;:26;16610:7;16592:26;;;;;;;;;;;:52;;;;16654:12;:16;16667:2;16654:16;;;;;;;;;;;;;;;16676:7;16654:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16654:30:4;;;;;;;;;;;;;;;;;;;;;;16508:183;;:::o;9749:537::-;9904:16;9912:7;9904;:16::i;:::-;9903:17;9895:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9994:1;9980:16;;:2;:16;;;;9972:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10142:2;10119:11;:20;10131:7;10119:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10154:41;10173:17;:21;10191:2;10173:21;;;;;;;;;;;;;;;10154:18;:41::i;:::-;10271:7;10267:2;10246:33;;10263:1;10246:33;;;;;;;;;;;;9749:537;;:::o;16886:161::-;16989:10;:17;;;;16962:15;:24;16978:7;16962:24;;;;;;;;;;;:44;;;;17016:10;17032:7;17016:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17016:24:4;;;;;;;;;;;;;;;;;;;;;;16886:161;:::o;49191:509:6:-;49268:27;49321:1;49315:2;:7;49311:48;;;49338:10;;;;;;;;;;;;;;;;;;;;;49311:48;49368:9;49380:2;49368:14;;49392:11;49413:66;49425:1;49420;:6;;49413:66;;;49442:5;;;;;;;49466:2;49461:7;;;;;;;;;;;49413:66;;;49488:17;49518:3;49508:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49508:14:6;;;;49488:34;;49532:9;49550:1;49544:3;:7;49532:19;;49561:104;49574:1;49568:2;:7;;49561:104;;;49627:2;49622;:7;;;;;;;;49616:2;:14;49603:29;;49591:4;49596:3;;;;;;;49591:9;;;;;;;;;;;;;;:41;;;;;;;;;;;49652:2;49646:8;;;;;;;;;;;49561:104;;;49688:4;49674:19;;;;;;49191:509;;;;:::o;45144:194::-;45246:33;45302:29;45312:2;45316;45302:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;45295:36;;45144:194;;;;:::o;22827:3242:8:-;22874:22;;:::i;:::-;22916:270;;;;;;;;22972:66;22916:270;;;;23094:66;22916:270;;;22909:2;:4;;:277;;;;23204:622;;;;;;;;;;;;;;;;23283:66;23204:622;;;;23417:66;23204:622;;;;;;;;;;;;;;;23581:66;23204:622;;;;23715:66;23204:622;;;;;;23197:2;:4;;:629;;;;23848:622;;;;;;;;;;;;;;;;23927:66;23848:622;;;;24061:66;23848:622;;;;;;;;;;;;;;;24225:66;23848:622;;;;24359:66;23848:622;;;;;;23837:2;:8;;:633;;;;24492:622;;;;;;;;;;;;;;;;24571:66;24492:622;;;;24705:66;24492:622;;;;;;;;;;;;;;;24869:66;24492:622;;;;25003:66;24492:622;;;;;;24481:2;:8;;:633;;;;25162:1;25140:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;25125:2;:12;;:39;;;;25193:270;;;;;;;;25249:66;25193:270;;;;25371:66;25193:270;;;25175:2;:12;;;25188:1;25175:15;;;;;;;;;;;;;;;;;:288;;;;25492:270;;;;;;;;25548:66;25492:270;;;;25670:66;25492:270;;;25474:2;:12;;;25487:1;25474:15;;;;;;;;;;;;;;;;;:288;;;;25791:270;;;;;;;;25847:66;25791:270;;;;25969:66;25791:270;;;25773:2;:12;;;25786:1;25773:15;;;;;;;;;;;;;;;;;:288;;;;22827:3242;:::o;18900:527::-;18985:16;;:::i;:::-;19019:23;;:::i;:::-;19064:1;:3;;;19053:5;19059:1;19053:8;;;;;;;;;;;;:14;;;;;19089:1;:3;;;19078:5;19084:1;19078:8;;;;;;;;;;;;:14;;;;;19114:1;19103:5;19109:1;19103:8;;;;;;;;;;;;:12;;;;;19126;19227:4;19224:1;19218:4;19211:5;19208:1;19205;19198:4;19193:3;19189:14;19184:48;19173:59;;19311:7;19337:1;19332:50;;;;19304:78;;19332:50;19358:9;19304:78;;19411:7;19403:16;;;;;;;;18900:527;;;;;;:::o;17750:565::-;17842:16;;:::i;:::-;17876:23;;:::i;:::-;17921:2;:4;;;17910:5;17916:1;17910:8;;;;;;;;;;;;:15;;;;;17947:2;:4;;;17936:5;17942:1;17936:8;;;;;;;;;;;;:15;;;;;17973:2;:4;;;17962:5;17968:1;17962:8;;;;;;;;;;;;:15;;;;;17999:2;:4;;;17988:5;17994:1;17988:8;;;;;;;;;;;;:15;;;;;18014:12;18115:4;18112:1;18106:4;18099:5;18096:1;18093;18086:4;18081:3;18077:14;18072:48;18061:59;;18199:7;18225:1;18220:50;;;;18192:78;;18220:50;18246:9;18192:78;;18299:7;18291:16;;;;;;;;17750:565;;;;;;:::o;17361:336::-;17418:14;;:::i;:::-;17498:9;17510:77;17498:89;;17609:1;17602;:3;;;:8;:20;;;;;17621:1;17614;:3;;;:8;17602:20;17598:46;;;17631:13;;;;;;;;17639:1;17631:13;;;;17642:1;17631:13;;;17624:20;;;;;17598:46;17662:27;;;;;;;;17670:1;:3;;;17662:27;;;;17686:1;17680;:3;;;:7;;;;;;;;17675:1;:13;17662:27;;;17655:34;;;17361:336;;;;:::o;21880:584::-;22151:4;22168:19;22204:1;22190:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22168:38;;22217:19;22253:1;22239:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22217:38;;22274:2;22266;22269:1;22266:5;;;;;;;;;;;;;;;;;:10;;;;22295:2;22287;22290:1;22287:5;;;;;;;;;;;;;;;;;:10;;;;22316:2;22308;22311:1;22308:5;;;;;;;;;;;;;;;;;:10;;;;22337:2;22329;22332:1;22329:5;;;;;;;;;;;;;;;;;:10;;;;22358:2;22350;22353:1;22350:5;;;;;;;;;;;;;;;;;:10;;;;22379:2;22371;22374:1;22371:5;;;;;;;;;;;;;;;;;:10;;;;22400:2;22392;22395:1;22392:5;;;;;;;;;;;;;;;;;:10;;;;22421:2;22413;22416:1;22413:5;;;;;;;;;;;;;;;;;:10;;;;22441:15;22449:2;22453;22441:7;:15::i;:::-;22434:22;;;;21880:584;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;834:176:1:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;12270:171:4:-;12369:1;12333:38;;:15;:24;12349:7;12333:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12329:106;;;12422:1;12387:15;:24;12403:7;12387:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12329:106;12270:171;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;45810:1094:6:-;45988:33;46033:16;46058:2;46033:28;;46071:16;46096:2;46071:28;;46109:16;46134:2;46109:28;;46147:16;46172:2;46147:28;;46185:16;46210:2;46185:28;;46223:19;46321:3;:10;46308:3;:10;46295:3;:10;46282:3;:10;46269:3;:10;:23;:36;:49;:62;46245:96;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46245:96:6;;;;46223:118;;46351:19;46379:5;46351:34;;46395:9;46407:1;46395:13;;46418:9;46430:1;46418:13;;46450:1;46446:5;;46441:78;46457:3;:10;46453:1;:14;46441:78;;;46502:3;46506:1;46502:6;;;;;;;;;;;;;;;;;;;46488;46495:3;;;;;;46488:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46469:3;;;;;;;46441:78;;;46537:1;46533:5;;46528:78;46544:3;:10;46540:1;:14;46528:78;;;46589:3;46593:1;46589:6;;;;;;;;;;;;;;;;;;;46575;46582:3;;;;;;46575:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46556:3;;;;;;;46528:78;;;46624:1;46620:5;;46615:78;46631:3;:10;46627:1;:14;46615:78;;;46676:3;46680:1;46676:6;;;;;;;;;;;;;;;;;;;46662;46669:3;;;;;;46662:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46643:3;;;;;;;46615:78;;;46711:1;46707:5;;46702:78;46718:3;:10;46714:1;:14;46702:78;;;46763:3;46767:1;46763:6;;;;;;;;;;;;;;;;;;;46749;46756:3;;;;;;46749:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46730:3;;;;;;;46702:78;;;46798:1;46794:5;;46789:78;46805:3;:10;46801:1;:14;46789:78;;;46850:3;46854:1;46850:6;;;;;;;;;;;;;;;;;;;46836;46843:3;;;;;;46836:11;;;;;;;;;;;;;;:20;;;;;;;;;;;46817:3;;;;;;;46789:78;;;46890:6;46876:21;;;;;;;;;;;45810:1094;;;;;;;:::o;19645:1145:8:-;19740:4;19783:2;:9;19770:2;:9;:22;19762:31;;;;;;;;19804:16;19823:2;:9;19804:28;;19843:17;19874:1;19863:8;:12;19843:32;;19886:22;19925:9;19911:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19911:24:8;;;;19886:49;;19951:9;19963:1;19951:13;;19946:309;19970:8;19966:1;:12;19946:309;;;20019:2;20022:1;20019:5;;;;;;;;;;;;;;;;;;:7;;;20000:5;20014:1;20010;20006;:5;:9;20000:16;;;;;;;;;;;;;;;;;:26;;;;;20060:2;20063:1;20060:5;;;;;;;;;;;;;;;;;;:7;;;20041:5;20055:1;20051;20047;:5;:9;20041:16;;;;;;;;;;;;;;;;;:26;;;;;20101:2;20104:1;20101:5;;;;;;;;;;;;;;;;;;:7;;;20109:1;20101:10;;;;;;;;;;;;;20082:5;20096:1;20092;20088;:5;:9;20082:16;;;;;;;;;;;;;;;;;:29;;;;;20145:2;20148:1;20145:5;;;;;;;;;;;;;;;;;;:7;;;20153:1;20145:10;;;;;;;;;;;;;20126:5;20140:1;20136;20132;:5;:9;20126:16;;;;;;;;;;;;;;;;;:29;;;;;20189:2;20192:1;20189:5;;;;;;;;;;;;;;;;;;:7;;;20197:1;20189:10;;;;;;;;;;;;;20170:5;20184:1;20180;20176;:5;:9;20170:16;;;;;;;;;;;;;;;;;:29;;;;;20233:2;20236:1;20233:5;;;;;;;;;;;;;;;;;;:7;;;20241:1;20233:10;;;;;;;;;;;;;20214:5;20228:1;20224;20220;:5;:9;20214:16;;;;;;;;;;;;;;;;;:29;;;;;19980:3;;;;;;;19946:309;;;;20265:21;;:::i;:::-;20297:12;20547:4;20525:3;20501:4;20490:9;20486:20;20462:4;20455:5;20451:16;20431:1;20411;20387:4;20382:3;20378:14;20355:211;20344:222;;20645:7;20671:1;20666:50;;;;20638:78;;20666:50;20692:9;20638:78;;20745:7;20737:16;;;;;;;;20781:1;20771:3;20775:1;20771:6;;;;;;;;;;;;;:11;;20764:18;;;;;;;19645:1145;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;379:1698:7:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;379:1698:7;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;379:1698:7;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;379:1698:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;379:1698:7;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./ERC721Mintable.sol\";\nimport \"./Verifier.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n// SquareVerifier,\ncontract SolnSquareVerifier is\n    Verifier,\n    ERC721Mintable(\"RealEstateToken\", \"RET\")\n{\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        bool isUsed;\n        address sender;\n    }\n\n    uint256 solutionCount = 0;\n    // TODO define an array of the above struct\n    // Defined a mapping to store all Solution structs\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) private solutions;\n    // TODO Create an event to emit when a solution is added\n    event AddedSolution(bytes32 key, address sender);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(bytes32 key, address sender) internal {\n        require(!solutions[key].isUsed, \"Solution is already in use\");\n        solutionCount = solutionCount.add(1);\n        solutions[key].isUsed = true;\n        solutions[key].sender = sender;\n        emit AddedSolution(key, sender);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mint(\n        address to,\n        uint256 tokenId,\n        uint256[2] memory a,\n        uint256[2][2] memory b,\n        uint256[2] memory c,\n        uint256[2] memory inputs\n    ) public {\n        bytes32 key = keccak256(abi.encodePacked(a, b, c, inputs));\n        require(!solutions[key].isUsed, \"Solution is already in use\");\n        require(verifyTx(a, b, c, inputs), \"Proof is not valid\");\n        addSolution(key, msg.sender);\n        mint(to, tokenId);\n    }\n}\n",
  "sourcePath": "C:\\Users\\diggy\\Documents\\Code\\Bitcoin-Nano\\Project 5\\eth-contracts\\contracts\\SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7999
      ]
    },
    "id": 8000,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7860,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7861,
        "nodeType": "ImportDirective",
        "scope": 8000,
        "sourceUnit": 1467,
        "src": "141:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7862,
        "nodeType": "ImportDirective",
        "scope": 8000,
        "sourceUnit": 10558,
        "src": "172:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7863,
        "nodeType": "ImportDirective",
        "scope": 8000,
        "sourceUnit": 236,
        "src": "197:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7864,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10557,
              "src": "414:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10557",
                "typeString": "contract Verifier"
              }
            },
            "id": 7865,
            "nodeType": "InheritanceSpecifier",
            "src": "414:8:7"
          },
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "5265616c457374617465546f6b656e",
                "id": 7867,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "443:17:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_1ae31053873e4cd555c8c3aab385652a69e74aea9398da659a924f7285870bc2",
                  "typeString": "literal_string \"RealEstateToken\""
                },
                "value": "RealEstateToken"
              },
              {
                "argumentTypes": null,
                "hexValue": "524554",
                "id": 7868,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "462:5:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_b6fd3bc82f3c6298b002e24dd774867f4688e9d5e24eeac95ab6699e14dce803",
                  "typeString": "literal_string \"RET\""
                },
                "value": "RET"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 7866,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1466,
              "src": "428:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1466",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 7869,
            "nodeType": "InheritanceSpecifier",
            "src": "428:40:7"
          }
        ],
        "contractDependencies": [
          1466,
          1007,
          398,
          1305,
          462,
          508,
          1415,
          7858,
          10557
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7999,
        "linearizedBaseContracts": [
          7999,
          1466,
          1415,
          7858,
          1305,
          1007,
          508,
          462,
          398,
          10557
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7874,
            "members": [
              {
                "constant": false,
                "id": 7871,
                "name": "isUsed",
                "nodeType": "VariableDeclaration",
                "scope": 7874,
                "src": "575:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7870,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "575:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7873,
                "name": "sender",
                "nodeType": "VariableDeclaration",
                "scope": 7874,
                "src": "596:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7872,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "596:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7999,
            "src": "549:68:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7877,
            "name": "solutionCount",
            "nodeType": "VariableDeclaration",
            "scope": 7999,
            "src": "623:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7875,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7876,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "647:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7881,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7999,
            "src": "822:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7874_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7880,
              "keyType": {
                "id": 7878,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "830:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "822:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7874_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7879,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7874,
                "src": "841:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7874_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7887,
            "name": "AddedSolution",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7883,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7887,
                  "src": "955:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7882,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7885,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 7887,
                  "src": "968:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:29:7"
            },
            "src": "935:49:7"
          },
          {
            "body": {
              "id": 7929,
              "nodeType": "Block",
              "src": "1132:243:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1150:22:7",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7895,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7881,
                              "src": "1151:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7874_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7897,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7896,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7889,
                              "src": "1161:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1151:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7874_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7898,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUsed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7871,
                          "src": "1151:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20697320616c726561647920696e20757365",
                        "id": 7900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:28:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
                          "typeString": "literal_string \"Solution is already in use\""
                        },
                        "value": "Solution is already in use"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
                          "typeString": "literal_string \"Solution is already in use\""
                        }
                      ],
                      "id": 7894,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10575,
                        10576
                      ],
                      "referencedDeclaration": 10576,
                      "src": "1142:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7902,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:61:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7903,
                      "name": "solutionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7877,
                      "src": "1213:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 7906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1247:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7904,
                          "name": "solutionCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7877,
                          "src": "1229:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75,
                        "src": "1229:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1229:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1213:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7909,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:36:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7910,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7881,
                          "src": "1259:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7874_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7912,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7911,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7889,
                          "src": "1269:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1259:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7874_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7913,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isUsed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7871,
                      "src": "1259:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1283:4:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1259:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7916,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:28:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7917,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7881,
                          "src": "1297:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7874_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7919,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7918,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7889,
                          "src": "1307:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1297:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7874_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7920,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7873,
                      "src": "1297:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7921,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7891,
                      "src": "1321:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1297:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7923,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:30:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7925,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7889,
                        "src": "1356:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7926,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7891,
                        "src": "1361:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7924,
                      "name": "AddedSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7887,
                      "src": "1342:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7928,
                  "nodeType": "EmitStatement",
                  "src": "1337:31:7"
                }
              ]
            },
            "documentation": null,
            "id": 7930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7889,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7930,
                  "src": "1094:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7888,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7891,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 7930,
                  "src": "1107:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1093:29:7"
            },
            "returnParameters": {
              "id": 7893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:7"
            },
            "scope": 7999,
            "src": "1073:302:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7997,
              "nodeType": "Block",
              "src": "1798:277:7",
              "statements": [
                {
                  "assignments": [
                    7956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7956,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7997,
                      "src": "1808:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7955,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1808:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7966,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7960,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7938,
                            "src": "1849:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7961,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7944,
                            "src": "1852:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7962,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7948,
                            "src": "1855:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7963,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7952,
                            "src": "1858:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7958,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10559,
                            "src": "1832:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1832:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1832:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7957,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10566,
                      "src": "1822:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:44:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1808:58:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1884:22:7",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7968,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7881,
                              "src": "1885:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7874_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7970,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7969,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7956,
                              "src": "1895:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1885:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7874_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7971,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUsed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7871,
                          "src": "1885:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20697320616c726561647920696e20757365",
                        "id": 7973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1908:28:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
                          "typeString": "literal_string \"Solution is already in use\""
                        },
                        "value": "Solution is already in use"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
                          "typeString": "literal_string \"Solution is already in use\""
                        }
                      ],
                      "id": 7967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10575,
                        10576
                      ],
                      "referencedDeclaration": 10576,
                      "src": "1876:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7975,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:61:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7978,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7938,
                            "src": "1964:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7979,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7944,
                            "src": "1967:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7980,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7948,
                            "src": "1970:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7981,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7952,
                            "src": "1973:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7977,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10556,
                          "src": "1955:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                          }
                        },
                        "id": 7982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1955:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f66206973206e6f742076616c6964",
                        "id": 7983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1982:20:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        },
                        "value": "Proof is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        }
                      ],
                      "id": 7976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10575,
                        10576
                      ],
                      "referencedDeclaration": 10576,
                      "src": "1947:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7985,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:56:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7987,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7956,
                        "src": "2025:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7988,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10572,
                          "src": "2030:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2030:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7986,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7930,
                      "src": "2013:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7991,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:28:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7993,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7932,
                        "src": "2056:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7994,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7934,
                        "src": "2060:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7992,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7998,
                        1465
                      ],
                      "referencedDeclaration": 1465,
                      "src": "2051:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2051:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7996,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:17:7"
                }
              ]
            },
            "documentation": null,
            "id": 7998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7932,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7998,
                  "src": "1625:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7934,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7998,
                  "src": "1645:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7938,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7998,
                  "src": "1670:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7935,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1670:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7937,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1678:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1670:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7944,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7998,
                  "src": "1699:22:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7939,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1699:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7941,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1707:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1699:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7943,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1710:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1699:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7948,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7998,
                  "src": "1731:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7945,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1731:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7947,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1739:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1731:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7952,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7998,
                  "src": "1760:24:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7949,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1760:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7951,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1768:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1760:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1615:175:7"
            },
            "returnParameters": {
              "id": 7954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1798:0:7"
            },
            "scope": 7999,
            "src": "1602:473:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8000,
        "src": "379:1698:7"
      }
    ],
    "src": "0:2078:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7999
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7860,
        "name": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "attributes": {
          "SourceUnit": 1467,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 8000,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7861,
        "name": "ImportDirective",
        "src": "141:30:7"
      },
      {
        "attributes": {
          "SourceUnit": 10558,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 8000,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7862,
        "name": "ImportDirective",
        "src": "172:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 236,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 8000,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7863,
        "name": "ImportDirective",
        "src": "197:59:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            1466,
            1007,
            398,
            1305,
            462,
            508,
            1415,
            7858,
            10557
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7999,
            1466,
            1415,
            7858,
            1305,
            1007,
            508,
            462,
            398,
            10557
          ],
          "name": "SolnSquareVerifier",
          "scope": 8000
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10557,
                  "type": "contract Verifier"
                },
                "id": 7864,
                "name": "UserDefinedTypeName",
                "src": "414:8:7"
              }
            ],
            "id": 7865,
            "name": "InheritanceSpecifier",
            "src": "414:8:7"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Mintable",
                  "referencedDeclaration": 1466,
                  "type": "contract ERC721Mintable"
                },
                "id": 7866,
                "name": "UserDefinedTypeName",
                "src": "428:14:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "5265616c457374617465546f6b656e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"RealEstateToken\"",
                  "value": "RealEstateToken"
                },
                "id": 7867,
                "name": "Literal",
                "src": "443:17:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "524554",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"RET\"",
                  "value": "RET"
                },
                "id": 7868,
                "name": "Literal",
                "src": "462:5:7"
              }
            ],
            "id": 7869,
            "name": "InheritanceSpecifier",
            "src": "428:40:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7999,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "isUsed",
                  "scope": 7874,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7870,
                    "name": "ElementaryTypeName",
                    "src": "575:4:7"
                  }
                ],
                "id": 7871,
                "name": "VariableDeclaration",
                "src": "575:11:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "sender",
                  "scope": 7874,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7872,
                    "name": "ElementaryTypeName",
                    "src": "596:7:7"
                  }
                ],
                "id": 7873,
                "name": "VariableDeclaration",
                "src": "596:14:7"
              }
            ],
            "id": 7874,
            "name": "StructDefinition",
            "src": "549:68:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionCount",
              "scope": 7999,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7875,
                "name": "ElementaryTypeName",
                "src": "623:7:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 7876,
                "name": "Literal",
                "src": "647:1:7"
              }
            ],
            "id": 7877,
            "name": "VariableDeclaration",
            "src": "623:25:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7999,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7878,
                    "name": "ElementaryTypeName",
                    "src": "830:7:7"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7874,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7879,
                    "name": "UserDefinedTypeName",
                    "src": "841:8:7"
                  }
                ],
                "id": 7880,
                "name": "Mapping",
                "src": "822:28:7"
              }
            ],
            "id": 7881,
            "name": "VariableDeclaration",
            "src": "822:46:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "AddedSolution"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "key",
                      "scope": 7887,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7882,
                        "name": "ElementaryTypeName",
                        "src": "955:7:7"
                      }
                    ],
                    "id": 7883,
                    "name": "VariableDeclaration",
                    "src": "955:11:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "sender",
                      "scope": 7887,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7884,
                        "name": "ElementaryTypeName",
                        "src": "968:7:7"
                      }
                    ],
                    "id": 7885,
                    "name": "VariableDeclaration",
                    "src": "968:14:7"
                  }
                ],
                "id": 7886,
                "name": "ParameterList",
                "src": "954:29:7"
              }
            ],
            "id": 7887,
            "name": "EventDefinition",
            "src": "935:49:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7999,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
                      "scope": 7930,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7888,
                        "name": "ElementaryTypeName",
                        "src": "1094:7:7"
                      }
                    ],
                    "id": 7889,
                    "name": "VariableDeclaration",
                    "src": "1094:11:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sender",
                      "scope": 7930,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7890,
                        "name": "ElementaryTypeName",
                        "src": "1107:7:7"
                      }
                    ],
                    "id": 7891,
                    "name": "VariableDeclaration",
                    "src": "1107:14:7"
                  }
                ],
                "id": 7892,
                "name": "ParameterList",
                "src": "1093:29:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7893,
                "name": "ParameterList",
                "src": "1132:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
                                  "typeString": "literal_string \"Solution is already in use\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10575,
                                10576
                              ],
                              "referencedDeclaration": 10576,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7894,
                            "name": "Identifier",
                            "src": "1142:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isUsed",
                                  "referencedDeclaration": 7871,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7881,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutions"
                                        },
                                        "id": 7895,
                                        "name": "Identifier",
                                        "src": "1151:9:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7889,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7896,
                                        "name": "Identifier",
                                        "src": "1161:3:7"
                                      }
                                    ],
                                    "id": 7897,
                                    "name": "IndexAccess",
                                    "src": "1151:14:7"
                                  }
                                ],
                                "id": 7898,
                                "name": "MemberAccess",
                                "src": "1151:21:7"
                              }
                            ],
                            "id": 7899,
                            "name": "UnaryOperation",
                            "src": "1150:22:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20697320616c726561647920696e20757365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is already in use\"",
                              "value": "Solution is already in use"
                            },
                            "id": 7900,
                            "name": "Literal",
                            "src": "1174:28:7"
                          }
                        ],
                        "id": 7901,
                        "name": "FunctionCall",
                        "src": "1142:61:7"
                      }
                    ],
                    "id": 7902,
                    "name": "ExpressionStatement",
                    "src": "1142:61:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7877,
                              "type": "uint256",
                              "value": "solutionCount"
                            },
                            "id": 7903,
                            "name": "Identifier",
                            "src": "1213:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 75,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7877,
                                      "type": "uint256",
                                      "value": "solutionCount"
                                    },
                                    "id": 7904,
                                    "name": "Identifier",
                                    "src": "1229:13:7"
                                  }
                                ],
                                "id": 7905,
                                "name": "MemberAccess",
                                "src": "1229:17:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 7906,
                                "name": "Literal",
                                "src": "1247:1:7"
                              }
                            ],
                            "id": 7907,
                            "name": "FunctionCall",
                            "src": "1229:20:7"
                          }
                        ],
                        "id": 7908,
                        "name": "Assignment",
                        "src": "1213:36:7"
                      }
                    ],
                    "id": 7909,
                    "name": "ExpressionStatement",
                    "src": "1213:36:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "isUsed",
                              "referencedDeclaration": 7871,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7881,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutions"
                                    },
                                    "id": 7910,
                                    "name": "Identifier",
                                    "src": "1259:9:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7889,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7911,
                                    "name": "Identifier",
                                    "src": "1269:3:7"
                                  }
                                ],
                                "id": 7912,
                                "name": "IndexAccess",
                                "src": "1259:14:7"
                              }
                            ],
                            "id": 7913,
                            "name": "MemberAccess",
                            "src": "1259:21:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7914,
                            "name": "Literal",
                            "src": "1283:4:7"
                          }
                        ],
                        "id": 7915,
                        "name": "Assignment",
                        "src": "1259:28:7"
                      }
                    ],
                    "id": 7916,
                    "name": "ExpressionStatement",
                    "src": "1259:28:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "sender",
                              "referencedDeclaration": 7873,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7881,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutions"
                                    },
                                    "id": 7917,
                                    "name": "Identifier",
                                    "src": "1297:9:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7889,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7918,
                                    "name": "Identifier",
                                    "src": "1307:3:7"
                                  }
                                ],
                                "id": 7919,
                                "name": "IndexAccess",
                                "src": "1297:14:7"
                              }
                            ],
                            "id": 7920,
                            "name": "MemberAccess",
                            "src": "1297:21:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7891,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 7921,
                            "name": "Identifier",
                            "src": "1321:6:7"
                          }
                        ],
                        "id": 7922,
                        "name": "Assignment",
                        "src": "1297:30:7"
                      }
                    ],
                    "id": 7923,
                    "name": "ExpressionStatement",
                    "src": "1297:30:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7887,
                              "type": "function (bytes32,address)",
                              "value": "AddedSolution"
                            },
                            "id": 7924,
                            "name": "Identifier",
                            "src": "1342:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7889,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7925,
                            "name": "Identifier",
                            "src": "1356:3:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7891,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 7926,
                            "name": "Identifier",
                            "src": "1361:6:7"
                          }
                        ],
                        "id": 7927,
                        "name": "FunctionCall",
                        "src": "1342:26:7"
                      }
                    ],
                    "id": 7928,
                    "name": "EmitStatement",
                    "src": "1337:31:7"
                  }
                ],
                "id": 7929,
                "name": "Block",
                "src": "1132:243:7"
              }
            ],
            "id": 7930,
            "name": "FunctionDefinition",
            "src": "1073:302:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 7999,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7998,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7931,
                        "name": "ElementaryTypeName",
                        "src": "1625:7:7"
                      }
                    ],
                    "id": 7932,
                    "name": "VariableDeclaration",
                    "src": "1625:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7998,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7933,
                        "name": "ElementaryTypeName",
                        "src": "1645:7:7"
                      }
                    ],
                    "id": 7934,
                    "name": "VariableDeclaration",
                    "src": "1645:15:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7998,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7935,
                            "name": "ElementaryTypeName",
                            "src": "1670:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7936,
                            "name": "Literal",
                            "src": "1678:1:7"
                          }
                        ],
                        "id": 7937,
                        "name": "ArrayTypeName",
                        "src": "1670:10:7"
                      }
                    ],
                    "id": 7938,
                    "name": "VariableDeclaration",
                    "src": "1670:19:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7998,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 7939,
                                "name": "ElementaryTypeName",
                                "src": "1699:7:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7940,
                                "name": "Literal",
                                "src": "1707:1:7"
                              }
                            ],
                            "id": 7941,
                            "name": "ArrayTypeName",
                            "src": "1699:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7942,
                            "name": "Literal",
                            "src": "1710:1:7"
                          }
                        ],
                        "id": 7943,
                        "name": "ArrayTypeName",
                        "src": "1699:13:7"
                      }
                    ],
                    "id": 7944,
                    "name": "VariableDeclaration",
                    "src": "1699:22:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7998,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7945,
                            "name": "ElementaryTypeName",
                            "src": "1731:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7946,
                            "name": "Literal",
                            "src": "1739:1:7"
                          }
                        ],
                        "id": 7947,
                        "name": "ArrayTypeName",
                        "src": "1731:10:7"
                      }
                    ],
                    "id": 7948,
                    "name": "VariableDeclaration",
                    "src": "1731:19:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputs",
                      "scope": 7998,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7949,
                            "name": "ElementaryTypeName",
                            "src": "1760:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7950,
                            "name": "Literal",
                            "src": "1768:1:7"
                          }
                        ],
                        "id": 7951,
                        "name": "ArrayTypeName",
                        "src": "1760:10:7"
                      }
                    ],
                    "id": 7952,
                    "name": "VariableDeclaration",
                    "src": "1760:24:7"
                  }
                ],
                "id": 7953,
                "name": "ParameterList",
                "src": "1615:175:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7954,
                "name": "ParameterList",
                "src": "1798:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7956
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7997,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7955,
                            "name": "ElementaryTypeName",
                            "src": "1808:7:7"
                          }
                        ],
                        "id": 7956,
                        "name": "VariableDeclaration",
                        "src": "1808:11:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10566,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7957,
                            "name": "Identifier",
                            "src": "1822:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10559,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7958,
                                    "name": "Identifier",
                                    "src": "1832:3:7"
                                  }
                                ],
                                "id": 7959,
                                "name": "MemberAccess",
                                "src": "1832:16:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7938,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7960,
                                "name": "Identifier",
                                "src": "1849:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7944,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7961,
                                "name": "Identifier",
                                "src": "1852:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7948,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7962,
                                "name": "Identifier",
                                "src": "1855:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7952,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 7963,
                                "name": "Identifier",
                                "src": "1858:6:7"
                              }
                            ],
                            "id": 7964,
                            "name": "FunctionCall",
                            "src": "1832:33:7"
                          }
                        ],
                        "id": 7965,
                        "name": "FunctionCall",
                        "src": "1822:44:7"
                      }
                    ],
                    "id": 7966,
                    "name": "VariableDeclarationStatement",
                    "src": "1808:58:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5fe46eaa5f5b403f988d6e7f3fa51a7c0f1de57474653c424752d0029678e406",
                                  "typeString": "literal_string \"Solution is already in use\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10575,
                                10576
                              ],
                              "referencedDeclaration": 10576,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7967,
                            "name": "Identifier",
                            "src": "1876:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isUsed",
                                  "referencedDeclaration": 7871,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7881,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutions"
                                        },
                                        "id": 7968,
                                        "name": "Identifier",
                                        "src": "1885:9:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7956,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7969,
                                        "name": "Identifier",
                                        "src": "1895:3:7"
                                      }
                                    ],
                                    "id": 7970,
                                    "name": "IndexAccess",
                                    "src": "1885:14:7"
                                  }
                                ],
                                "id": 7971,
                                "name": "MemberAccess",
                                "src": "1885:21:7"
                              }
                            ],
                            "id": 7972,
                            "name": "UnaryOperation",
                            "src": "1884:22:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20697320616c726561647920696e20757365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is already in use\"",
                              "value": "Solution is already in use"
                            },
                            "id": 7973,
                            "name": "Literal",
                            "src": "1908:28:7"
                          }
                        ],
                        "id": 7974,
                        "name": "FunctionCall",
                        "src": "1876:61:7"
                      }
                    ],
                    "id": 7975,
                    "name": "ExpressionStatement",
                    "src": "1876:61:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                                  "typeString": "literal_string \"Proof is not valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10575,
                                10576
                              ],
                              "referencedDeclaration": 10576,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7976,
                            "name": "Identifier",
                            "src": "1947:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10556,
                                  "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)",
                                  "value": "verifyTx"
                                },
                                "id": 7977,
                                "name": "Identifier",
                                "src": "1955:8:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7938,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7978,
                                "name": "Identifier",
                                "src": "1964:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7944,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7979,
                                "name": "Identifier",
                                "src": "1967:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7948,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7980,
                                "name": "Identifier",
                                "src": "1970:1:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7952,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 7981,
                                "name": "Identifier",
                                "src": "1973:6:7"
                              }
                            ],
                            "id": 7982,
                            "name": "FunctionCall",
                            "src": "1955:25:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f6f66206973206e6f742076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proof is not valid\"",
                              "value": "Proof is not valid"
                            },
                            "id": 7983,
                            "name": "Literal",
                            "src": "1982:20:7"
                          }
                        ],
                        "id": 7984,
                        "name": "FunctionCall",
                        "src": "1947:56:7"
                      }
                    ],
                    "id": 7985,
                    "name": "ExpressionStatement",
                    "src": "1947:56:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7930,
                              "type": "function (bytes32,address)",
                              "value": "addSolution"
                            },
                            "id": 7986,
                            "name": "Identifier",
                            "src": "2013:11:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7956,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7987,
                            "name": "Identifier",
                            "src": "2025:3:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10572,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7988,
                                "name": "Identifier",
                                "src": "2030:3:7"
                              }
                            ],
                            "id": 7989,
                            "name": "MemberAccess",
                            "src": "2030:10:7"
                          }
                        ],
                        "id": 7990,
                        "name": "FunctionCall",
                        "src": "2013:28:7"
                      }
                    ],
                    "id": 7991,
                    "name": "ExpressionStatement",
                    "src": "2013:28:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                7998,
                                1465
                              ],
                              "referencedDeclaration": 1465,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "mint"
                            },
                            "id": 7992,
                            "name": "Identifier",
                            "src": "2051:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7932,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7993,
                            "name": "Identifier",
                            "src": "2056:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7934,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7994,
                            "name": "Identifier",
                            "src": "2060:7:7"
                          }
                        ],
                        "id": 7995,
                        "name": "FunctionCall",
                        "src": "2051:17:7"
                      }
                    ],
                    "id": 7996,
                    "name": "ExpressionStatement",
                    "src": "2051:17:7"
                  }
                ],
                "id": 7997,
                "name": "Block",
                "src": "1798:277:7"
              }
            ],
            "id": 7998,
            "name": "FunctionDefinition",
            "src": "1602:473:7"
          }
        ],
        "id": 7999,
        "name": "ContractDefinition",
        "src": "379:1698:7"
      }
    ],
    "id": 8000,
    "name": "SourceUnit",
    "src": "0:2078:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-11T02:52:10.052Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}